{"ast":null,"code":"import _defineProperty from \"C:/Users/USUARIO/Desktop/CURSO EM V\\xCDDEO/4Fit/4fit-frontend/sakai-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class, _class2;\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nconst _c0 = [\"container\"];\nfunction _class_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction _class_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown\", function _class_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onGutterMouseDown($event, i_r3));\n    })(\"touchstart\", function _class_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onGutterTouchStart($event, i_r3));\n    });\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n  }\n}\nfunction _class_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, _class_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, _class_ng_template_2_div_2_Template, 2, 1, \"div\", 4);\n  }\n  if (rf & 2) {\n    const panel_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass())(\"ngStyle\", ctx_r1.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\nclass Splitter {\n  /**\n   * Size of the elements relative to 100%.\n   * @group Props\n   */\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  /**\n   * Callback to invoke when resize ends.\n   * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n   * @group Emits\n   */\n\n  constructor(document, platformId, renderer, cd, el) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"platformId\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Style class of the panel.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyleClass\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Inline style of the panel.\n     * @group Props\n     */\n    _defineProperty(this, \"panelStyle\", void 0);\n    /**\n     * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n     * @group Props\n     */\n    _defineProperty(this, \"stateStorage\", 'session');\n    /**\n     * Storage identifier of a stateful Splitter.\n     * @group Props\n     */\n    _defineProperty(this, \"stateKey\", null);\n    /**\n     * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n     * @group Props\n     */\n    _defineProperty(this, \"layout\", 'horizontal');\n    /**\n     * Size of the divider in pixels.\n     * @group Props\n     */\n    _defineProperty(this, \"gutterSize\", 4);\n    /**\n     * Minimum size of the elements relative to 100%.\n     * @group Props\n     */\n    _defineProperty(this, \"minSizes\", []);\n    _defineProperty(this, \"onResizeEnd\", new EventEmitter());\n    /**\n     * Callback to invoke when resize starts.\n     * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n     * @group Emits\n     */\n    _defineProperty(this, \"onResizeStart\", new EventEmitter());\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"containerViewChild\", void 0);\n    _defineProperty(this, \"nested\", false);\n    _defineProperty(this, \"panels\", []);\n    _defineProperty(this, \"dragging\", false);\n    _defineProperty(this, \"mouseMoveListener\", void 0);\n    _defineProperty(this, \"mouseUpListener\", void 0);\n    _defineProperty(this, \"touchMoveListener\", void 0);\n    _defineProperty(this, \"touchEndListener\", void 0);\n    _defineProperty(this, \"size\", void 0);\n    _defineProperty(this, \"gutterElement\", void 0);\n    _defineProperty(this, \"startPos\", void 0);\n    _defineProperty(this, \"prevPanelElement\", void 0);\n    _defineProperty(this, \"nextPanelElement\", void 0);\n    _defineProperty(this, \"nextPanelSize\", void 0);\n    _defineProperty(this, \"prevPanelSize\", void 0);\n    _defineProperty(this, \"_panelSizes\", []);\n    _defineProperty(this, \"prevPanelIndex\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n    this.window = this.document.defaultView;\n  }\n  ngOnInit() {\n    this.nested = this.isNested();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'panel':\n          this.panels.push(item.template);\n          break;\n        default:\n          this.panels.push(item.template);\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    if (this.panels && this.panels.length) {\n      let initialized = false;\n      if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n        initialized = this.restoreState();\n      }\n      if (!initialized) {\n        let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n        let _panelSizes = [0, 0];\n        this.panels.map((panel, i) => {\n          let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n          let panelSize = panelInitialSize || 100 / this.panels.length;\n          _panelSizes[i] = panelSize;\n          children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        });\n        this._panelSizes = _panelSizes;\n      }\n    }\n  }\n  resizeStart(event, index) {\n    this.gutterElement = event.currentTarget;\n    this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n    this.dragging = true;\n    this.startPos = this.horizontal() ? event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n    this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n    this.prevPanelIndex = index;\n    DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event) {\n    let newPos;\n    if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n    let newPrevPanelSize = this.prevPanelSize + newPos;\n    let newNextPanelSize = this.nextPanelSize - newPos;\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', event => {\n        this.onResize(event);\n      });\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      });\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', event => {\n        this.onResize(event.changedTouches[0]);\n      });\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = this.renderer.listen(this.document, 'touchend', event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      });\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      this.mouseMoveListener();\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      this.mouseUpListener();\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      this.touchMoveListener();\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      this.touchEndListener();\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n      while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    if (isPlatformBrowser(this.platformId)) {\n      switch (this.stateStorage) {\n        case 'local':\n          return this.window.localStorage;\n        case 'session':\n          return this.window.sessionStorage;\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    } else {\n      throw new Error('Storage is not a available by default on the server.');\n    }\n  }\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === 'horizontal',\n      'p-splitter-vertical': this.layout === 'vertical'\n    };\n  }\n  panelContainerClass() {\n    return {\n      'p-splitter-panel': true,\n      'p-splitter-panel-nested': true\n    };\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n}\n_class = Splitter;\n_defineProperty(Splitter, \"\\u0275fac\", function _class_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n});\n_defineProperty(Splitter, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function _class_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function _class_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function _class_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    minSizes: \"minSizes\",\n    panelSizes: \"panelSizes\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\",\n    onResizeStart: \"onResizeStart\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", 4, \"ngIf\"], [1, \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\"], [1, \"p-splitter-gutter-handle\"]],\n  template: function _class_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, _class_ng_template_2_Template, 3, 6, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element',\n        '[class.p-splitter-panel-nested]': 'nested'\n      },\n      styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass SplitterModule {}\n_class2 = SplitterModule;\n_defineProperty(SplitterModule, \"\\u0275fac\", function _class2_Factory(t) {\n  return new (t || _class2)();\n});\n_defineProperty(SplitterModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class2\n}));\n_defineProperty(SplitterModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, SharedModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Input","Output","ContentChildren","ViewChild","NgModule","i1","isPlatformBrowser","DOCUMENT","CommonModule","DomHandler","PrimeTemplate","SharedModule","_c0","_class_ng_template_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","_class_ng_template_2_div_2_Template","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","_class_ng_template_2_div_2_Template_div_mousedown_0_listener","$event","ɵɵrestoreView","i_r3","ɵɵnextContext","index","ctx_r6","ɵɵresetView","onGutterMouseDown","_class_ng_template_2_div_2_Template_div_touchstart_0_listener","ctx_r9","onGutterTouchStart","ɵɵelement","ɵɵelementEnd","ctx_r5","ɵɵproperty","gutterStyle","_class_ng_template_2_Template","ɵɵtemplate","panel_r2","$implicit","ctx_r1","ɵɵclassMap","panelStyleClass","panelContainerClass","panelStyle","ɵɵadvance","panels","length","Splitter","panelSizes","_panelSizes","val","el","nativeElement","children","filter","child","hasClass","map","panel","i","panelInitialSize","panelSize","style","flexBasis","gutterSize","constructor","document","platformId","renderer","cd","_defineProperty","window","defaultView","ngOnInit","nested","isNested","ngAfterContentInit","templates","forEach","item","getType","push","template","ngAfterViewInit","initialized","isStateful","restoreState","resizeStart","event","gutterElement","currentTarget","size","horizontal","getWidth","containerViewChild","getHeight","dragging","startPos","MouseEvent","pageX","changedTouches","pageY","prevPanelElement","previousElementSibling","nextPanelElement","nextElementSibling","prevPanelSize","getOuterWidth","getOuterHeight","nextPanelSize","prevPanelIndex","addClass","onResizeStart","emit","originalEvent","sizes","onResize","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","onResizeEnd","removeClass","clear","bindMouseListeners","cancelable","bindTouchListeners","preventDefault","onGutterTouchEnd","unbindTouchListeners","minSizes","mouseMoveListener","listen","mouseUpListener","unbindMouseListeners","touchMoveListener","touchEndListener","parent","parentElement","stateKey","getStorage","stateStorage","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","layout","width","height","_class","_class_Factory","t","ɵɵdirectiveInject","Renderer2","ChangeDetectorRef","ElementRef","ɵɵdefineComponent","type","selectors","contentQueries","_class_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_class_Query","ɵɵviewQuery","first","hostAttrs","hostVars","hostBindings","_class_HostBindings","ɵɵclassProp","inputs","styleClass","outputs","decls","vars","consts","_class_Template","dependencies","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","class","Document","decorators","undefined","static","SplitterModule","_class2","_class2_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/USUARIO/Desktop/CURSO EM VÍDEO/4Fit/4fit-frontend/sakai-ng/node_modules/primeng/fesm2022/primeng-splitter.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nclass Splitter {\n    document;\n    platformId;\n    renderer;\n    cd;\n    el;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the panel.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the panel.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n     * @group Props\n     */\n    stateStorage = 'session';\n    /**\n     * Storage identifier of a stateful Splitter.\n     * @group Props\n     */\n    stateKey = null;\n    /**\n     * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n     * @group Props\n     */\n    layout = 'horizontal';\n    /**\n     * Size of the divider in pixels.\n     * @group Props\n     */\n    gutterSize = 4;\n    /**\n     * Minimum size of the elements relative to 100%.\n     * @group Props\n     */\n    minSizes = [];\n    /**\n     * Size of the elements relative to 100%.\n     * @group Props\n     */\n    get panelSizes() {\n        return this._panelSizes;\n    }\n    set panelSizes(val) {\n        this._panelSizes = val;\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\n            let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            let _panelSizes = [];\n            this.panels.map((panel, i) => {\n                let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                let panelSize = panelInitialSize || 100 / this.panels.length;\n                _panelSizes[i] = panelSize;\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n        }\n    }\n    /**\n     * Callback to invoke when resize ends.\n     * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n     * @group Emits\n     */\n    onResizeEnd = new EventEmitter();\n    /**\n     * Callback to invoke when resize starts.\n     * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n     * @group Emits\n     */\n    onResizeStart = new EventEmitter();\n    templates;\n    containerViewChild;\n    nested = false;\n    panels = [];\n    dragging = false;\n    mouseMoveListener;\n    mouseUpListener;\n    touchMoveListener;\n    touchEndListener;\n    size;\n    gutterElement;\n    startPos;\n    prevPanelElement;\n    nextPanelElement;\n    nextPanelSize;\n    prevPanelSize;\n    _panelSizes = [];\n    prevPanelIndex;\n    window;\n    constructor(document, platformId, renderer, cd, el) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n        this.window = this.document.defaultView;\n    }\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                    break;\n                default:\n                    this.panels.push(item.template);\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful() && isPlatformBrowser(this.platformId)) {\n                initialized = this.restoreState();\n            }\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [0, 0];\n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                    let panelSize = panelInitialSize || 100 / this.panels.length;\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n                });\n                this._panelSizes = _panelSizes;\n            }\n        }\n    }\n    resizeStart(event, index) {\n        this.gutterElement = event.currentTarget;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        this.dragging = true;\n        this.startPos = this.horizontal() ? (event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX) : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        this.prevPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true))) / this.size;\n        this.nextPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true))) / this.size;\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.onResizeStart.emit({ originalEvent: event, sizes: this._panelSizes });\n    }\n    onResize(event) {\n        let newPos;\n        if (this.horizontal())\n            newPos = (event.pageX * 100) / this.size - (this.startPos * 100) / this.size;\n        else\n            newPos = (event.pageY * 100) / this.size - (this.startPos * 100) / this.size;\n        let newPrevPanelSize = this.prevPanelSize + newPos;\n        let newNextPanelSize = this.nextPanelSize - newPos;\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.resizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.resizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', (event) => {\n                this.onResize(event);\n            });\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', (event) => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            });\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', (event) => {\n                this.onResize(event.changedTouches[0]);\n            });\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = this.renderer.listen(this.document, 'touchend', (event) => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            this.mouseMoveListener();\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            this.mouseUpListener();\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            this.touchMoveListener();\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            this.touchEndListener();\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        if (isPlatformBrowser(this.platformId)) {\n            switch (this.stateStorage) {\n                case 'local':\n                    return this.window.localStorage;\n                case 'session':\n                    return this.window.sessionStorage;\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        }\n        else {\n            throw new Error('Storage is not a available by default on the server.');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === 'horizontal',\n            'p-splitter-vertical': this.layout === 'vertical'\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Splitter, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Splitter, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: \"gutterSize\", minSizes: \"minSizes\", panelSizes: \"panelSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\", onResizeStart: \"onResizeStart\" }, host: { properties: { \"class.p-splitter-panel-nested\": \"nested\" }, classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-splitter', template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element',\n                        '[class.p-splitter-panel-nested]': 'nested'\n                    }, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], minSizes: [{\n                type: Input\n            }], panelSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], onResizeStart: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }] } });\nclass SplitterModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, declarations: [Splitter], imports: [CommonModule], exports: [Splitter, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, imports: [CommonModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Splitter, SharedModule],\n                    declarations: [Splitter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}