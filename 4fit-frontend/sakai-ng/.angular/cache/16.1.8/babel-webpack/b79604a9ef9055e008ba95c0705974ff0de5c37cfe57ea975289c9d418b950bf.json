{"ast":null,"code":"import _defineProperty from \"C:/Users/USUARIO/Desktop/CURSO EM V\\xCDDEO/4Fit/4fit-frontend/sakai-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class, _class2;\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nfunction _class__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"x\", 50)(\"y\", 57)(\"fill\", ctx_r0.textColor)(\"name\", ctx_r0.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.valueToDisplay());\n  }\n}\nconst KNOB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Knob),\n  multi: true\n};\n/**\n * Knob is a form component to define number inputs with a dial.\n * @group Components\n */\nclass Knob {\n  constructor(document, renderer, cd, el) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"renderer\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Background of the value.\n     * @group Props\n     */\n    _defineProperty(this, \"valueColor\", 'var(--primary-color, Black)');\n    /**\n     * Background color of the range.\n     * @group Props\n     */\n    _defineProperty(this, \"rangeColor\", 'var(--surface-border, LightGray)');\n    /**\n     * Color of the value text.\n     * @group Props\n     */\n    _defineProperty(this, \"textColor\", 'var(--text-color-secondary, Black)');\n    /**\n     * Template string of the value.\n     * @group Props\n     */\n    _defineProperty(this, \"valueTemplate\", '{value}');\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    _defineProperty(this, \"name\", void 0);\n    /**\n     * Size of the component in pixels.\n     * @group Props\n     */\n    _defineProperty(this, \"size\", 100);\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    _defineProperty(this, \"step\", 1);\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    _defineProperty(this, \"min\", 0);\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    _defineProperty(this, \"max\", 100);\n    /**\n     * Width of the knob stroke.\n     * @group Props\n     */\n    _defineProperty(this, \"strokeWidth\", 14);\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    _defineProperty(this, \"disabled\", void 0);\n    /**\n     * Whether the show the value inside the knob.\n     * @group Props\n     */\n    _defineProperty(this, \"showValue\", true);\n    /**\n     * When present, it specifies that the component value cannot be edited.\n     * @group Props\n     */\n    _defineProperty(this, \"readonly\", false);\n    /**\n     * Callback to invoke on value change.\n     * @param {number} value - New value.\n     * @group Emits\n     */\n    _defineProperty(this, \"onChange\", new EventEmitter());\n    _defineProperty(this, \"radius\", 40);\n    _defineProperty(this, \"midX\", 50);\n    _defineProperty(this, \"midY\", 50);\n    _defineProperty(this, \"minRadians\", 4 * Math.PI / 3);\n    _defineProperty(this, \"maxRadians\", -Math.PI / 3);\n    _defineProperty(this, \"value\", 0);\n    _defineProperty(this, \"windowMouseMoveListener\", void 0);\n    _defineProperty(this, \"windowMouseUpListener\", void 0);\n    _defineProperty(this, \"windowTouchMoveListener\", void 0);\n    _defineProperty(this, \"windowTouchEndListener\", void 0);\n    _defineProperty(this, \"onModelChange\", () => {});\n    _defineProperty(this, \"onModelTouched\", () => {});\n    this.document = document;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.el = el;\n  }\n  mapRange(x, inMin, inMax, outMin, outMax) {\n    return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n  }\n  onClick(event) {\n    if (!this.disabled && !this.readonly) {\n      this.updateValue(event.offsetX, event.offsetY);\n    }\n  }\n  updateValue(offsetX, offsetY) {\n    let dx = offsetX - this.size / 2;\n    let dy = this.size / 2 - offsetY;\n    let angle = Math.atan2(dy, dx);\n    let start = -Math.PI / 2 - Math.PI / 6;\n    this.updateModel(angle, start);\n  }\n  updateModel(angle, start) {\n    let mappedValue;\n    if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);else return;\n    let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n    this.value = newValue;\n    this.onModelChange(this.value);\n    this.onChange.emit(this.value);\n  }\n  onMouseDown(event) {\n    if (!this.disabled && !this.readonly) {\n      const window = this.document.defaultView || 'window';\n      this.windowMouseMoveListener = this.renderer.listen(window, 'mousemove', this.onMouseMove.bind(this));\n      this.windowMouseUpListener = this.renderer.listen(window, 'mouseup', this.onMouseUp.bind(this));\n      event.preventDefault();\n    }\n  }\n  onMouseUp(event) {\n    if (!this.disabled && !this.readonly) {\n      if (this.windowMouseMoveListener) {\n        this.windowMouseMoveListener();\n        this.windowMouseUpListener = null;\n      }\n      if (this.windowMouseUpListener) {\n        this.windowMouseUpListener();\n        this.windowMouseMoveListener = null;\n      }\n      event.preventDefault();\n    }\n  }\n  onTouchStart(event) {\n    if (!this.disabled && !this.readonly) {\n      const window = this.document.defaultView || 'window';\n      this.windowTouchMoveListener = this.renderer.listen(window, 'touchmove', this.onTouchMove.bind(this));\n      this.windowTouchEndListener = this.renderer.listen(window, 'touchend', this.onTouchEnd.bind(this));\n      event.preventDefault();\n    }\n  }\n  onTouchEnd(event) {\n    if (!this.disabled && !this.readonly) {\n      if (this.windowTouchMoveListener) {\n        this.windowTouchMoveListener();\n      }\n      if (this.windowTouchEndListener) {\n        this.windowTouchEndListener();\n      }\n      this.windowTouchMoveListener = null;\n      this.windowTouchEndListener = null;\n      event.preventDefault();\n    }\n  }\n  onMouseMove(event) {\n    if (!this.disabled && !this.readonly) {\n      this.updateValue(event.offsetX, event.offsetY);\n      event.preventDefault();\n    }\n  }\n  onTouchMove(event) {\n    if (!this.disabled && !this.readonly && event instanceof TouchEvent && event.touches.length === 1) {\n      const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n      const touch = event.targetTouches.item(0);\n      if (touch) {\n        const offsetX = touch.clientX - rect.left;\n        const offsetY = touch.clientY - rect.top;\n        this.updateValue(offsetX, offsetY);\n      }\n    }\n  }\n  writeValue(value) {\n    this.value = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  containerClass() {\n    return {\n      'p-knob p-component': true,\n      'p-disabled': this.disabled\n    };\n  }\n  rangePath() {\n    return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n  }\n  valuePath() {\n    return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n  }\n  zeroRadians() {\n    if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n  }\n  valueRadians() {\n    return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n  }\n  minX() {\n    return this.midX + Math.cos(this.minRadians) * this.radius;\n  }\n  minY() {\n    return this.midY - Math.sin(this.minRadians) * this.radius;\n  }\n  maxX() {\n    return this.midX + Math.cos(this.maxRadians) * this.radius;\n  }\n  maxY() {\n    return this.midY - Math.sin(this.maxRadians) * this.radius;\n  }\n  zeroX() {\n    return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n  }\n  zeroY() {\n    return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n  }\n  valueX() {\n    return this.midX + Math.cos(this.valueRadians()) * this.radius;\n  }\n  valueY() {\n    return this.midY - Math.sin(this.valueRadians()) * this.radius;\n  }\n  largeArc() {\n    return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n  }\n  sweep() {\n    return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n  }\n  valueToDisplay() {\n    return this.valueTemplate.replace('{value}', this._value.toString());\n  }\n  get _value() {\n    return this.value != null ? this.value : this.min;\n  }\n}\n_class = Knob;\n_defineProperty(Knob, \"\\u0275fac\", function _class_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n});\n_defineProperty(Knob, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"p-knob\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    styleClass: \"styleClass\",\n    style: \"style\",\n    valueColor: \"valueColor\",\n    rangeColor: \"rangeColor\",\n    textColor: \"textColor\",\n    valueTemplate: \"valueTemplate\",\n    name: \"name\",\n    size: \"size\",\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    strokeWidth: \"strokeWidth\",\n    disabled: \"disabled\",\n    showValue: \"showValue\",\n    readonly: \"readonly\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([KNOB_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 15,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"viewBox\", \"0 0 100 100\", 3, \"click\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchend\"], [1, \"p-knob-range\"], [1, \"p-knob-value\"], [\"text-anchor\", \"middle\", \"class\", \"p-knob-text\", 4, \"ngIf\"], [\"text-anchor\", \"middle\", 1, \"p-knob-text\"]],\n  template: function _class_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵlistener(\"click\", function _class_Template__svg_svg_click_1_listener($event) {\n        return ctx.onClick($event);\n      })(\"mousedown\", function _class_Template__svg_svg_mousedown_1_listener($event) {\n        return ctx.onMouseDown($event);\n      })(\"mouseup\", function _class_Template__svg_svg_mouseup_1_listener($event) {\n        return ctx.onMouseUp($event);\n      })(\"touchstart\", function _class_Template__svg_svg_touchstart_1_listener($event) {\n        return ctx.onTouchStart($event);\n      })(\"touchend\", function _class_Template__svg_svg_touchend_1_listener($event) {\n        return ctx.onTouchEnd($event);\n      });\n      i0.ɵɵelement(2, \"path\", 2)(3, \"path\", 3);\n      i0.ɵɵtemplate(4, _class__svg_text_4_Template, 2, 5, \"text\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.size + \"px\")(\"height\", ctx.size + \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"d\", ctx.rangePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.rangeColor);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"d\", ctx.valuePath())(\"stroke-width\", ctx.strokeWidth)(\"stroke\", ctx.valueColor);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n  styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Knob, [{\n    type: Component,\n    args: [{\n      selector: 'p-knob',\n      template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `,\n      providers: [KNOB_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    valueColor: [{\n      type: Input\n    }],\n    rangeColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueTemplate: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\nclass KnobModule {}\n_class2 = KnobModule;\n_defineProperty(KnobModule, \"\\u0275fac\", function _class2_Factory(t) {\n  return new (t || _class2)();\n});\n_defineProperty(KnobModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class2\n}));\n_defineProperty(KnobModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KnobModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Knob],\n      declarations: [Knob]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };","map":{"version":3,"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","NgModule","i1","DOCUMENT","CommonModule","NG_VALUE_ACCESSOR","_class__svg_text_4_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","textColor","name","ɵɵadvance","ɵɵtextInterpolate","valueToDisplay","KNOB_VALUE_ACCESSOR","provide","useExisting","Knob","multi","constructor","document","renderer","cd","el","_defineProperty","Math","PI","mapRange","x","inMin","inMax","outMin","outMax","onClick","event","disabled","readonly","updateValue","offsetX","offsetY","dx","size","dy","angle","atan2","start","updateModel","mappedValue","maxRadians","minRadians","min","max","newValue","round","step","value","onModelChange","onChange","emit","onMouseDown","window","defaultView","windowMouseMoveListener","listen","onMouseMove","bind","windowMouseUpListener","onMouseUp","preventDefault","onTouchStart","windowTouchMoveListener","onTouchMove","windowTouchEndListener","onTouchEnd","TouchEvent","touches","length","rect","nativeElement","children","getBoundingClientRect","touch","targetTouches","item","clientX","left","clientY","top","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","onModelTouched","setDisabledState","val","containerClass","rangePath","minX","minY","radius","maxX","maxY","valuePath","zeroX","zeroY","largeArc","sweep","valueX","valueY","zeroRadians","valueRadians","_value","midX","cos","midY","sin","abs","valueTemplate","replace","toString","_class","_class_Factory","t","ɵɵdirectiveInject","Renderer2","ChangeDetectorRef","ElementRef","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","styleClass","style","valueColor","rangeColor","strokeWidth","showValue","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","_class_Template","ɵɵlistener","_class_Template__svg_svg_click_1_listener","$event","_class_Template__svg_svg_mousedown_1_listener","_class_Template__svg_svg_mouseup_1_listener","_class_Template__svg_svg_touchstart_1_listener","_class_Template__svg_svg_touchend_1_listener","ɵɵelement","ɵɵtemplate","ɵɵclassMap","ɵɵproperty","ɵɵstyleProp","dependencies","NgClass","NgIf","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","None","host","class","Document","decorators","KnobModule","_class2","_class2_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/USUARIO/Desktop/CURSO EM VÍDEO/4Fit/4fit-frontend/sakai-ng/node_modules/primeng/fesm2022/primeng-knob.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst KNOB_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Knob),\n    multi: true\n};\n/**\n * Knob is a form component to define number inputs with a dial.\n * @group Components\n */\nclass Knob {\n    document;\n    renderer;\n    cd;\n    el;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Background of the value.\n     * @group Props\n     */\n    valueColor = 'var(--primary-color, Black)';\n    /**\n     * Background color of the range.\n     * @group Props\n     */\n    rangeColor = 'var(--surface-border, LightGray)';\n    /**\n     * Color of the value text.\n     * @group Props\n     */\n    textColor = 'var(--text-color-secondary, Black)';\n    /**\n     * Template string of the value.\n     * @group Props\n     */\n    valueTemplate = '{value}';\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Size of the component in pixels.\n     * @group Props\n     */\n    size = 100;\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    step = 1;\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    min = 0;\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    max = 100;\n    /**\n     * Width of the knob stroke.\n     * @group Props\n     */\n    strokeWidth = 14;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the show the value inside the knob.\n     * @group Props\n     */\n    showValue = true;\n    /**\n     * When present, it specifies that the component value cannot be edited.\n     * @group Props\n     */\n    readonly = false;\n    /**\n     * Callback to invoke on value change.\n     * @param {number} value - New value.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    radius = 40;\n    midX = 50;\n    midY = 50;\n    minRadians = (4 * Math.PI) / 3;\n    maxRadians = -Math.PI / 3;\n    value = 0;\n    windowMouseMoveListener;\n    windowMouseUpListener;\n    windowTouchMoveListener;\n    windowTouchEndListener;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    constructor(document, renderer, cd, el) {\n        this.document = document;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.el = el;\n    }\n    mapRange(x, inMin, inMax, outMin, outMax) {\n        return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n    onClick(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n        }\n    }\n    updateValue(offsetX, offsetY) {\n        let dx = offsetX - this.size / 2;\n        let dy = this.size / 2 - offsetY;\n        let angle = Math.atan2(dy, dx);\n        let start = -Math.PI / 2 - Math.PI / 6;\n        this.updateModel(angle, start);\n    }\n    updateModel(angle, start) {\n        let mappedValue;\n        if (angle > this.maxRadians)\n            mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n        else if (angle < start)\n            mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n        else\n            return;\n        let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n        this.value = newValue;\n        this.onModelChange(this.value);\n        this.onChange.emit(this.value);\n    }\n    onMouseDown(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowMouseMoveListener = this.renderer.listen(window, 'mousemove', this.onMouseMove.bind(this));\n            this.windowMouseUpListener = this.renderer.listen(window, 'mouseup', this.onMouseUp.bind(this));\n            event.preventDefault();\n        }\n    }\n    onMouseUp(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowMouseMoveListener) {\n                this.windowMouseMoveListener();\n                this.windowMouseUpListener = null;\n            }\n            if (this.windowMouseUpListener) {\n                this.windowMouseUpListener();\n                this.windowMouseMoveListener = null;\n            }\n            event.preventDefault();\n        }\n    }\n    onTouchStart(event) {\n        if (!this.disabled && !this.readonly) {\n            const window = this.document.defaultView || 'window';\n            this.windowTouchMoveListener = this.renderer.listen(window, 'touchmove', this.onTouchMove.bind(this));\n            this.windowTouchEndListener = this.renderer.listen(window, 'touchend', this.onTouchEnd.bind(this));\n            event.preventDefault();\n        }\n    }\n    onTouchEnd(event) {\n        if (!this.disabled && !this.readonly) {\n            if (this.windowTouchMoveListener) {\n                this.windowTouchMoveListener();\n            }\n            if (this.windowTouchEndListener) {\n                this.windowTouchEndListener();\n            }\n            this.windowTouchMoveListener = null;\n            this.windowTouchEndListener = null;\n            event.preventDefault();\n        }\n    }\n    onMouseMove(event) {\n        if (!this.disabled && !this.readonly) {\n            this.updateValue(event.offsetX, event.offsetY);\n            event.preventDefault();\n        }\n    }\n    onTouchMove(event) {\n        if (!this.disabled && !this.readonly && event instanceof TouchEvent && event.touches.length === 1) {\n            const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n            const touch = event.targetTouches.item(0);\n            if (touch) {\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n                this.updateValue(offsetX, offsetY);\n            }\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    containerClass() {\n        return {\n            'p-knob p-component': true,\n            'p-disabled': this.disabled\n        };\n    }\n    rangePath() {\n        return `M ${this.minX()} ${this.minY()} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX()} ${this.maxY()}`;\n    }\n    valuePath() {\n        return `M ${this.zeroX()} ${this.zeroY()} A ${this.radius} ${this.radius} 0 ${this.largeArc()} ${this.sweep()} ${this.valueX()} ${this.valueY()}`;\n    }\n    zeroRadians() {\n        if (this.min > 0 && this.max > 0)\n            return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n        else\n            return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    valueRadians() {\n        return this.mapRange(this._value, this.min, this.max, this.minRadians, this.maxRadians);\n    }\n    minX() {\n        return this.midX + Math.cos(this.minRadians) * this.radius;\n    }\n    minY() {\n        return this.midY - Math.sin(this.minRadians) * this.radius;\n    }\n    maxX() {\n        return this.midX + Math.cos(this.maxRadians) * this.radius;\n    }\n    maxY() {\n        return this.midY - Math.sin(this.maxRadians) * this.radius;\n    }\n    zeroX() {\n        return this.midX + Math.cos(this.zeroRadians()) * this.radius;\n    }\n    zeroY() {\n        return this.midY - Math.sin(this.zeroRadians()) * this.radius;\n    }\n    valueX() {\n        return this.midX + Math.cos(this.valueRadians()) * this.radius;\n    }\n    valueY() {\n        return this.midY - Math.sin(this.valueRadians()) * this.radius;\n    }\n    largeArc() {\n        return Math.abs(this.zeroRadians() - this.valueRadians()) < Math.PI ? 0 : 1;\n    }\n    sweep() {\n        return this.valueRadians() > this.zeroRadians() ? 0 : 1;\n    }\n    valueToDisplay() {\n        return this.valueTemplate.replace('{value}', this._value.toString());\n    }\n    get _value() {\n        return this.value != null ? this.value : this.min;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Knob, deps: [{ token: DOCUMENT }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Knob, selector: \"p-knob\", inputs: { styleClass: \"styleClass\", style: \"style\", valueColor: \"valueColor\", rangeColor: \"rangeColor\", textColor: \"textColor\", valueTemplate: \"valueTemplate\", name: \"name\", size: \"size\", step: \"step\", min: \"min\", max: \"max\", strokeWidth: \"strokeWidth\", disabled: \"disabled\", showValue: \"showValue\", readonly: \"readonly\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [KNOB_VALUE_ACCESSOR], ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, isInline: true, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Knob, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-knob', template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <svg\n                viewBox=\"0 0 100 100\"\n                [style.width]=\"size + 'px'\"\n                [style.height]=\"size + 'px'\"\n                (click)=\"onClick($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (mouseup)=\"onMouseUp($event)\"\n                (touchstart)=\"onTouchStart($event)\"\n                (touchend)=\"onTouchEnd($event)\"\n            >\n                <path [attr.d]=\"rangePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"rangeColor\" class=\"p-knob-range\"></path>\n                <path [attr.d]=\"valuePath()\" [attr.stroke-width]=\"strokeWidth\" [attr.stroke]=\"valueColor\" class=\"p-knob-value\"></path>\n                <text *ngIf=\"showValue\" [attr.x]=\"50\" [attr.y]=\"57\" text-anchor=\"middle\" [attr.fill]=\"textColor\" class=\"p-knob-text\" [attr.name]=\"name\">{{ valueToDisplay() }}</text>\n            </svg>\n        </div>\n    `, providers: [KNOB_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@keyframes dash-frame{to{stroke-dashoffset:0}}.p-knob-range{fill:none;transition:stroke .1s ease-in}.p-knob-value{animation-name:dash-frame;animation-fill-mode:forwards;fill:none}.p-knob-text{font-size:1.3rem;text-align:center}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], valueColor: [{\n                type: Input\n            }], rangeColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueTemplate: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\nclass KnobModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: KnobModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: KnobModule, declarations: [Knob], imports: [CommonModule], exports: [Knob] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: KnobModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: KnobModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Knob],\n                    declarations: [Knob]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KNOB_VALUE_ACCESSOR, Knob, KnobModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}