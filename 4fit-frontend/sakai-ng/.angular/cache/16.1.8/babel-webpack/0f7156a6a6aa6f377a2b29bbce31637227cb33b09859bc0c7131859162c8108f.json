{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NodeService {\n  constructor(http) {\n    this.http = http;\n  }\n  getFiles() {\n    return this.http.get('assets/demo/data/files.json').toPromise().then(res => res.data);\n  }\n  getLazyFiles() {\n    return this.http.get('assets/demo/data/files-lazy.json').toPromise().then(res => res.data);\n  }\n  getFilesystem() {\n    return this.http.get('assets/demo/data/filesystem.json').toPromise().then(res => res.data);\n  }\n  getLazyFilesystem() {\n    return this.http.get('assets/demo/data/filesystem-lazy.json').toPromise().then(res => res.data);\n  }\n}\n_class = NodeService;\n_class.ɵfac = function NodeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["NodeService","constructor","http","getFiles","get","toPromise","then","res","data","getLazyFiles","getFilesystem","getLazyFilesystem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\USUARIO\\Desktop\\CURSO EM VÍDEO\\4Fit\\4fit-frontend\\sakai-ng\\src\\app\\demo\\service\\node.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Injectable()\r\nexport class NodeService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getFiles() {\r\n        return this.http.get<any>('assets/demo/data/files.json')\r\n            .toPromise()\r\n            .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getLazyFiles() {\r\n        return this.http.get<any>('assets/demo/data/files-lazy.json')\r\n            .toPromise()\r\n            .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getFilesystem() {\r\n        return this.http.get<any>('assets/demo/data/filesystem.json')\r\n            .toPromise()\r\n            .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getLazyFilesystem() {\r\n        return this.http.get<any>('assets/demo/data/filesystem-lazy.json')\r\n            .toPromise()\r\n            .then(res => res.data as TreeNode[]);\r\n    }\r\n}\r\n"],"mappings":";;;AAKA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,6BAA6B,CAAC,CACnDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAM,kCAAkC,CAAC,CACxDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAE,aAAaA,CAAA;IACT,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAM,kCAAkC,CAAC,CACxDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;EAEAG,iBAAiBA,CAAA;IACb,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAkB,CAAC;EAC5C;;SA1BSR,WAAW;;mBAAXA,MAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXf,MAAW;EAAAgB,OAAA,EAAXhB,MAAW,CAAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}