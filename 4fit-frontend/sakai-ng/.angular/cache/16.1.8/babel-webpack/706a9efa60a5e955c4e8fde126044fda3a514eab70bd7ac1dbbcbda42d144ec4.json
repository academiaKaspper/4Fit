{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MenuService {\n  constructor() {\n    this.menuSource = new Subject();\n    this.resetSource = new Subject();\n    this.menuSource$ = this.menuSource.asObservable();\n    this.resetSource$ = this.resetSource.asObservable();\n  }\n  onMenuStateChange(event) {\n    this.menuSource.next(event);\n  }\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n_class = MenuService;\n_class.ɵfac = function MenuService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","MenuService","constructor","menuSource","resetSource","menuSource$","asObservable","resetSource$","onMenuStateChange","event","next","reset","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USUARIO\\Desktop\\CURSO EM VÍDEO\\4Fit\\4fit-frontend\\sakai-ng\\src\\app\\layout\\app.menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MenuChangeEvent } from './api/menuchangeevent';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n    private menuSource = new Subject<MenuChangeEvent>();\r\n    private resetSource = new Subject();\r\n\r\n    menuSource$ = this.menuSource.asObservable();\r\n    resetSource$ = this.resetSource.asObservable();\r\n\r\n    onMenuStateChange(event: MenuChangeEvent) {\r\n        this.menuSource.next(event);\r\n    }\r\n\r\n    reset() {\r\n        this.resetSource.next(true);\r\n    }\r\n}\r\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAM9B,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKY,KAAAC,UAAU,GAAG,IAAIH,OAAO,EAAmB;IAC3C,KAAAI,WAAW,GAAG,IAAIJ,OAAO,EAAE;IAEnC,KAAAK,WAAW,GAAG,IAAI,CAACF,UAAU,CAACG,YAAY,EAAE;IAC5C,KAAAC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACE,YAAY,EAAE;;EAE9CE,iBAAiBA,CAACC,KAAsB;IACpC,IAAI,CAACN,UAAU,CAACO,IAAI,CAACD,KAAK,CAAC;EAC/B;EAEAE,KAAKA,CAAA;IACD,IAAI,CAACP,WAAW,CAACM,IAAI,CAAC,IAAI,CAAC;EAC/B;;SAdST,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAW,OAAA,EAAXX,MAAW,CAAAY,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}