{"ast":null,"code":"import _defineProperty from \"C:/Users/USUARIO/Desktop/CURSO EM V\\xCDDEO/4Fit/4fit-frontend/sakai-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n  static addClass(element, className) {\n    if (element && className) {\n      if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n    }\n  }\n  static addMultipleClasses(element, className) {\n    if (element && className) {\n      if (element.classList) {\n        let styles = className.trim().split(' ');\n        for (let i = 0; i < styles.length; i++) {\n          element.classList.add(styles[i]);\n        }\n      } else {\n        let styles = className.split(' ');\n        for (let i = 0; i < styles.length; i++) {\n          element.className += ' ' + styles[i];\n        }\n      }\n    }\n  }\n  static removeClass(element, className) {\n    if (element && className) {\n      if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n  static hasClass(element, className) {\n    if (element && className) {\n      if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n    return false;\n  }\n  static siblings(element) {\n    return Array.prototype.filter.call(element.parentNode.children, function (child) {\n      return child !== element;\n    });\n  }\n  static find(element, selector) {\n    return Array.from(element.querySelectorAll(selector));\n  }\n  static findSingle(element, selector) {\n    if (element) {\n      return element.querySelector(selector);\n    }\n    return null;\n  }\n  static index(element) {\n    let children = element.parentNode.childNodes;\n    let num = 0;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].nodeType == 1) num++;\n    }\n    return -1;\n  }\n  static indexWithinGroup(element, attributeName) {\n    let children = element.parentNode ? element.parentNode.childNodes : [];\n    let num = 0;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n    }\n    return -1;\n  }\n  static appendOverlay(overlay, target, appendTo = 'self') {\n    if (appendTo !== 'self' && overlay && target) {\n      this.appendChild(overlay, target);\n    }\n  }\n  static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n    if (overlay && target) {\n      if (calculateMinWidth) {\n        overlay.style.minWidth = `${DomHandler.getOuterWidth(target)}px`;\n      }\n      if (appendTo === 'self') {\n        this.relativePosition(overlay, target);\n      } else {\n        this.absolutePosition(overlay, target);\n      }\n    }\n  }\n  static relativePosition(element, target) {\n    const getClosestRelativeElement = el => {\n      if (!el) return;\n      return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n    };\n    const elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const windowScrollTop = this.getWindowScrollTop();\n    const windowScrollLeft = this.getWindowScrollLeft();\n    const viewport = this.getViewport();\n    const relativeElement = getClosestRelativeElement(element);\n    const relativeElementOffset = relativeElement?.getBoundingClientRect() || {\n      top: -1 * windowScrollTop,\n      left: -1 * windowScrollLeft\n    };\n    let top, left;\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n      element.style.transformOrigin = 'bottom';\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight + targetOffset.top - relativeElementOffset.top;\n      element.style.transformOrigin = 'top';\n    }\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = (targetOffset.left - relativeElementOffset.left) * -1;\n    } else if (targetOffset.left - relativeElementOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left - relativeElementOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = targetOffset.left - relativeElementOffset.left;\n    }\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n  static absolutePosition(element, target) {\n    const elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const elementOuterHeight = elementDimensions.height;\n    const elementOuterWidth = elementDimensions.width;\n    const targetOuterHeight = target.offsetHeight;\n    const targetOuterWidth = target.offsetWidth;\n    const targetOffset = target.getBoundingClientRect();\n    const windowScrollTop = this.getWindowScrollTop();\n    const windowScrollLeft = this.getWindowScrollLeft();\n    const viewport = this.getViewport();\n    let top, left;\n    if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n      top = targetOffset.top + windowScrollTop - elementOuterHeight;\n      element.style.transformOrigin = 'bottom';\n      if (top < 0) {\n        top = windowScrollTop;\n      }\n    } else {\n      top = targetOuterHeight + targetOffset.top + windowScrollTop;\n      element.style.transformOrigin = 'top';\n    }\n    if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n  static getParents(element, parents = []) {\n    return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n  }\n  static getScrollableParents(element) {\n    let scrollableParents = [];\n    if (element) {\n      let parents = this.getParents(element);\n      const overflowRegex = /(auto|scroll)/;\n      const overflowCheck = node => {\n        let styleDeclaration = window['getComputedStyle'](node, null);\n        return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n      };\n      for (let parent of parents) {\n        let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n        if (scrollSelectors) {\n          let selectors = scrollSelectors.split(',');\n          for (let selector of selectors) {\n            let el = this.findSingle(parent, selector);\n            if (el && overflowCheck(el)) {\n              scrollableParents.push(el);\n            }\n          }\n        }\n        if (parent.nodeType !== 9 && overflowCheck(parent)) {\n          scrollableParents.push(parent);\n        }\n      }\n    }\n    return scrollableParents;\n  }\n  static getHiddenElementOuterHeight(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementHeight = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementHeight;\n  }\n  static getHiddenElementOuterWidth(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementWidth = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementWidth;\n  }\n  static getHiddenElementDimensions(element) {\n    let dimensions = {};\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return dimensions;\n  }\n  static scrollInView(container, item) {\n    let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    let scroll = container.scrollTop;\n    let elementHeight = container.clientHeight;\n    let itemHeight = this.getOuterHeight(item);\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  }\n  static fadeIn(element, duration) {\n    element.style.opacity = 0;\n    let last = +new Date();\n    let opacity = 0;\n    let tick = function () {\n      opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n      element.style.opacity = opacity;\n      last = +new Date();\n      if (+opacity < 1) {\n        window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n      }\n    };\n    tick();\n  }\n  static fadeOut(element, ms) {\n    var opacity = 1,\n      interval = 50,\n      duration = ms,\n      gap = interval / duration;\n    let fading = setInterval(() => {\n      opacity = opacity - gap;\n      if (opacity <= 0) {\n        opacity = 0;\n        clearInterval(fading);\n      }\n      element.style.opacity = opacity;\n    }, interval);\n  }\n  static getWindowScrollTop() {\n    let doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  }\n  static getWindowScrollLeft() {\n    let doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  }\n  static matches(element, selector) {\n    var p = Element.prototype;\n    var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n      return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n    return f.call(element, selector);\n  }\n  static getOuterWidth(el, margin) {\n    let width = el.offsetWidth;\n    if (margin) {\n      let style = getComputedStyle(el);\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    return width;\n  }\n  static getHorizontalPadding(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n  static getHorizontalMargin(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  }\n  static innerWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n  static width(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n  static getInnerHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    return height;\n  }\n  static getOuterHeight(el, margin) {\n    let height = el.offsetHeight;\n    if (margin) {\n      let style = getComputedStyle(el);\n      height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    }\n    return height;\n  }\n  static getHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    return height;\n  }\n  static getWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n    return width;\n  }\n  static getViewport() {\n    let win = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  }\n  static getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n      left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n    };\n  }\n  static replaceElementWith(element, replacementElement) {\n    let parentNode = element.parentNode;\n    if (!parentNode) throw `Can't replace element`;\n    return parentNode.replaceChild(replacementElement, element);\n  }\n  static getUserAgent() {\n    if (navigator && this.isClient()) {\n      return navigator.userAgent;\n    }\n  }\n  static isIE() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return true;\n    }\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      var rv = ua.indexOf('rv:');\n      return true;\n    }\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return true;\n    }\n    // other browser\n    return false;\n  }\n  static isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n  }\n  static isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  }\n  static isTouchDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n  static appendChild(element, target) {\n    if (this.isElement(target)) target.appendChild(element);else if (target && target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;\n  }\n  static removeChild(element, target) {\n    if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;\n  }\n  static removeElement(element) {\n    if (!('remove' in Element.prototype)) element.parentNode.removeChild(element);else element.remove();\n  }\n  static isElement(obj) {\n    return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n  }\n  static calculateScrollbarWidth(el) {\n    if (el) {\n      let style = getComputedStyle(el);\n      return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n    } else {\n      if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;\n      let scrollDiv = document.createElement('div');\n      scrollDiv.className = 'p-scrollbar-measure';\n      document.body.appendChild(scrollDiv);\n      let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      this.calculatedScrollbarWidth = scrollbarWidth;\n      return scrollbarWidth;\n    }\n  }\n  static calculateScrollbarHeight() {\n    if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;\n    let scrollDiv = document.createElement('div');\n    scrollDiv.className = 'p-scrollbar-measure';\n    document.body.appendChild(scrollDiv);\n    let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n    document.body.removeChild(scrollDiv);\n    this.calculatedScrollbarWidth = scrollbarHeight;\n    return scrollbarHeight;\n  }\n  static invokeElementMethod(element, methodName, args) {\n    element[methodName].apply(element, args);\n  }\n  static clearSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {\n        //ignore IE bug\n      }\n    }\n  }\n  static getBrowser() {\n    if (!this.browser) {\n      let matched = this.resolveUserAgent();\n      this.browser = {};\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n    return this.browser;\n  }\n  static resolveUserAgent() {\n    let ua = navigator.userAgent.toLowerCase();\n    let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n    return {\n      browser: match[1] || '',\n      version: match[2] || '0'\n    };\n  }\n  static isInteger(value) {\n    if (Number.isInteger) {\n      return Number.isInteger(value);\n    } else {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    }\n  }\n  static isHidden(element) {\n    return !element || element.offsetParent === null;\n  }\n  static isVisible(element) {\n    return element && element.offsetParent != null;\n  }\n  static isExist(element) {\n    return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n  }\n  static focus(element, options) {\n    element && document.activeElement !== element && element.focus(options);\n  }\n  static getFocusableElements(element) {\n    let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]):not(.p-disabled)`);\n    let visibleFocusableElements = [];\n    for (let focusableElement of focusableElements) {\n      if (!!(focusableElement.offsetWidth || focusableElement.offsetHeight || focusableElement.getClientRects().length)) visibleFocusableElements.push(focusableElement);\n    }\n    return visibleFocusableElements;\n  }\n  static getNextFocusableElement(element, reverse = false) {\n    const focusableElements = DomHandler.getFocusableElements(element);\n    let index = 0;\n    if (focusableElements && focusableElements.length > 0) {\n      const focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n      if (reverse) {\n        if (focusedIndex == -1 || focusedIndex === 0) {\n          index = focusableElements.length - 1;\n        } else {\n          index = focusedIndex - 1;\n        }\n      } else if (focusedIndex != -1 && focusedIndex !== focusableElements.length - 1) {\n        index = focusedIndex + 1;\n      }\n    }\n    return focusableElements[index];\n  }\n  static generateZIndex() {\n    this.zindex = this.zindex || 999;\n    return ++this.zindex;\n  }\n  static getSelection() {\n    if (window.getSelection) return window.getSelection().toString();else if (document.getSelection) return document.getSelection().toString();else if (document['selection']) return document['selection'].createRange().text;\n    return null;\n  }\n  static getTargetElement(target, el) {\n    if (!target) return null;\n    switch (target) {\n      case 'document':\n        return document;\n      case 'window':\n        return window;\n      case '@next':\n        return el?.nextElementSibling;\n      case '@prev':\n        return el?.previousElementSibling;\n      case '@parent':\n        return el?.parentElement;\n      case '@grandparent':\n        return el?.parentElement.parentElement;\n      default:\n        const type = typeof target;\n        if (type === 'string') {\n          return document.querySelector(target);\n        } else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n          return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n        }\n        const isFunction = obj => !!(obj && obj.constructor && obj.call && obj.apply);\n        const element = isFunction(target) ? target() : target;\n        return element && element.nodeType === 9 || this.isExist(element) ? element : null;\n    }\n  }\n  static isClient() {\n    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n  }\n}\n_defineProperty(DomHandler, \"zindex\", 1000);\n_defineProperty(DomHandler, \"calculatedScrollbarWidth\", null);\n_defineProperty(DomHandler, \"calculatedScrollbarHeight\", null);\n_defineProperty(DomHandler, \"browser\", void 0);\nclass ConnectedOverlayScrollHandler {\n  constructor(element, listener = () => {}) {\n    _defineProperty(this, \"element\", void 0);\n    _defineProperty(this, \"listener\", void 0);\n    _defineProperty(this, \"scrollableParents\", void 0);\n    this.element = element;\n    this.listener = listener;\n  }\n  bindScrollListener() {\n    this.scrollableParents = DomHandler.getScrollableParents(this.element);\n    for (let i = 0; i < this.scrollableParents.length; i++) {\n      this.scrollableParents[i].addEventListener('scroll', this.listener);\n    }\n  }\n  unbindScrollListener() {\n    if (this.scrollableParents) {\n      for (let i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].removeEventListener('scroll', this.listener);\n      }\n    }\n  }\n  destroy() {\n    this.unbindScrollListener();\n    this.element = null;\n    this.listener = null;\n    this.scrollableParents = null;\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };","map":{"version":3,"names":["DomHandler","addClass","element","className","classList","add","addMultipleClasses","styles","trim","split","i","length","removeClass","remove","replace","RegExp","join","hasClass","contains","test","siblings","Array","prototype","filter","call","parentNode","children","child","find","selector","from","querySelectorAll","findSingle","querySelector","index","childNodes","num","nodeType","indexWithinGroup","attributeName","attributes","appendOverlay","overlay","target","appendTo","appendChild","alignOverlay","calculateMinWidth","style","minWidth","getOuterWidth","relativePosition","absolutePosition","getClosestRelativeElement","el","getComputedStyle","getPropertyValue","parentElement","elementDimensions","offsetParent","width","offsetWidth","height","offsetHeight","getHiddenElementDimensions","targetHeight","targetOffset","getBoundingClientRect","windowScrollTop","getWindowScrollTop","windowScrollLeft","getWindowScrollLeft","viewport","getViewport","relativeElement","relativeElementOffset","top","left","transformOrigin","elementOuterHeight","elementOuterWidth","targetOuterHeight","targetOuterWidth","Math","max","getParents","parents","concat","getScrollableParents","scrollableParents","overflowRegex","overflowCheck","node","styleDeclaration","window","parent","scrollSelectors","dataset","selectors","push","getHiddenElementOuterHeight","visibility","display","elementHeight","getHiddenElementOuterWidth","elementWidth","dimensions","scrollInView","container","item","borderTopValue","borderTop","parseFloat","paddingTopValue","paddingTop","containerRect","itemRect","offset","document","body","scrollTop","scroll","clientHeight","itemHeight","getOuterHeight","fadeIn","duration","opacity","last","Date","tick","getTime","requestAnimationFrame","setTimeout","fadeOut","ms","interval","gap","fading","setInterval","clearInterval","doc","documentElement","pageYOffset","clientTop","pageXOffset","scrollLeft","clientLeft","matches","p","Element","f","webkitMatchesSelector","s","indexOf","margin","marginLeft","marginRight","getHorizontalPadding","paddingLeft","paddingRight","getHorizontalMargin","innerWidth","getInnerHeight","paddingBottom","marginTop","marginBottom","getHeight","borderTopWidth","borderBottomWidth","getWidth","borderLeftWidth","borderRightWidth","win","d","e","g","getElementsByTagName","w","clientWidth","h","innerHeight","getOffset","rect","replaceElementWith","replacementElement","replaceChild","getUserAgent","navigator","isClient","userAgent","isIE","ua","msie","trident","rv","edge","isIOS","isAndroid","isTouchDevice","maxTouchPoints","isElement","nativeElement","removeChild","removeElement","obj","HTMLElement","nodeName","calculateScrollbarWidth","calculatedScrollbarWidth","scrollDiv","createElement","scrollbarWidth","calculateScrollbarHeight","calculatedScrollbarHeight","scrollbarHeight","invokeElementMethod","methodName","args","apply","clearSelection","getSelection","empty","removeAllRanges","rangeCount","getRangeAt","getClientRects","error","getBrowser","browser","matched","resolveUserAgent","version","toLowerCase","match","exec","isInteger","value","Number","isFinite","floor","isHidden","isVisible","isExist","focus","options","activeElement","getFocusableElements","focusableElements","visibleFocusableElements","focusableElement","getNextFocusableElement","reverse","focusedIndex","ownerDocument","generateZIndex","zindex","toString","createRange","text","getTargetElement","nextElementSibling","previousElementSibling","type","hasOwnProperty","undefined","isFunction","constructor","_defineProperty","ConnectedOverlayScrollHandler","listener","bindScrollListener","addEventListener","unbindScrollListener","removeEventListener","destroy"],"sources":["C:/Users/USUARIO/Desktop/CURSO EM VÍDEO/4Fit/4fit-frontend/sakai-ng/node_modules/primeng/fesm2022/primeng-dom.mjs"],"sourcesContent":["/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n    static zindex = 1000;\n    static calculatedScrollbarWidth = null;\n    static calculatedScrollbarHeight = null;\n    static browser;\n    static addClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.add(className);\n            else\n                element.className += ' ' + className;\n        }\n    }\n    static addMultipleClasses(element, className) {\n        if (element && className) {\n            if (element.classList) {\n                let styles = className.trim().split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.classList.add(styles[i]);\n                }\n            }\n            else {\n                let styles = className.split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.className += ' ' + styles[i];\n                }\n            }\n        }\n    }\n    static removeClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.remove(className);\n            else\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n    static hasClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                return element.classList.contains(className);\n            else\n                return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n        return false;\n    }\n    static siblings(element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n    static find(element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    }\n    static index(element) {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static appendOverlay(overlay, target, appendTo = 'self') {\n        if (appendTo !== 'self' && overlay && target) {\n            this.appendChild(overlay, target);\n        }\n    }\n    static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n        if (overlay && target) {\n            if (calculateMinWidth) {\n                overlay.style.minWidth = `${DomHandler.getOuterWidth(target)}px`;\n            }\n            if (appendTo === 'self') {\n                this.relativePosition(overlay, target);\n            }\n            else {\n                this.absolutePosition(overlay, target);\n            }\n        }\n    }\n    static relativePosition(element, target) {\n        const getClosestRelativeElement = (el) => {\n            if (!el)\n                return;\n            return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n        };\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        const relativeElement = getClosestRelativeElement(element);\n        const relativeElementOffset = relativeElement?.getBoundingClientRect() || { top: -1 * windowScrollTop, left: -1 * windowScrollLeft };\n        let top, left;\n        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n            top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n            element.style.transformOrigin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight + targetOffset.top - relativeElementOffset.top;\n            element.style.transformOrigin = 'top';\n        }\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left) * -1;\n        }\n        else if (targetOffset.left - relativeElementOffset.left + elementDimensions.width > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = targetOffset.left - relativeElementOffset.left;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static absolutePosition(element, target) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const elementOuterHeight = elementDimensions.height;\n        const elementOuterWidth = elementDimensions.width;\n        const targetOuterHeight = target.offsetHeight;\n        const targetOuterWidth = target.offsetWidth;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        let top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static getParents(element, parents = []) {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n        let scrollableParents = [];\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n                if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                    scrollableParents.push(parent);\n                }\n            }\n        }\n        return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n        let dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    }\n    static scrollInView(container, item) {\n        let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if (offset + itemHeight > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n    static fadeIn(element, duration) {\n        element.style.opacity = 0;\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    }\n    static fadeOut(element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    }\n    static getWindowScrollTop() {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] ||\n            p.webkitMatchesSelector ||\n            p['mozMatchesSelector'] ||\n            p['msMatchesSelector'] ||\n            function (s) {\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n            };\n        return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n        let width = el.offsetWidth;\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    }\n    static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n    static getOuterHeight(el, margin) {\n        let height = el.offsetHeight;\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    }\n    static getHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    }\n    static getWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    }\n    static getViewport() {\n        let win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    }\n    static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n        };\n    }\n    static replaceElementWith(element, replacementElement) {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n        if (navigator && this.isClient()) {\n            return navigator.userAgent;\n        }\n    }\n    static isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    }\n    static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    static isTouchDevice() {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    static appendChild(element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target && target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n    static isElement(obj) {\n        return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    static calculateScrollbarWidth(el) {\n        if (el) {\n            let style = getComputedStyle(el);\n            return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            let scrollDiv = document.createElement('div');\n            scrollDiv.className = 'p-scrollbar-measure';\n            document.body.appendChild(scrollDiv);\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    }\n    static calculateScrollbarHeight() {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.className = 'p-scrollbar-measure';\n        document.body.appendChild(scrollDiv);\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n        element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    }\n    static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    }\n    static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) || [];\n        return {\n            browser: match[1] || '',\n            version: match[2] || '0'\n        };\n    }\n    static isInteger(value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n        }\n    }\n    static isHidden(element) {\n        return !element || element.offsetParent === null;\n    }\n    static isVisible(element) {\n        return element && element.offsetParent != null;\n    }\n    static isExist(element) {\n        return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n    }\n    static focus(element, options) {\n        element && document.activeElement !== element && element.focus(options);\n    }\n    static getFocusableElements(element) {\n        let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]):not(.p-disabled)`);\n        let visibleFocusableElements = [];\n        for (let focusableElement of focusableElements) {\n            if (!!(focusableElement.offsetWidth || focusableElement.offsetHeight || focusableElement.getClientRects().length))\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    }\n    static getNextFocusableElement(element, reverse = false) {\n        const focusableElements = DomHandler.getFocusableElements(element);\n        let index = 0;\n        if (focusableElements && focusableElements.length > 0) {\n            const focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n            if (reverse) {\n                if (focusedIndex == -1 || focusedIndex === 0) {\n                    index = focusableElements.length - 1;\n                }\n                else {\n                    index = focusedIndex - 1;\n                }\n            }\n            else if (focusedIndex != -1 && focusedIndex !== focusableElements.length - 1) {\n                index = focusedIndex + 1;\n            }\n        }\n        return focusableElements[index];\n    }\n    static generateZIndex() {\n        this.zindex = this.zindex || 999;\n        return ++this.zindex;\n    }\n    static getSelection() {\n        if (window.getSelection)\n            return window.getSelection().toString();\n        else if (document.getSelection)\n            return document.getSelection().toString();\n        else if (document['selection'])\n            return document['selection'].createRange().text;\n        return null;\n    }\n    static getTargetElement(target, el) {\n        if (!target)\n            return null;\n        switch (target) {\n            case 'document':\n                return document;\n            case 'window':\n                return window;\n            case '@next':\n                return el?.nextElementSibling;\n            case '@prev':\n                return el?.previousElementSibling;\n            case '@parent':\n                return el?.parentElement;\n            case '@grandparent':\n                return el?.parentElement.parentElement;\n            default:\n                const type = typeof target;\n                if (type === 'string') {\n                    return document.querySelector(target);\n                }\n                else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n                    return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n                }\n                const isFunction = (obj) => !!(obj && obj.constructor && obj.call && obj.apply);\n                const element = isFunction(target) ? target() : target;\n                return (element && element.nodeType === 9) || this.isExist(element) ? element : null;\n        }\n    }\n    static isClient() {\n        return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n    }\n}\n\nclass ConnectedOverlayScrollHandler {\n    element;\n    listener;\n    scrollableParents;\n    constructor(element, listener = () => { }) {\n        this.element = element;\n        this.listener = listener;\n    }\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,CAAC;EAKb,OAAOC,QAAQA,CAACC,OAAO,EAAEC,SAAS,EAAE;IAChC,IAAID,OAAO,IAAIC,SAAS,EAAE;MACtB,IAAID,OAAO,CAACE,SAAS,EACjBF,OAAO,CAACE,SAAS,CAACC,GAAG,CAACF,SAAS,CAAC,CAAC,KAEjCD,OAAO,CAACC,SAAS,IAAI,GAAG,GAAGA,SAAS;IAC5C;EACJ;EACA,OAAOG,kBAAkBA,CAACJ,OAAO,EAAEC,SAAS,EAAE;IAC1C,IAAID,OAAO,IAAIC,SAAS,EAAE;MACtB,IAAID,OAAO,CAACE,SAAS,EAAE;QACnB,IAAIG,MAAM,GAAGJ,SAAS,CAACK,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;QACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UACpCR,OAAO,CAACE,SAAS,CAACC,GAAG,CAACE,MAAM,CAACG,CAAC,CAAC,CAAC;QACpC;MACJ,CAAC,MACI;QACD,IAAIH,MAAM,GAAGJ,SAAS,CAACM,KAAK,CAAC,GAAG,CAAC;QACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UACpCR,OAAO,CAACC,SAAS,IAAI,GAAG,GAAGI,MAAM,CAACG,CAAC,CAAC;QACxC;MACJ;IACJ;EACJ;EACA,OAAOE,WAAWA,CAACV,OAAO,EAAEC,SAAS,EAAE;IACnC,IAAID,OAAO,IAAIC,SAAS,EAAE;MACtB,IAAID,OAAO,CAACE,SAAS,EACjBF,OAAO,CAACE,SAAS,CAACS,MAAM,CAACV,SAAS,CAAC,CAAC,KAEpCD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,CAACW,OAAO,CAAC,IAAIC,MAAM,CAAC,SAAS,GAAGZ,SAAS,CAACM,KAAK,CAAC,GAAG,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;IACpI;EACJ;EACA,OAAOC,QAAQA,CAACf,OAAO,EAAEC,SAAS,EAAE;IAChC,IAAID,OAAO,IAAIC,SAAS,EAAE;MACtB,IAAID,OAAO,CAACE,SAAS,EACjB,OAAOF,OAAO,CAACE,SAAS,CAACc,QAAQ,CAACf,SAAS,CAAC,CAAC,KAE7C,OAAO,IAAIY,MAAM,CAAC,OAAO,GAAGZ,SAAS,GAAG,OAAO,EAAE,IAAI,CAAC,CAACgB,IAAI,CAACjB,OAAO,CAACC,SAAS,CAAC;IACtF;IACA,OAAO,KAAK;EAChB;EACA,OAAOiB,QAAQA,CAAClB,OAAO,EAAE;IACrB,OAAOmB,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAACtB,OAAO,CAACuB,UAAU,CAACC,QAAQ,EAAE,UAAUC,KAAK,EAAE;MAC7E,OAAOA,KAAK,KAAKzB,OAAO;IAC5B,CAAC,CAAC;EACN;EACA,OAAO0B,IAAIA,CAAC1B,OAAO,EAAE2B,QAAQ,EAAE;IAC3B,OAAOR,KAAK,CAACS,IAAI,CAAC5B,OAAO,CAAC6B,gBAAgB,CAACF,QAAQ,CAAC,CAAC;EACzD;EACA,OAAOG,UAAUA,CAAC9B,OAAO,EAAE2B,QAAQ,EAAE;IACjC,IAAI3B,OAAO,EAAE;MACT,OAAOA,OAAO,CAAC+B,aAAa,CAACJ,QAAQ,CAAC;IAC1C;IACA,OAAO,IAAI;EACf;EACA,OAAOK,KAAKA,CAAChC,OAAO,EAAE;IAClB,IAAIwB,QAAQ,GAAGxB,OAAO,CAACuB,UAAU,CAACU,UAAU;IAC5C,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,QAAQ,CAACf,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIgB,QAAQ,CAAChB,CAAC,CAAC,IAAIR,OAAO,EACtB,OAAOkC,GAAG;MACd,IAAIV,QAAQ,CAAChB,CAAC,CAAC,CAAC2B,QAAQ,IAAI,CAAC,EACzBD,GAAG,EAAE;IACb;IACA,OAAO,CAAC,CAAC;EACb;EACA,OAAOE,gBAAgBA,CAACpC,OAAO,EAAEqC,aAAa,EAAE;IAC5C,IAAIb,QAAQ,GAAGxB,OAAO,CAACuB,UAAU,GAAGvB,OAAO,CAACuB,UAAU,CAACU,UAAU,GAAG,EAAE;IACtE,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAI1B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,QAAQ,CAACf,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAIgB,QAAQ,CAAChB,CAAC,CAAC,IAAIR,OAAO,EACtB,OAAOkC,GAAG;MACd,IAAIV,QAAQ,CAAChB,CAAC,CAAC,CAAC8B,UAAU,IAAId,QAAQ,CAAChB,CAAC,CAAC,CAAC8B,UAAU,CAACD,aAAa,CAAC,IAAIb,QAAQ,CAAChB,CAAC,CAAC,CAAC2B,QAAQ,IAAI,CAAC,EAC5FD,GAAG,EAAE;IACb;IACA,OAAO,CAAC,CAAC;EACb;EACA,OAAOK,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,GAAG,MAAM,EAAE;IACrD,IAAIA,QAAQ,KAAK,MAAM,IAAIF,OAAO,IAAIC,MAAM,EAAE;MAC1C,IAAI,CAACE,WAAW,CAACH,OAAO,EAAEC,MAAM,CAAC;IACrC;EACJ;EACA,OAAOG,YAAYA,CAACJ,OAAO,EAAEC,MAAM,EAAEC,QAAQ,GAAG,MAAM,EAAEG,iBAAiB,GAAG,IAAI,EAAE;IAC9E,IAAIL,OAAO,IAAIC,MAAM,EAAE;MACnB,IAAII,iBAAiB,EAAE;QACnBL,OAAO,CAACM,KAAK,CAACC,QAAQ,GAAI,GAAEjD,UAAU,CAACkD,aAAa,CAACP,MAAM,CAAE,IAAG;MACpE;MACA,IAAIC,QAAQ,KAAK,MAAM,EAAE;QACrB,IAAI,CAACO,gBAAgB,CAACT,OAAO,EAAEC,MAAM,CAAC;MAC1C,CAAC,MACI;QACD,IAAI,CAACS,gBAAgB,CAACV,OAAO,EAAEC,MAAM,CAAC;MAC1C;IACJ;EACJ;EACA,OAAOQ,gBAAgBA,CAACjD,OAAO,EAAEyC,MAAM,EAAE;IACrC,MAAMU,yBAAyB,GAAIC,EAAE,IAAK;MACtC,IAAI,CAACA,EAAE,EACH;MACJ,OAAOC,gBAAgB,CAACD,EAAE,CAAC,CAACE,gBAAgB,CAAC,UAAU,CAAC,KAAK,UAAU,GAAGF,EAAE,GAAGD,yBAAyB,CAACC,EAAE,CAACG,aAAa,CAAC;IAC9H,CAAC;IACD,MAAMC,iBAAiB,GAAGxD,OAAO,CAACyD,YAAY,GAAG;MAAEC,KAAK,EAAE1D,OAAO,CAAC2D,WAAW;MAAEC,MAAM,EAAE5D,OAAO,CAAC6D;IAAa,CAAC,GAAG,IAAI,CAACC,0BAA0B,CAAC9D,OAAO,CAAC;IACxJ,MAAM+D,YAAY,GAAGtB,MAAM,CAACoB,YAAY;IACxC,MAAMG,YAAY,GAAGvB,MAAM,CAACwB,qBAAqB,CAAC,CAAC;IACnD,MAAMC,eAAe,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACjD,MAAMC,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IACnD,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IACnC,MAAMC,eAAe,GAAGrB,yBAAyB,CAACnD,OAAO,CAAC;IAC1D,MAAMyE,qBAAqB,GAAGD,eAAe,EAAEP,qBAAqB,CAAC,CAAC,IAAI;MAAES,GAAG,EAAE,CAAC,CAAC,GAAGR,eAAe;MAAES,IAAI,EAAE,CAAC,CAAC,GAAGP;IAAiB,CAAC;IACpI,IAAIM,GAAG,EAAEC,IAAI;IACb,IAAIX,YAAY,CAACU,GAAG,GAAGX,YAAY,GAAGP,iBAAiB,CAACI,MAAM,GAAGU,QAAQ,CAACV,MAAM,EAAE;MAC9Ec,GAAG,GAAGV,YAAY,CAACU,GAAG,GAAGD,qBAAqB,CAACC,GAAG,GAAGlB,iBAAiB,CAACI,MAAM;MAC7E5D,OAAO,CAAC8C,KAAK,CAAC8B,eAAe,GAAG,QAAQ;MACxC,IAAIZ,YAAY,CAACU,GAAG,GAAGA,GAAG,GAAG,CAAC,EAAE;QAC5BA,GAAG,GAAG,CAAC,CAAC,GAAGV,YAAY,CAACU,GAAG;MAC/B;IACJ,CAAC,MACI;MACDA,GAAG,GAAGX,YAAY,GAAGC,YAAY,CAACU,GAAG,GAAGD,qBAAqB,CAACC,GAAG;MACjE1E,OAAO,CAAC8C,KAAK,CAAC8B,eAAe,GAAG,KAAK;IACzC;IACA,IAAIpB,iBAAiB,CAACE,KAAK,GAAGY,QAAQ,CAACZ,KAAK,EAAE;MAC1C;MACAiB,IAAI,GAAG,CAACX,YAAY,CAACW,IAAI,GAAGF,qBAAqB,CAACE,IAAI,IAAI,CAAC,CAAC;IAChE,CAAC,MACI,IAAIX,YAAY,CAACW,IAAI,GAAGF,qBAAqB,CAACE,IAAI,GAAGnB,iBAAiB,CAACE,KAAK,GAAGY,QAAQ,CAACZ,KAAK,EAAE;MAChG;MACAiB,IAAI,GAAG,CAACX,YAAY,CAACW,IAAI,GAAGF,qBAAqB,CAACE,IAAI,GAAGnB,iBAAiB,CAACE,KAAK,GAAGY,QAAQ,CAACZ,KAAK,IAAI,CAAC,CAAC;IAC3G,CAAC,MACI;MACD;MACAiB,IAAI,GAAGX,YAAY,CAACW,IAAI,GAAGF,qBAAqB,CAACE,IAAI;IACzD;IACA3E,OAAO,CAAC8C,KAAK,CAAC4B,GAAG,GAAGA,GAAG,GAAG,IAAI;IAC9B1E,OAAO,CAAC8C,KAAK,CAAC6B,IAAI,GAAGA,IAAI,GAAG,IAAI;EACpC;EACA,OAAOzB,gBAAgBA,CAAClD,OAAO,EAAEyC,MAAM,EAAE;IACrC,MAAMe,iBAAiB,GAAGxD,OAAO,CAACyD,YAAY,GAAG;MAAEC,KAAK,EAAE1D,OAAO,CAAC2D,WAAW;MAAEC,MAAM,EAAE5D,OAAO,CAAC6D;IAAa,CAAC,GAAG,IAAI,CAACC,0BAA0B,CAAC9D,OAAO,CAAC;IACxJ,MAAM6E,kBAAkB,GAAGrB,iBAAiB,CAACI,MAAM;IACnD,MAAMkB,iBAAiB,GAAGtB,iBAAiB,CAACE,KAAK;IACjD,MAAMqB,iBAAiB,GAAGtC,MAAM,CAACoB,YAAY;IAC7C,MAAMmB,gBAAgB,GAAGvC,MAAM,CAACkB,WAAW;IAC3C,MAAMK,YAAY,GAAGvB,MAAM,CAACwB,qBAAqB,CAAC,CAAC;IACnD,MAAMC,eAAe,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACjD,MAAMC,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IACnD,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IACnC,IAAIG,GAAG,EAAEC,IAAI;IACb,IAAIX,YAAY,CAACU,GAAG,GAAGK,iBAAiB,GAAGF,kBAAkB,GAAGP,QAAQ,CAACV,MAAM,EAAE;MAC7Ec,GAAG,GAAGV,YAAY,CAACU,GAAG,GAAGR,eAAe,GAAGW,kBAAkB;MAC7D7E,OAAO,CAAC8C,KAAK,CAAC8B,eAAe,GAAG,QAAQ;MACxC,IAAIF,GAAG,GAAG,CAAC,EAAE;QACTA,GAAG,GAAGR,eAAe;MACzB;IACJ,CAAC,MACI;MACDQ,GAAG,GAAGK,iBAAiB,GAAGf,YAAY,CAACU,GAAG,GAAGR,eAAe;MAC5DlE,OAAO,CAAC8C,KAAK,CAAC8B,eAAe,GAAG,KAAK;IACzC;IACA,IAAIZ,YAAY,CAACW,IAAI,GAAGG,iBAAiB,GAAGR,QAAQ,CAACZ,KAAK,EACtDiB,IAAI,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAElB,YAAY,CAACW,IAAI,GAAGP,gBAAgB,GAAGY,gBAAgB,GAAGF,iBAAiB,CAAC,CAAC,KAEhGH,IAAI,GAAGX,YAAY,CAACW,IAAI,GAAGP,gBAAgB;IAC/CpE,OAAO,CAAC8C,KAAK,CAAC4B,GAAG,GAAGA,GAAG,GAAG,IAAI;IAC9B1E,OAAO,CAAC8C,KAAK,CAAC6B,IAAI,GAAGA,IAAI,GAAG,IAAI;EACpC;EACA,OAAOQ,UAAUA,CAACnF,OAAO,EAAEoF,OAAO,GAAG,EAAE,EAAE;IACrC,OAAOpF,OAAO,CAAC,YAAY,CAAC,KAAK,IAAI,GAAGoF,OAAO,GAAG,IAAI,CAACD,UAAU,CAACnF,OAAO,CAACuB,UAAU,EAAE6D,OAAO,CAACC,MAAM,CAAC,CAACrF,OAAO,CAACuB,UAAU,CAAC,CAAC,CAAC;EAC/H;EACA,OAAO+D,oBAAoBA,CAACtF,OAAO,EAAE;IACjC,IAAIuF,iBAAiB,GAAG,EAAE;IAC1B,IAAIvF,OAAO,EAAE;MACT,IAAIoF,OAAO,GAAG,IAAI,CAACD,UAAU,CAACnF,OAAO,CAAC;MACtC,MAAMwF,aAAa,GAAG,eAAe;MACrC,MAAMC,aAAa,GAAIC,IAAI,IAAK;QAC5B,IAAIC,gBAAgB,GAAGC,MAAM,CAAC,kBAAkB,CAAC,CAACF,IAAI,EAAE,IAAI,CAAC;QAC7D,OAAOF,aAAa,CAACvE,IAAI,CAAC0E,gBAAgB,CAACrC,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAIkC,aAAa,CAACvE,IAAI,CAAC0E,gBAAgB,CAACrC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAIkC,aAAa,CAACvE,IAAI,CAAC0E,gBAAgB,CAACrC,gBAAgB,CAAC,WAAW,CAAC,CAAC;MACxN,CAAC;MACD,KAAK,IAAIuC,MAAM,IAAIT,OAAO,EAAE;QACxB,IAAIU,eAAe,GAAGD,MAAM,CAAC1D,QAAQ,KAAK,CAAC,IAAI0D,MAAM,CAACE,OAAO,CAAC,iBAAiB,CAAC;QAChF,IAAID,eAAe,EAAE;UACjB,IAAIE,SAAS,GAAGF,eAAe,CAACvF,KAAK,CAAC,GAAG,CAAC;UAC1C,KAAK,IAAIoB,QAAQ,IAAIqE,SAAS,EAAE;YAC5B,IAAI5C,EAAE,GAAG,IAAI,CAACtB,UAAU,CAAC+D,MAAM,EAAElE,QAAQ,CAAC;YAC1C,IAAIyB,EAAE,IAAIqC,aAAa,CAACrC,EAAE,CAAC,EAAE;cACzBmC,iBAAiB,CAACU,IAAI,CAAC7C,EAAE,CAAC;YAC9B;UACJ;QACJ;QACA,IAAIyC,MAAM,CAAC1D,QAAQ,KAAK,CAAC,IAAIsD,aAAa,CAACI,MAAM,CAAC,EAAE;UAChDN,iBAAiB,CAACU,IAAI,CAACJ,MAAM,CAAC;QAClC;MACJ;IACJ;IACA,OAAON,iBAAiB;EAC5B;EACA,OAAOW,2BAA2BA,CAAClG,OAAO,EAAE;IACxCA,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,QAAQ;IACnCnG,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,OAAO;IAC/B,IAAIC,aAAa,GAAGrG,OAAO,CAAC6D,YAAY;IACxC7D,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,MAAM;IAC9BpG,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,SAAS;IACpC,OAAOE,aAAa;EACxB;EACA,OAAOC,0BAA0BA,CAACtG,OAAO,EAAE;IACvCA,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,QAAQ;IACnCnG,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,OAAO;IAC/B,IAAIG,YAAY,GAAGvG,OAAO,CAAC2D,WAAW;IACtC3D,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,MAAM;IAC9BpG,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,SAAS;IACpC,OAAOI,YAAY;EACvB;EACA,OAAOzC,0BAA0BA,CAAC9D,OAAO,EAAE;IACvC,IAAIwG,UAAU,GAAG,CAAC,CAAC;IACnBxG,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,QAAQ;IACnCnG,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,OAAO;IAC/BI,UAAU,CAAC9C,KAAK,GAAG1D,OAAO,CAAC2D,WAAW;IACtC6C,UAAU,CAAC5C,MAAM,GAAG5D,OAAO,CAAC6D,YAAY;IACxC7D,OAAO,CAAC8C,KAAK,CAACsD,OAAO,GAAG,MAAM;IAC9BpG,OAAO,CAAC8C,KAAK,CAACqD,UAAU,GAAG,SAAS;IACpC,OAAOK,UAAU;EACrB;EACA,OAAOC,YAAYA,CAACC,SAAS,EAAEC,IAAI,EAAE;IACjC,IAAIC,cAAc,GAAGvD,gBAAgB,CAACqD,SAAS,CAAC,CAACpD,gBAAgB,CAAC,gBAAgB,CAAC;IACnF,IAAIuD,SAAS,GAAGD,cAAc,GAAGE,UAAU,CAACF,cAAc,CAAC,GAAG,CAAC;IAC/D,IAAIG,eAAe,GAAG1D,gBAAgB,CAACqD,SAAS,CAAC,CAACpD,gBAAgB,CAAC,YAAY,CAAC;IAChF,IAAI0D,UAAU,GAAGD,eAAe,GAAGD,UAAU,CAACC,eAAe,CAAC,GAAG,CAAC;IAClE,IAAIE,aAAa,GAAGP,SAAS,CAACzC,qBAAqB,CAAC,CAAC;IACrD,IAAIiD,QAAQ,GAAGP,IAAI,CAAC1C,qBAAqB,CAAC,CAAC;IAC3C,IAAIkD,MAAM,GAAGD,QAAQ,CAACxC,GAAG,GAAG0C,QAAQ,CAACC,IAAI,CAACC,SAAS,IAAIL,aAAa,CAACvC,GAAG,GAAG0C,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,GAAGT,SAAS,GAAGG,UAAU;IAC5H,IAAIO,MAAM,GAAGb,SAAS,CAACY,SAAS;IAChC,IAAIjB,aAAa,GAAGK,SAAS,CAACc,YAAY;IAC1C,IAAIC,UAAU,GAAG,IAAI,CAACC,cAAc,CAACf,IAAI,CAAC;IAC1C,IAAIQ,MAAM,GAAG,CAAC,EAAE;MACZT,SAAS,CAACY,SAAS,GAAGC,MAAM,GAAGJ,MAAM;IACzC,CAAC,MACI,IAAIA,MAAM,GAAGM,UAAU,GAAGpB,aAAa,EAAE;MAC1CK,SAAS,CAACY,SAAS,GAAGC,MAAM,GAAGJ,MAAM,GAAGd,aAAa,GAAGoB,UAAU;IACtE;EACJ;EACA,OAAOE,MAAMA,CAAC3H,OAAO,EAAE4H,QAAQ,EAAE;IAC7B5H,OAAO,CAAC8C,KAAK,CAAC+E,OAAO,GAAG,CAAC;IACzB,IAAIC,IAAI,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAIF,OAAO,GAAG,CAAC;IACf,IAAIG,IAAI,GAAG,SAAAA,CAAA,EAAY;MACnBH,OAAO,GAAG,CAAC7H,OAAO,CAAC8C,KAAK,CAAC+E,OAAO,CAACjH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,IAAImH,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,GAAGH,IAAI,IAAIF,QAAQ;MAC7F5H,OAAO,CAAC8C,KAAK,CAAC+E,OAAO,GAAGA,OAAO;MAC/BC,IAAI,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC;MAClB,IAAI,CAACF,OAAO,GAAG,CAAC,EAAE;QACbjC,MAAM,CAACsC,qBAAqB,IAAIA,qBAAqB,CAACF,IAAI,CAAC,IAAKG,UAAU,CAACH,IAAI,EAAE,EAAE,CAAC;MACzF;IACJ,CAAC;IACDA,IAAI,CAAC,CAAC;EACV;EACA,OAAOI,OAAOA,CAACpI,OAAO,EAAEqI,EAAE,EAAE;IACxB,IAAIR,OAAO,GAAG,CAAC;MAAES,QAAQ,GAAG,EAAE;MAAEV,QAAQ,GAAGS,EAAE;MAAEE,GAAG,GAAGD,QAAQ,GAAGV,QAAQ;IACxE,IAAIY,MAAM,GAAGC,WAAW,CAAC,MAAM;MAC3BZ,OAAO,GAAGA,OAAO,GAAGU,GAAG;MACvB,IAAIV,OAAO,IAAI,CAAC,EAAE;QACdA,OAAO,GAAG,CAAC;QACXa,aAAa,CAACF,MAAM,CAAC;MACzB;MACAxI,OAAO,CAAC8C,KAAK,CAAC+E,OAAO,GAAGA,OAAO;IACnC,CAAC,EAAES,QAAQ,CAAC;EAChB;EACA,OAAOnE,kBAAkBA,CAAA,EAAG;IACxB,IAAIwE,GAAG,GAAGvB,QAAQ,CAACwB,eAAe;IAClC,OAAO,CAAChD,MAAM,CAACiD,WAAW,IAAIF,GAAG,CAACrB,SAAS,KAAKqB,GAAG,CAACG,SAAS,IAAI,CAAC,CAAC;EACvE;EACA,OAAOzE,mBAAmBA,CAAA,EAAG;IACzB,IAAIsE,GAAG,GAAGvB,QAAQ,CAACwB,eAAe;IAClC,OAAO,CAAChD,MAAM,CAACmD,WAAW,IAAIJ,GAAG,CAACK,UAAU,KAAKL,GAAG,CAACM,UAAU,IAAI,CAAC,CAAC;EACzE;EACA,OAAOC,OAAOA,CAAClJ,OAAO,EAAE2B,QAAQ,EAAE;IAC9B,IAAIwH,CAAC,GAAGC,OAAO,CAAChI,SAAS;IACzB,IAAIiI,CAAC,GAAGF,CAAC,CAAC,SAAS,CAAC,IAChBA,CAAC,CAACG,qBAAqB,IACvBH,CAAC,CAAC,oBAAoB,CAAC,IACvBA,CAAC,CAAC,mBAAmB,CAAC,IACtB,UAAUI,CAAC,EAAE;MACT,OAAO,EAAE,CAACC,OAAO,CAAClI,IAAI,CAAC8F,QAAQ,CAACvF,gBAAgB,CAAC0H,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IACL,OAAOF,CAAC,CAAC/H,IAAI,CAACtB,OAAO,EAAE2B,QAAQ,CAAC;EACpC;EACA,OAAOqB,aAAaA,CAACI,EAAE,EAAEqG,MAAM,EAAE;IAC7B,IAAI/F,KAAK,GAAGN,EAAE,CAACO,WAAW;IAC1B,IAAI8F,MAAM,EAAE;MACR,IAAI3G,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;MAChCM,KAAK,IAAIoD,UAAU,CAAChE,KAAK,CAAC4G,UAAU,CAAC,GAAG5C,UAAU,CAAChE,KAAK,CAAC6G,WAAW,CAAC;IACzE;IACA,OAAOjG,KAAK;EAChB;EACA,OAAOkG,oBAAoBA,CAACxG,EAAE,EAAE;IAC5B,IAAIN,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChC,OAAO0D,UAAU,CAAChE,KAAK,CAAC+G,WAAW,CAAC,GAAG/C,UAAU,CAAChE,KAAK,CAACgH,YAAY,CAAC;EACzE;EACA,OAAOC,mBAAmBA,CAAC3G,EAAE,EAAE;IAC3B,IAAIN,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChC,OAAO0D,UAAU,CAAChE,KAAK,CAAC4G,UAAU,CAAC,GAAG5C,UAAU,CAAChE,KAAK,CAAC6G,WAAW,CAAC;EACvE;EACA,OAAOK,UAAUA,CAAC5G,EAAE,EAAE;IAClB,IAAIM,KAAK,GAAGN,EAAE,CAACO,WAAW;IAC1B,IAAIb,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChCM,KAAK,IAAIoD,UAAU,CAAChE,KAAK,CAAC+G,WAAW,CAAC,GAAG/C,UAAU,CAAChE,KAAK,CAACgH,YAAY,CAAC;IACvE,OAAOpG,KAAK;EAChB;EACA,OAAOA,KAAKA,CAACN,EAAE,EAAE;IACb,IAAIM,KAAK,GAAGN,EAAE,CAACO,WAAW;IAC1B,IAAIb,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChCM,KAAK,IAAIoD,UAAU,CAAChE,KAAK,CAAC+G,WAAW,CAAC,GAAG/C,UAAU,CAAChE,KAAK,CAACgH,YAAY,CAAC;IACvE,OAAOpG,KAAK;EAChB;EACA,OAAOuG,cAAcA,CAAC7G,EAAE,EAAE;IACtB,IAAIQ,MAAM,GAAGR,EAAE,CAACS,YAAY;IAC5B,IAAIf,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChCQ,MAAM,IAAIkD,UAAU,CAAChE,KAAK,CAACkE,UAAU,CAAC,GAAGF,UAAU,CAAChE,KAAK,CAACoH,aAAa,CAAC;IACxE,OAAOtG,MAAM;EACjB;EACA,OAAO8D,cAAcA,CAACtE,EAAE,EAAEqG,MAAM,EAAE;IAC9B,IAAI7F,MAAM,GAAGR,EAAE,CAACS,YAAY;IAC5B,IAAI4F,MAAM,EAAE;MACR,IAAI3G,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;MAChCQ,MAAM,IAAIkD,UAAU,CAAChE,KAAK,CAACqH,SAAS,CAAC,GAAGrD,UAAU,CAAChE,KAAK,CAACsH,YAAY,CAAC;IAC1E;IACA,OAAOxG,MAAM;EACjB;EACA,OAAOyG,SAASA,CAACjH,EAAE,EAAE;IACjB,IAAIQ,MAAM,GAAGR,EAAE,CAACS,YAAY;IAC5B,IAAIf,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChCQ,MAAM,IAAIkD,UAAU,CAAChE,KAAK,CAACkE,UAAU,CAAC,GAAGF,UAAU,CAAChE,KAAK,CAACoH,aAAa,CAAC,GAAGpD,UAAU,CAAChE,KAAK,CAACwH,cAAc,CAAC,GAAGxD,UAAU,CAAChE,KAAK,CAACyH,iBAAiB,CAAC;IACjJ,OAAO3G,MAAM;EACjB;EACA,OAAO4G,QAAQA,CAACpH,EAAE,EAAE;IAChB,IAAIM,KAAK,GAAGN,EAAE,CAACO,WAAW;IAC1B,IAAIb,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;IAChCM,KAAK,IAAIoD,UAAU,CAAChE,KAAK,CAAC+G,WAAW,CAAC,GAAG/C,UAAU,CAAChE,KAAK,CAACgH,YAAY,CAAC,GAAGhD,UAAU,CAAChE,KAAK,CAAC2H,eAAe,CAAC,GAAG3D,UAAU,CAAChE,KAAK,CAAC4H,gBAAgB,CAAC;IAChJ,OAAOhH,KAAK;EAChB;EACA,OAAOa,WAAWA,CAAA,EAAG;IACjB,IAAIoG,GAAG,GAAG/E,MAAM;MAAEgF,CAAC,GAAGxD,QAAQ;MAAEyD,CAAC,GAAGD,CAAC,CAAChC,eAAe;MAAEkC,CAAC,GAAGF,CAAC,CAACG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAAEC,CAAC,GAAGL,GAAG,CAACX,UAAU,IAAIa,CAAC,CAACI,WAAW,IAAIH,CAAC,CAACG,WAAW;MAAEC,CAAC,GAAGP,GAAG,CAACQ,WAAW,IAAIN,CAAC,CAACrD,YAAY,IAAIsD,CAAC,CAACtD,YAAY;IAC3M,OAAO;MAAE9D,KAAK,EAAEsH,CAAC;MAAEpH,MAAM,EAAEsH;IAAE,CAAC;EAClC;EACA,OAAOE,SAASA,CAAChI,EAAE,EAAE;IACjB,IAAIiI,IAAI,GAAGjI,EAAE,CAACa,qBAAqB,CAAC,CAAC;IACrC,OAAO;MACHS,GAAG,EAAE2G,IAAI,CAAC3G,GAAG,IAAIkB,MAAM,CAACiD,WAAW,IAAIzB,QAAQ,CAACwB,eAAe,CAACtB,SAAS,IAAIF,QAAQ,CAACC,IAAI,CAACC,SAAS,IAAI,CAAC,CAAC;MAC1G3C,IAAI,EAAE0G,IAAI,CAAC1G,IAAI,IAAIiB,MAAM,CAACmD,WAAW,IAAI3B,QAAQ,CAACwB,eAAe,CAACI,UAAU,IAAI5B,QAAQ,CAACC,IAAI,CAAC2B,UAAU,IAAI,CAAC;IACjH,CAAC;EACL;EACA,OAAOsC,kBAAkBA,CAACtL,OAAO,EAAEuL,kBAAkB,EAAE;IACnD,IAAIhK,UAAU,GAAGvB,OAAO,CAACuB,UAAU;IACnC,IAAI,CAACA,UAAU,EACX,MAAO,uBAAsB;IACjC,OAAOA,UAAU,CAACiK,YAAY,CAACD,kBAAkB,EAAEvL,OAAO,CAAC;EAC/D;EACA,OAAOyL,YAAYA,CAAA,EAAG;IAClB,IAAIC,SAAS,IAAI,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;MAC9B,OAAOD,SAAS,CAACE,SAAS;IAC9B;EACJ;EACA,OAAOC,IAAIA,CAAA,EAAG;IACV,IAAIC,EAAE,GAAGlG,MAAM,CAAC8F,SAAS,CAACE,SAAS;IACnC,IAAIG,IAAI,GAAGD,EAAE,CAACtC,OAAO,CAAC,OAAO,CAAC;IAC9B,IAAIuC,IAAI,GAAG,CAAC,EAAE;MACV;MACA,OAAO,IAAI;IACf;IACA,IAAIC,OAAO,GAAGF,EAAE,CAACtC,OAAO,CAAC,UAAU,CAAC;IACpC,IAAIwC,OAAO,GAAG,CAAC,EAAE;MACb;MACA,IAAIC,EAAE,GAAGH,EAAE,CAACtC,OAAO,CAAC,KAAK,CAAC;MAC1B,OAAO,IAAI;IACf;IACA,IAAI0C,IAAI,GAAGJ,EAAE,CAACtC,OAAO,CAAC,OAAO,CAAC;IAC9B,IAAI0C,IAAI,GAAG,CAAC,EAAE;MACV;MACA,OAAO,IAAI;IACf;IACA;IACA,OAAO,KAAK;EAChB;EACA,OAAOC,KAAKA,CAAA,EAAG;IACX,OAAO,kBAAkB,CAAClL,IAAI,CAACyK,SAAS,CAACE,SAAS,CAAC,IAAI,CAAChG,MAAM,CAAC,UAAU,CAAC;EAC9E;EACA,OAAOwG,SAASA,CAAA,EAAG;IACf,OAAO,YAAY,CAACnL,IAAI,CAACyK,SAAS,CAACE,SAAS,CAAC;EACjD;EACA,OAAOS,aAAaA,CAAA,EAAG;IACnB,OAAO,cAAc,IAAIzG,MAAM,IAAI8F,SAAS,CAACY,cAAc,GAAG,CAAC;EACnE;EACA,OAAO3J,WAAWA,CAAC3C,OAAO,EAAEyC,MAAM,EAAE;IAChC,IAAI,IAAI,CAAC8J,SAAS,CAAC9J,MAAM,CAAC,EACtBA,MAAM,CAACE,WAAW,CAAC3C,OAAO,CAAC,CAAC,KAC3B,IAAIyC,MAAM,IAAIA,MAAM,CAACW,EAAE,IAAIX,MAAM,CAACW,EAAE,CAACoJ,aAAa,EACnD/J,MAAM,CAACW,EAAE,CAACoJ,aAAa,CAAC7J,WAAW,CAAC3C,OAAO,CAAC,CAAC,KAE7C,MAAM,gBAAgB,GAAGyC,MAAM,GAAG,MAAM,GAAGzC,OAAO;EAC1D;EACA,OAAOyM,WAAWA,CAACzM,OAAO,EAAEyC,MAAM,EAAE;IAChC,IAAI,IAAI,CAAC8J,SAAS,CAAC9J,MAAM,CAAC,EACtBA,MAAM,CAACgK,WAAW,CAACzM,OAAO,CAAC,CAAC,KAC3B,IAAIyC,MAAM,CAACW,EAAE,IAAIX,MAAM,CAACW,EAAE,CAACoJ,aAAa,EACzC/J,MAAM,CAACW,EAAE,CAACoJ,aAAa,CAACC,WAAW,CAACzM,OAAO,CAAC,CAAC,KAE7C,MAAM,gBAAgB,GAAGA,OAAO,GAAG,QAAQ,GAAGyC,MAAM;EAC5D;EACA,OAAOiK,aAAaA,CAAC1M,OAAO,EAAE;IAC1B,IAAI,EAAE,QAAQ,IAAIoJ,OAAO,CAAChI,SAAS,CAAC,EAChCpB,OAAO,CAACuB,UAAU,CAACkL,WAAW,CAACzM,OAAO,CAAC,CAAC,KAExCA,OAAO,CAACW,MAAM,CAAC,CAAC;EACxB;EACA,OAAO4L,SAASA,CAACI,GAAG,EAAE;IAClB,OAAO,OAAOC,WAAW,KAAK,QAAQ,GAAGD,GAAG,YAAYC,WAAW,GAAGD,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,CAACxK,QAAQ,KAAK,CAAC,IAAI,OAAOwK,GAAG,CAACE,QAAQ,KAAK,QAAQ;EAClL;EACA,OAAOC,uBAAuBA,CAAC1J,EAAE,EAAE;IAC/B,IAAIA,EAAE,EAAE;MACJ,IAAIN,KAAK,GAAGO,gBAAgB,CAACD,EAAE,CAAC;MAChC,OAAOA,EAAE,CAACO,WAAW,GAAGP,EAAE,CAAC6H,WAAW,GAAGnE,UAAU,CAAChE,KAAK,CAAC2H,eAAe,CAAC,GAAG3D,UAAU,CAAChE,KAAK,CAAC4H,gBAAgB,CAAC;IACnH,CAAC,MACI;MACD,IAAI,IAAI,CAACqC,wBAAwB,KAAK,IAAI,EACtC,OAAO,IAAI,CAACA,wBAAwB;MACxC,IAAIC,SAAS,GAAG5F,QAAQ,CAAC6F,aAAa,CAAC,KAAK,CAAC;MAC7CD,SAAS,CAAC/M,SAAS,GAAG,qBAAqB;MAC3CmH,QAAQ,CAACC,IAAI,CAAC1E,WAAW,CAACqK,SAAS,CAAC;MACpC,IAAIE,cAAc,GAAGF,SAAS,CAACrJ,WAAW,GAAGqJ,SAAS,CAAC/B,WAAW;MAClE7D,QAAQ,CAACC,IAAI,CAACoF,WAAW,CAACO,SAAS,CAAC;MACpC,IAAI,CAACD,wBAAwB,GAAGG,cAAc;MAC9C,OAAOA,cAAc;IACzB;EACJ;EACA,OAAOC,wBAAwBA,CAAA,EAAG;IAC9B,IAAI,IAAI,CAACC,yBAAyB,KAAK,IAAI,EACvC,OAAO,IAAI,CAACA,yBAAyB;IACzC,IAAIJ,SAAS,GAAG5F,QAAQ,CAAC6F,aAAa,CAAC,KAAK,CAAC;IAC7CD,SAAS,CAAC/M,SAAS,GAAG,qBAAqB;IAC3CmH,QAAQ,CAACC,IAAI,CAAC1E,WAAW,CAACqK,SAAS,CAAC;IACpC,IAAIK,eAAe,GAAGL,SAAS,CAACnJ,YAAY,GAAGmJ,SAAS,CAACxF,YAAY;IACrEJ,QAAQ,CAACC,IAAI,CAACoF,WAAW,CAACO,SAAS,CAAC;IACpC,IAAI,CAACD,wBAAwB,GAAGM,eAAe;IAC/C,OAAOA,eAAe;EAC1B;EACA,OAAOC,mBAAmBA,CAACtN,OAAO,EAAEuN,UAAU,EAAEC,IAAI,EAAE;IAClDxN,OAAO,CAACuN,UAAU,CAAC,CAACE,KAAK,CAACzN,OAAO,EAAEwN,IAAI,CAAC;EAC5C;EACA,OAAOE,cAAcA,CAAA,EAAG;IACpB,IAAI9H,MAAM,CAAC+H,YAAY,EAAE;MACrB,IAAI/H,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACC,KAAK,EAAE;QAC7BhI,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;MACjC,CAAC,MACI,IAAIhI,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACE,eAAe,IAAIjI,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACG,UAAU,GAAG,CAAC,IAAIlI,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACI,UAAU,CAAC,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAACvN,MAAM,GAAG,CAAC,EAAE;QACvJmF,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACE,eAAe,CAAC,CAAC;MAC3C;IACJ,CAAC,MACI,IAAIzG,QAAQ,CAAC,WAAW,CAAC,IAAIA,QAAQ,CAAC,WAAW,CAAC,CAACwG,KAAK,EAAE;MAC3D,IAAI;QACAxG,QAAQ,CAAC,WAAW,CAAC,CAACwG,KAAK,CAAC,CAAC;MACjC,CAAC,CACD,OAAOK,KAAK,EAAE;QACV;MAAA;IAER;EACJ;EACA,OAAOC,UAAUA,CAAA,EAAG;IAChB,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACf,IAAIC,OAAO,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACrC,IAAI,CAACF,OAAO,GAAG,CAAC,CAAC;MACjB,IAAIC,OAAO,CAACD,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,CAACC,OAAO,CAACD,OAAO,CAAC,GAAG,IAAI;QACpC,IAAI,CAACA,OAAO,CAAC,SAAS,CAAC,GAAGC,OAAO,CAACE,OAAO;MAC7C;MACA,IAAI,IAAI,CAACH,OAAO,CAAC,QAAQ,CAAC,EAAE;QACxB,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI;MACjC,CAAC,MACI,IAAI,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC7B,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI;MACjC;IACJ;IACA,OAAO,IAAI,CAACA,OAAO;EACvB;EACA,OAAOE,gBAAgBA,CAAA,EAAG;IACtB,IAAIvC,EAAE,GAAGJ,SAAS,CAACE,SAAS,CAAC2C,WAAW,CAAC,CAAC;IAC1C,IAAIC,KAAK,GAAG,uBAAuB,CAACC,IAAI,CAAC3C,EAAE,CAAC,IAAI,uBAAuB,CAAC2C,IAAI,CAAC3C,EAAE,CAAC,IAAI,oCAAoC,CAAC2C,IAAI,CAAC3C,EAAE,CAAC,IAAI,iBAAiB,CAAC2C,IAAI,CAAC3C,EAAE,CAAC,IAAKA,EAAE,CAACtC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,+BAA+B,CAACiF,IAAI,CAAC3C,EAAE,CAAE,IAAI,EAAE;IACnP,OAAO;MACHqC,OAAO,EAAEK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;MACvBF,OAAO,EAAEE,KAAK,CAAC,CAAC,CAAC,IAAI;IACzB,CAAC;EACL;EACA,OAAOE,SAASA,CAACC,KAAK,EAAE;IACpB,IAAIC,MAAM,CAACF,SAAS,EAAE;MAClB,OAAOE,MAAM,CAACF,SAAS,CAACC,KAAK,CAAC;IAClC,CAAC,MACI;MACD,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIE,QAAQ,CAACF,KAAK,CAAC,IAAI1J,IAAI,CAAC6J,KAAK,CAACH,KAAK,CAAC,KAAKA,KAAK;IACtF;EACJ;EACA,OAAOI,QAAQA,CAAC/O,OAAO,EAAE;IACrB,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACyD,YAAY,KAAK,IAAI;EACpD;EACA,OAAOuL,SAASA,CAAChP,OAAO,EAAE;IACtB,OAAOA,OAAO,IAAIA,OAAO,CAACyD,YAAY,IAAI,IAAI;EAClD;EACA,OAAOwL,OAAOA,CAACjP,OAAO,EAAE;IACpB,OAAOA,OAAO,KAAK,IAAI,IAAI,OAAOA,OAAO,KAAK,WAAW,IAAIA,OAAO,CAAC6M,QAAQ,IAAI7M,OAAO,CAACuB,UAAU;EACvG;EACA,OAAO2N,KAAKA,CAAClP,OAAO,EAAEmP,OAAO,EAAE;IAC3BnP,OAAO,IAAIoH,QAAQ,CAACgI,aAAa,KAAKpP,OAAO,IAAIA,OAAO,CAACkP,KAAK,CAACC,OAAO,CAAC;EAC3E;EACA,OAAOE,oBAAoBA,CAACrP,OAAO,EAAE;IACjC,IAAIsP,iBAAiB,GAAGxP,UAAU,CAAC4B,IAAI,CAAC1B,OAAO,EAAG;AAC1D;AACA;AACA;AACA,qIAAqI,CAAC;IAC9H,IAAIuP,wBAAwB,GAAG,EAAE;IACjC,KAAK,IAAIC,gBAAgB,IAAIF,iBAAiB,EAAE;MAC5C,IAAI,CAAC,EAAEE,gBAAgB,CAAC7L,WAAW,IAAI6L,gBAAgB,CAAC3L,YAAY,IAAI2L,gBAAgB,CAACxB,cAAc,CAAC,CAAC,CAACvN,MAAM,CAAC,EAC7G8O,wBAAwB,CAACtJ,IAAI,CAACuJ,gBAAgB,CAAC;IACvD;IACA,OAAOD,wBAAwB;EACnC;EACA,OAAOE,uBAAuBA,CAACzP,OAAO,EAAE0P,OAAO,GAAG,KAAK,EAAE;IACrD,MAAMJ,iBAAiB,GAAGxP,UAAU,CAACuP,oBAAoB,CAACrP,OAAO,CAAC;IAClE,IAAIgC,KAAK,GAAG,CAAC;IACb,IAAIsN,iBAAiB,IAAIA,iBAAiB,CAAC7O,MAAM,GAAG,CAAC,EAAE;MACnD,MAAMkP,YAAY,GAAGL,iBAAiB,CAAC9F,OAAO,CAAC8F,iBAAiB,CAAC,CAAC,CAAC,CAACM,aAAa,CAACR,aAAa,CAAC;MAChG,IAAIM,OAAO,EAAE;QACT,IAAIC,YAAY,IAAI,CAAC,CAAC,IAAIA,YAAY,KAAK,CAAC,EAAE;UAC1C3N,KAAK,GAAGsN,iBAAiB,CAAC7O,MAAM,GAAG,CAAC;QACxC,CAAC,MACI;UACDuB,KAAK,GAAG2N,YAAY,GAAG,CAAC;QAC5B;MACJ,CAAC,MACI,IAAIA,YAAY,IAAI,CAAC,CAAC,IAAIA,YAAY,KAAKL,iBAAiB,CAAC7O,MAAM,GAAG,CAAC,EAAE;QAC1EuB,KAAK,GAAG2N,YAAY,GAAG,CAAC;MAC5B;IACJ;IACA,OAAOL,iBAAiB,CAACtN,KAAK,CAAC;EACnC;EACA,OAAO6N,cAAcA,CAAA,EAAG;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,GAAG;IAChC,OAAO,EAAE,IAAI,CAACA,MAAM;EACxB;EACA,OAAOnC,YAAYA,CAAA,EAAG;IAClB,IAAI/H,MAAM,CAAC+H,YAAY,EACnB,OAAO/H,MAAM,CAAC+H,YAAY,CAAC,CAAC,CAACoC,QAAQ,CAAC,CAAC,CAAC,KACvC,IAAI3I,QAAQ,CAACuG,YAAY,EAC1B,OAAOvG,QAAQ,CAACuG,YAAY,CAAC,CAAC,CAACoC,QAAQ,CAAC,CAAC,CAAC,KACzC,IAAI3I,QAAQ,CAAC,WAAW,CAAC,EAC1B,OAAOA,QAAQ,CAAC,WAAW,CAAC,CAAC4I,WAAW,CAAC,CAAC,CAACC,IAAI;IACnD,OAAO,IAAI;EACf;EACA,OAAOC,gBAAgBA,CAACzN,MAAM,EAAEW,EAAE,EAAE;IAChC,IAAI,CAACX,MAAM,EACP,OAAO,IAAI;IACf,QAAQA,MAAM;MACV,KAAK,UAAU;QACX,OAAO2E,QAAQ;MACnB,KAAK,QAAQ;QACT,OAAOxB,MAAM;MACjB,KAAK,OAAO;QACR,OAAOxC,EAAE,EAAE+M,kBAAkB;MACjC,KAAK,OAAO;QACR,OAAO/M,EAAE,EAAEgN,sBAAsB;MACrC,KAAK,SAAS;QACV,OAAOhN,EAAE,EAAEG,aAAa;MAC5B,KAAK,cAAc;QACf,OAAOH,EAAE,EAAEG,aAAa,CAACA,aAAa;MAC1C;QACI,MAAM8M,IAAI,GAAG,OAAO5N,MAAM;QAC1B,IAAI4N,IAAI,KAAK,QAAQ,EAAE;UACnB,OAAOjJ,QAAQ,CAACrF,aAAa,CAACU,MAAM,CAAC;QACzC,CAAC,MACI,IAAI4N,IAAI,KAAK,QAAQ,IAAI5N,MAAM,CAAC6N,cAAc,CAAC,eAAe,CAAC,EAAE;UAClE,OAAO,IAAI,CAACrB,OAAO,CAACxM,MAAM,CAAC+J,aAAa,CAAC,GAAG/J,MAAM,CAAC+J,aAAa,GAAG+D,SAAS;QAChF;QACA,MAAMC,UAAU,GAAI7D,GAAG,IAAK,CAAC,EAAEA,GAAG,IAAIA,GAAG,CAAC8D,WAAW,IAAI9D,GAAG,CAACrL,IAAI,IAAIqL,GAAG,CAACc,KAAK,CAAC;QAC/E,MAAMzN,OAAO,GAAGwQ,UAAU,CAAC/N,MAAM,CAAC,GAAGA,MAAM,CAAC,CAAC,GAAGA,MAAM;QACtD,OAAQzC,OAAO,IAAIA,OAAO,CAACmC,QAAQ,KAAK,CAAC,IAAK,IAAI,CAAC8M,OAAO,CAACjP,OAAO,CAAC,GAAGA,OAAO,GAAG,IAAI;IAC5F;EACJ;EACA,OAAO2L,QAAQA,CAAA,EAAG;IACd,OAAO,CAAC,EAAE,OAAO/F,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACwB,QAAQ,IAAIxB,MAAM,CAACwB,QAAQ,CAAC6F,aAAa,CAAC;EAChG;AACJ;AAACyD,eAAA,CA9kBK5Q,UAAU,YACI,IAAI;AAAA4Q,eAAA,CADlB5Q,UAAU,8BAEsB,IAAI;AAAA4Q,eAAA,CAFpC5Q,UAAU,+BAGuB,IAAI;AAAA4Q,eAAA,CAHrC5Q,UAAU;AAglBhB,MAAM6Q,6BAA6B,CAAC;EAIhCF,WAAWA,CAACzQ,OAAO,EAAE4Q,QAAQ,GAAGA,CAAA,KAAM,CAAE,CAAC,EAAE;IAAAF,eAAA;IAAAA,eAAA;IAAAA,eAAA;IACvC,IAAI,CAAC1Q,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC4Q,QAAQ,GAAGA,QAAQ;EAC5B;EACAC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACtL,iBAAiB,GAAGzF,UAAU,CAACwF,oBAAoB,CAAC,IAAI,CAACtF,OAAO,CAAC;IACtE,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+E,iBAAiB,CAAC9E,MAAM,EAAED,CAAC,EAAE,EAAE;MACpD,IAAI,CAAC+E,iBAAiB,CAAC/E,CAAC,CAAC,CAACsQ,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAAC;IACvE;EACJ;EACAG,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACxL,iBAAiB,EAAE;MACxB,KAAK,IAAI/E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+E,iBAAiB,CAAC9E,MAAM,EAAED,CAAC,EAAE,EAAE;QACpD,IAAI,CAAC+E,iBAAiB,CAAC/E,CAAC,CAAC,CAACwQ,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,QAAQ,CAAC;MAC1E;IACJ;EACJ;EACAK,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAC/Q,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC4Q,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACrL,iBAAiB,GAAG,IAAI;EACjC;AACJ;;AAEA;AACA;AACA;;AAEA,SAASoL,6BAA6B,EAAE7Q,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}