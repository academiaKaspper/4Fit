{"ast":null,"code":"import _defineProperty from \"C:/Users/USUARIO/Desktop/CURSO EM V\\xCDDEO/4Fit/4fit-frontend/sakai-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class, _class2;\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { AngleUpIcon } from 'primeng/icons/angleup';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\nconst _c0 = [\"input\"];\nfunction _class_ng_container_3_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 8);\n    i0.ɵɵlistener(\"click\", function _class_ng_container_3_TimesIcon_1_Template_TimesIcon_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"p-inputnumber-clear-icon\");\n  }\n}\nfunction _class_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction _class_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵlistener(\"click\", function _class_ng_container_3_span_2_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.clear());\n    });\n    i0.ɵɵtemplate(1, _class_ng_container_3_span_2_1_Template, 1, 0, null, 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.clearIconTemplate);\n  }\n}\nfunction _class_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_ng_container_3_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 6);\n    i0.ɵɵtemplate(2, _class_ng_container_3_span_2_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.clearIconTemplate);\n  }\n}\nfunction _class_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.incrementButtonIcon);\n  }\n}\nfunction _class_span_4_ng_container_3_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleUpIcon\");\n  }\n}\nfunction _class_span_4_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction _class_span_4_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_span_4_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_span_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_span_4_ng_container_3_AngleUpIcon_1_Template, 1, 0, \"AngleUpIcon\", 3);\n    i0.ɵɵtemplate(2, _class_span_4_ng_container_3_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.incrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.incrementButtonIconTemplate);\n  }\n}\nfunction _class_span_4_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r15.decrementButtonIcon);\n  }\n}\nfunction _class_span_4_ng_container_6_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\");\n  }\n}\nfunction _class_span_4_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction _class_span_4_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_span_4_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_span_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_span_4_ng_container_6_AngleDownIcon_1_Template, 1, 0, \"AngleDownIcon\", 3);\n    i0.ɵɵtemplate(2, _class_span_4_ng_container_6_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.decrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.decrementButtonIconTemplate);\n  }\n}\nconst _c1 = function () {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-up\": true\n  };\n};\nconst _c2 = function () {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-down\": true\n  };\n};\nfunction _class_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function _class_span_4_Template_button_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onUpButtonMouseDown($event));\n    })(\"mouseup\", function _class_span_4_Template_button_mouseup_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onUpButtonMouseUp());\n    })(\"mouseleave\", function _class_span_4_Template_button_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onUpButtonMouseLeave());\n    })(\"keydown\", function _class_span_4_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onUpButtonKeyDown($event));\n    })(\"keyup\", function _class_span_4_Template_button_keyup_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onUpButtonKeyUp());\n    });\n    i0.ɵɵtemplate(2, _class_span_4_span_2_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(3, _class_span_4_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function _class_span_4_Template_button_mousedown_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onDownButtonMouseDown($event));\n    })(\"mouseup\", function _class_span_4_Template_button_mouseup_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onDownButtonMouseUp());\n    })(\"mouseleave\", function _class_span_4_Template_button_mouseleave_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.onDownButtonMouseLeave());\n    })(\"keydown\", function _class_span_4_Template_button_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onDownButtonKeyDown($event));\n    })(\"keyup\", function _class_span_4_Template_button_keyup_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.onDownButtonKeyUp());\n    });\n    i0.ɵɵtemplate(5, _class_span_4_span_5_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(6, _class_span_4_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c1))(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(13, _c2))(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.decrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.decrementButtonIcon);\n  }\n}\nfunction _class_button_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r34.incrementButtonIcon);\n  }\n}\nfunction _class_button_5_ng_container_2_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleUpIcon\");\n  }\n}\nfunction _class_button_5_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction _class_button_5_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_button_5_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_button_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_button_5_ng_container_2_AngleUpIcon_1_Template, 1, 0, \"AngleUpIcon\", 3);\n    i0.ɵɵtemplate(2, _class_button_5_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r35.incrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r35.incrementButtonIconTemplate);\n  }\n}\nfunction _class_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function _class_button_5_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onUpButtonMouseDown($event));\n    })(\"mouseup\", function _class_button_5_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onUpButtonMouseUp());\n    })(\"mouseleave\", function _class_button_5_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onUpButtonMouseLeave());\n    })(\"keydown\", function _class_button_5_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onUpButtonKeyDown($event));\n    })(\"keyup\", function _class_button_5_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onUpButtonKeyUp());\n    });\n    i0.ɵɵtemplate(1, _class_button_5_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(2, _class_button_5_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(6, _c1))(\"disabled\", ctx_r3.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.incrementButtonIcon);\n  }\n}\nfunction _class_button_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r45.decrementButtonIcon);\n  }\n}\nfunction _class_button_6_ng_container_2_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\");\n  }\n}\nfunction _class_button_6_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction _class_button_6_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_button_6_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_button_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_button_6_ng_container_2_AngleDownIcon_1_Template, 1, 0, \"AngleDownIcon\", 3);\n    i0.ɵɵtemplate(2, _class_button_6_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r46.decrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r46.decrementButtonIconTemplate);\n  }\n}\nfunction _class_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function _class_button_6_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.onDownButtonMouseDown($event));\n    })(\"mouseup\", function _class_button_6_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.onDownButtonMouseUp());\n    })(\"mouseleave\", function _class_button_6_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.onDownButtonMouseLeave());\n    })(\"keydown\", function _class_button_6_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onDownButtonKeyDown($event));\n    })(\"keyup\", function _class_button_6_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.onDownButtonKeyUp());\n    });\n    i0.ɵɵtemplate(1, _class_button_6_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(2, _class_button_6_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(6, _c2))(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.decrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.decrementButtonIcon);\n  }\n}\nconst _c3 = function (a1, a2, a3) {\n  return {\n    \"p-inputnumber p-component\": true,\n    \"p-inputnumber-buttons-stacked\": a1,\n    \"p-inputnumber-buttons-horizontal\": a2,\n    \"p-inputnumber-buttons-vertical\": a3\n  };\n};\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputNumber),\n  multi: true\n};\n/**\n * InputNumber is an input component to provide numerical input.\n * @group Components\n */\nclass InputNumber {\n  /**\n   * No description available.\n   * @group Emits\n   */\n  /**\n   * When present, it specifies that the element should be disabled.\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    if (disabled) this.focused = false;\n    this._disabled = disabled;\n    if (this.timer) this.clearTimer();\n  }\n  /**\n   * Callback to invoke on input.\n   * @param {InputNumberInputEvent} event - Custom input event.\n   * @group Emits\n   */\n\n  constructor(document, el, cd, injector) {\n    _defineProperty(this, \"document\", void 0);\n    _defineProperty(this, \"el\", void 0);\n    _defineProperty(this, \"cd\", void 0);\n    _defineProperty(this, \"injector\", void 0);\n    /**\n     * Displays spinner buttons.\n     * @group Props\n     */\n    _defineProperty(this, \"showButtons\", false);\n    /**\n     * Whether to format the value.\n     * @group Props\n     */\n    _defineProperty(this, \"format\", true);\n    /**\n     * Layout of the buttons, valid values are \"stacked\" (default), \"horizontal\" and \"vertical\".\n     * @group Props\n     */\n    _defineProperty(this, \"buttonLayout\", 'stacked');\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    _defineProperty(this, \"inputId\", void 0);\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"styleClass\", void 0);\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    _defineProperty(this, \"style\", void 0);\n    /**\n     * Advisory information to display on input.\n     * @group Props\n     */\n    _defineProperty(this, \"placeholder\", void 0);\n    /**\n     * Size of the input field.\n     * @group Props\n     */\n    _defineProperty(this, \"size\", void 0);\n    /**\n     * Maximum number of character allows in the input field.\n     * @group Props\n     */\n    _defineProperty(this, \"maxlength\", void 0);\n    /**\n     * Specifies tab order of the element.\n     * @group Props\n     */\n    _defineProperty(this, \"tabindex\", void 0);\n    /**\n     * Title text of the input text.\n     * @group Props\n     */\n    _defineProperty(this, \"title\", void 0);\n    /**\n     * Used to define a string that labels the input element.\n     * @group Props\n     */\n    _defineProperty(this, \"ariaLabel\", void 0);\n    /**\n     * Used to indicate that user input is required on an element before a form can be submitted.\n     * @group Props\n     */\n    _defineProperty(this, \"ariaRequired\", void 0);\n    /**\n     * Name of the input field.\n     * @group Props\n     */\n    _defineProperty(this, \"name\", void 0);\n    /**\n     * No description available.\n     * @group Props\n     */\n    _defineProperty(this, \"required\", void 0);\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    _defineProperty(this, \"autocomplete\", void 0);\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    _defineProperty(this, \"min\", void 0);\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    _defineProperty(this, \"max\", void 0);\n    /**\n     * Style class of the increment button.\n     * @group Props\n     */\n    _defineProperty(this, \"incrementButtonClass\", void 0);\n    /**\n     * Style class of the decrement button.\n     * @group Props\n     */\n    _defineProperty(this, \"decrementButtonClass\", void 0);\n    /**\n     * Style class of the increment button.\n     * @group Props\n     */\n    _defineProperty(this, \"incrementButtonIcon\", void 0);\n    /**\n     * Style class of the decrement button.\n     * @group Props\n     */\n    _defineProperty(this, \"decrementButtonIcon\", void 0);\n    /**\n     * When present, it specifies that an input field is read-only.\n     * @group Props\n     */\n    _defineProperty(this, \"readonly\", false);\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    _defineProperty(this, \"step\", 1);\n    /**\n     * Determines whether the input field is empty.\n     * @group Props\n     */\n    _defineProperty(this, \"allowEmpty\", true);\n    /**\n     * Locale to be used in formatting.\n     * @group Props\n     */\n    _defineProperty(this, \"locale\", void 0);\n    /**\n     * The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\"; the default is \"best fit\". See Locale Negotiation for details.\n     * @group Props\n     */\n    _defineProperty(this, \"localeMatcher\", void 0);\n    /**\n     * Defines the behavior of the component, valid values are \"decimal\" and \"currency\".\n     * @group Props\n     */\n    _defineProperty(this, \"mode\", 'decimal');\n    /**\n     * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB. There is no default value; if the style is \"currency\", the currency property must be provided.\n     * @group Props\n     */\n    _defineProperty(this, \"currency\", void 0);\n    /**\n     * How to display the currency in currency formatting. Possible values are \"symbol\" to use a localized currency symbol such as €, ü\"code\" to use the ISO currency code, \"name\" to use a localized currency name such as \"dollar\"; the default is \"symbol\".\n     * @group Props\n     */\n    _defineProperty(this, \"currencyDisplay\", void 0);\n    /**\n     * Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.\n     * @group Props\n     */\n    _defineProperty(this, \"useGrouping\", true);\n    /**\n     * The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n     * @group Props\n     */\n    _defineProperty(this, \"minFractionDigits\", void 0);\n    /**\n     * The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n     * @group Props\n     */\n    _defineProperty(this, \"maxFractionDigits\", void 0);\n    /**\n     * Text to display before the value.\n     * @group Props\n     */\n    _defineProperty(this, \"prefix\", void 0);\n    /**\n     * Text to display after the value.\n     * @group Props\n     */\n    _defineProperty(this, \"suffix\", void 0);\n    /**\n     * Inline style of the input field.\n     * @group Props\n     */\n    _defineProperty(this, \"inputStyle\", void 0);\n    /**\n     * Style class of the input field.\n     * @group Props\n     */\n    _defineProperty(this, \"inputStyleClass\", void 0);\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    _defineProperty(this, \"showClear\", false);\n    _defineProperty(this, \"onInput\", new EventEmitter());\n    /**\n     * Callback to invoke when the component receives focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onFocus\", new EventEmitter());\n    /**\n     * Callback to invoke when the component loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onBlur\", new EventEmitter());\n    /**\n     * Callback to invoke on input key press.\n     * @param {KeyboardEvent} event - Keyboard event.\n     * @group Emits\n     */\n    _defineProperty(this, \"onKeyDown\", new EventEmitter());\n    /**\n     * Callback to invoke when clear token is clicked.\n     * @group Emits\n     */\n    _defineProperty(this, \"onClear\", new EventEmitter());\n    _defineProperty(this, \"input\", void 0);\n    _defineProperty(this, \"templates\", void 0);\n    _defineProperty(this, \"clearIconTemplate\", void 0);\n    _defineProperty(this, \"incrementButtonIconTemplate\", void 0);\n    _defineProperty(this, \"decrementButtonIconTemplate\", void 0);\n    _defineProperty(this, \"value\", void 0);\n    _defineProperty(this, \"onModelChange\", () => {});\n    _defineProperty(this, \"onModelTouched\", () => {});\n    _defineProperty(this, \"focused\", void 0);\n    _defineProperty(this, \"initialized\", void 0);\n    _defineProperty(this, \"groupChar\", '');\n    _defineProperty(this, \"prefixChar\", '');\n    _defineProperty(this, \"suffixChar\", '');\n    _defineProperty(this, \"isSpecialChar\", void 0);\n    _defineProperty(this, \"timer\", void 0);\n    _defineProperty(this, \"lastValue\", void 0);\n    _defineProperty(this, \"_numeral\", void 0);\n    _defineProperty(this, \"numberFormat\", void 0);\n    _defineProperty(this, \"_decimal\", void 0);\n    _defineProperty(this, \"_group\", void 0);\n    _defineProperty(this, \"_minusSign\", void 0);\n    _defineProperty(this, \"_currency\", void 0);\n    _defineProperty(this, \"_prefix\", void 0);\n    _defineProperty(this, \"_suffix\", void 0);\n    _defineProperty(this, \"_index\", void 0);\n    _defineProperty(this, \"_disabled\", void 0);\n    _defineProperty(this, \"ngControl\", null);\n    this.document = document;\n    this.el = el;\n    this.cd = cd;\n    this.injector = injector;\n  }\n  ngOnChanges(simpleChange) {\n    const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n    if (props.some(p => !!simpleChange[p])) {\n      this.updateConstructParser();\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'incrementbuttonicon':\n          this.incrementButtonIconTemplate = item.template;\n          break;\n        case 'decrementbuttonicon':\n          this.decrementButtonIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl, null, {\n      optional: true\n    });\n    this.constructParser();\n    this.initialized = true;\n  }\n  getOptions() {\n    return {\n      localeMatcher: this.localeMatcher,\n      style: this.mode,\n      currency: this.currency,\n      currencyDisplay: this.currencyDisplay,\n      useGrouping: this.useGrouping,\n      minimumFractionDigits: this.minFractionDigits,\n      maximumFractionDigits: this.maxFractionDigits\n    };\n  }\n  constructParser() {\n    this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n    const numerals = [...new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    }).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [d, i]));\n    this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n    this._group = this.getGroupingExpression();\n    this._minusSign = this.getMinusSignExpression();\n    this._currency = this.getCurrencyExpression();\n    this._decimal = this.getDecimalExpression();\n    this._suffix = this.getSuffixExpression();\n    this._prefix = this.getPrefixExpression();\n    this._index = d => index.get(d);\n  }\n  updateConstructParser() {\n    if (this.initialized) {\n      this.constructParser();\n    }\n  }\n  escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  getDecimalExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      ...this.getOptions(),\n      useGrouping: false\n    });\n    return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g');\n  }\n  getGroupingExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: true\n    });\n    this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n    return new RegExp(`[${this.groupChar}]`, 'g');\n  }\n  getMinusSignExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    });\n    return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n  }\n  getCurrencyExpression() {\n    if (this.currency) {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: 'currency',\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n    }\n    return new RegExp(`[]`, 'g');\n  }\n  getPrefixExpression() {\n    if (this.prefix) {\n      this.prefixChar = this.prefix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay\n      });\n      this.prefixChar = formatter.format(1).split('1')[0];\n    }\n    return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n  }\n  getSuffixExpression() {\n    if (this.suffix) {\n      this.suffixChar = this.suffix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      this.suffixChar = formatter.format(1).split('1')[1];\n    }\n    return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n  }\n  formatValue(value) {\n    if (value != null) {\n      if (value === '-') {\n        // Minus sign\n        return value;\n      }\n      if (this.format) {\n        let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n        let formattedValue = formatter.format(value);\n        if (this.prefix) {\n          formattedValue = this.prefix + formattedValue;\n        }\n        if (this.suffix) {\n          formattedValue = formattedValue + this.suffix;\n        }\n        return formattedValue;\n      }\n      return value.toString();\n    }\n    return '';\n  }\n  parseValue(text) {\n    let filteredText = text.replace(this._suffix, '').replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '').replace(this._group, '').replace(this._minusSign, '-').replace(this._decimal, '.').replace(this._numeral, this._index);\n    if (filteredText) {\n      if (filteredText === '-')\n        // Minus sign\n        return filteredText;\n      let parsedValue = +filteredText;\n      return isNaN(parsedValue) ? null : parsedValue;\n    }\n    return null;\n  }\n  repeat(event, interval, dir) {\n    if (this.readonly) {\n      return;\n    }\n    let i = interval || 500;\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, 40, dir);\n    }, i);\n    this.spin(event, dir);\n  }\n  spin(event, dir) {\n    let step = this.step * dir;\n    let currentValue = this.parseValue(this.input?.nativeElement.value) || 0;\n    let newValue = this.validateValue(currentValue + step);\n    if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n      return;\n    }\n    this.updateInput(newValue, null, 'spin', null);\n    this.updateModel(event, newValue);\n    this.handleOnInput(event, currentValue, newValue);\n  }\n  clear() {\n    this.value = null;\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n  onUpButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    this.input?.nativeElement.focus();\n    this.repeat(event, null, 1);\n    event.preventDefault();\n  }\n  onUpButtonMouseUp() {\n    this.clearTimer();\n  }\n  onUpButtonMouseLeave() {\n    this.clearTimer();\n  }\n  onUpButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, 1);\n    }\n  }\n  onUpButtonKeyUp() {\n    this.clearTimer();\n  }\n  onDownButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    this.input?.nativeElement.focus();\n    this.repeat(event, null, -1);\n    event.preventDefault();\n  }\n  onDownButtonMouseUp() {\n    this.clearTimer();\n  }\n  onDownButtonMouseLeave() {\n    this.clearTimer();\n  }\n  onDownButtonKeyUp() {\n    this.clearTimer();\n  }\n  onDownButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, -1);\n    }\n  }\n  onUserInput(event) {\n    if (this.readonly) {\n      return;\n    }\n    if (this.isSpecialChar) {\n      event.target.value = this.lastValue;\n    }\n    this.isSpecialChar = false;\n  }\n  onInputKeyDown(event) {\n    if (this.readonly) {\n      return;\n    }\n    this.lastValue = event.target.value;\n    if (event.shiftKey || event.altKey) {\n      this.isSpecialChar = true;\n      return;\n    }\n    let selectionStart = event.target.selectionStart;\n    let selectionEnd = event.target.selectionEnd;\n    let inputValue = event.target.value;\n    let newValueStr = null;\n    if (event.altKey) {\n      event.preventDefault();\n    }\n    switch (event.which) {\n      //up\n      case 38:\n        this.spin(event, 1);\n        event.preventDefault();\n        break;\n      //down\n      case 40:\n        this.spin(event, -1);\n        event.preventDefault();\n        break;\n      //left\n      case 37:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n          event.preventDefault();\n        }\n        break;\n      //right\n      case 39:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n          event.preventDefault();\n        }\n        break;\n      //enter\n      case 13:\n        newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValueStr);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n        this.updateModel(event, newValueStr);\n        break;\n      //backspace\n      case 8:\n        {\n          event.preventDefault();\n          if (selectionStart === selectionEnd) {\n            const deleteChar = inputValue.charAt(selectionStart - 1);\n            const {\n              decimalCharIndex,\n              decimalCharIndexWithoutPrefix\n            } = this.getDecimalCharIndexes(inputValue);\n            if (this.isNumeralChar(deleteChar)) {\n              const decimalLength = this.getDecimalLength(inputValue);\n              if (this._group.test(deleteChar)) {\n                this._group.lastIndex = 0;\n                newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n              } else if (this._decimal.test(deleteChar)) {\n                this._decimal.lastIndex = 0;\n                if (decimalLength) {\n                  this.input?.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                }\n              } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n              } else if (decimalCharIndexWithoutPrefix === 1) {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n              }\n            }\n            this.updateValue(event, newValueStr, null, 'delete-single');\n          } else {\n            newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n            this.updateValue(event, newValueStr, null, 'delete-range');\n          }\n          break;\n        }\n      // del\n      case 46:\n        event.preventDefault();\n        if (selectionStart === selectionEnd) {\n          const deleteChar = inputValue.charAt(selectionStart);\n          const {\n            decimalCharIndex,\n            decimalCharIndexWithoutPrefix\n          } = this.getDecimalCharIndexes(inputValue);\n          if (this.isNumeralChar(deleteChar)) {\n            const decimalLength = this.getDecimalLength(inputValue);\n            if (this._group.test(deleteChar)) {\n              this._group.lastIndex = 0;\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n            } else if (this._decimal.test(deleteChar)) {\n              this._decimal.lastIndex = 0;\n              if (decimalLength) {\n                this.input?.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n              }\n            } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n              const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n              newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n            } else if (decimalCharIndexWithoutPrefix === 1) {\n              newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n              newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n            } else {\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n            }\n          }\n          this.updateValue(event, newValueStr, null, 'delete-back-single');\n        } else {\n          newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, null, 'delete-range');\n        }\n        break;\n      default:\n        break;\n    }\n    this.onKeyDown.emit(event);\n  }\n  onInputKeyPress(event) {\n    if (this.readonly) {\n      return;\n    }\n    let code = event.which || event.keyCode;\n    let char = String.fromCharCode(code);\n    const isDecimalSign = this.isDecimalSign(char);\n    const isMinusSign = this.isMinusSign(char);\n    if (code != 13) {\n      event.preventDefault();\n    }\n    if (48 <= code && code <= 57 || isMinusSign || isDecimalSign) {\n      this.insert(event, char, {\n        isDecimalSign,\n        isMinusSign\n      });\n    }\n  }\n  onPaste(event) {\n    if (!this.disabled && !this.readonly) {\n      event.preventDefault();\n      let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\n      if (data) {\n        let filteredData = this.parseValue(data);\n        if (filteredData != null) {\n          this.insert(event, filteredData.toString());\n        }\n      }\n    }\n  }\n  allowMinusSign() {\n    return this.min == null || this.min < 0;\n  }\n  isMinusSign(char) {\n    if (this._minusSign.test(char) || char === '-') {\n      this._minusSign.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalSign(char) {\n    if (this._decimal.test(char)) {\n      this._decimal.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalMode() {\n    return this.mode === 'decimal';\n  }\n  getDecimalCharIndexes(val) {\n    let decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n    const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      decimalCharIndexWithoutPrefix\n    };\n  }\n  getCharIndexes(val) {\n    const decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const minusCharIndex = val.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    const suffixCharIndex = val.search(this._suffix);\n    this._suffix.lastIndex = 0;\n    const currencyCharIndex = val.search(this._currency);\n    this._currency.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    };\n  }\n  insert(event, text, sign = {\n    isDecimalSign: false,\n    isMinusSign: false\n  }) {\n    const minusCharIndexOnText = text.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n      return;\n    }\n    let selectionStart = this.input?.nativeElement.selectionStart;\n    let selectionEnd = this.input?.nativeElement.selectionEnd;\n    let inputValue = this.input?.nativeElement.value.trim();\n    const {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    } = this.getCharIndexes(inputValue);\n    let newValueStr;\n    if (sign.isMinusSign) {\n      if (selectionStart === 0) {\n        newValueStr = inputValue;\n        if (minusCharIndex === -1 || selectionEnd !== 0) {\n          newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n        }\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else if (sign.isDecimalSign) {\n      if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n        this.updateValue(event, inputValue, text, 'insert');\n      } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      } else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else {\n      const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n      const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n      if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n        if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n          const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n          newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n          this.updateValue(event, newValueStr, text, operation);\n        }\n      } else {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, operation);\n      }\n    }\n  }\n  insertText(value, text, start, end) {\n    let textSplit = text === '.' ? text : text.split('.');\n    if (textSplit.length === 2) {\n      const decimalCharIndex = value.slice(start, end).search(this._decimal);\n      this._decimal.lastIndex = 0;\n      return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n    } else if (end - start === value.length) {\n      return this.formatValue(text);\n    } else if (start === 0) {\n      return text + value.slice(end);\n    } else if (end === value.length) {\n      return value.slice(0, start) + text;\n    } else {\n      return value.slice(0, start) + text + value.slice(end);\n    }\n  }\n  deleteRange(value, start, end) {\n    let newValueStr;\n    if (end - start === value.length) newValueStr = '';else if (start === 0) newValueStr = value.slice(end);else if (end === value.length) newValueStr = value.slice(0, start);else newValueStr = value.slice(0, start) + value.slice(end);\n    return newValueStr;\n  }\n  initCursor() {\n    let selectionStart = this.input?.nativeElement.selectionStart;\n    let inputValue = this.input?.nativeElement.value;\n    let valueLength = inputValue.length;\n    let index = null;\n    // remove prefix\n    let prefixLength = (this.prefixChar || '').length;\n    inputValue = inputValue.replace(this._prefix, '');\n    selectionStart = selectionStart - prefixLength;\n    let char = inputValue.charAt(selectionStart);\n    if (this.isNumeralChar(char)) {\n      return selectionStart + prefixLength;\n    }\n    //left\n    let i = selectionStart - 1;\n    while (i >= 0) {\n      char = inputValue.charAt(i);\n      if (this.isNumeralChar(char)) {\n        index = i + prefixLength;\n        break;\n      } else {\n        i--;\n      }\n    }\n    if (index !== null) {\n      this.input?.nativeElement.setSelectionRange(index + 1, index + 1);\n    } else {\n      i = selectionStart;\n      while (i < valueLength) {\n        char = inputValue.charAt(i);\n        if (this.isNumeralChar(char)) {\n          index = i + prefixLength;\n          break;\n        } else {\n          i++;\n        }\n      }\n      if (index !== null) {\n        this.input?.nativeElement.setSelectionRange(index, index);\n      }\n    }\n    return index || 0;\n  }\n  onInputClick() {\n    const currentValue = this.input?.nativeElement.value;\n    if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n      this.initCursor();\n    }\n  }\n  isNumeralChar(char) {\n    if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n      this.resetRegex();\n      return true;\n    }\n    return false;\n  }\n  resetRegex() {\n    this._numeral.lastIndex = 0;\n    this._decimal.lastIndex = 0;\n    this._group.lastIndex = 0;\n    this._minusSign.lastIndex = 0;\n  }\n  updateValue(event, valueStr, insertedValueStr, operation) {\n    let currentValue = this.input?.nativeElement.value;\n    let newValue = null;\n    if (valueStr != null) {\n      newValue = this.parseValue(valueStr);\n      newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n      this.updateInput(newValue, insertedValueStr, operation, valueStr);\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }\n  handleOnInput(event, currentValue, newValue) {\n    if (this.isValueChanged(currentValue, newValue)) {\n      this.input.nativeElement.value = this.formatValue(newValue);\n      this.input?.nativeElement.setAttribute('aria-valuenow', newValue);\n      this.updateModel(event, newValue);\n      this.onInput.emit({\n        originalEvent: event,\n        value: newValue,\n        formattedValue: currentValue\n      });\n    }\n  }\n  isValueChanged(currentValue, newValue) {\n    if (newValue === null && currentValue !== null) {\n      return true;\n    }\n    if (newValue != null) {\n      let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n      return newValue !== parsedCurrentValue;\n    }\n    return false;\n  }\n  validateValue(value) {\n    if (value === '-' || value == null) {\n      return null;\n    }\n    if (this.min != null && value < this.min) {\n      return this.min;\n    }\n    if (this.max != null && value > this.max) {\n      return this.max;\n    }\n    return value;\n  }\n  updateInput(value, insertedValueStr, operation, valueStr) {\n    insertedValueStr = insertedValueStr || '';\n    let inputValue = this.input?.nativeElement.value;\n    let newValue = this.formatValue(value);\n    let currentLength = inputValue.length;\n    if (newValue !== valueStr) {\n      newValue = this.concatValues(newValue, valueStr);\n    }\n    if (currentLength === 0) {\n      this.input.nativeElement.value = newValue;\n      this.input.nativeElement.setSelectionRange(0, 0);\n      const index = this.initCursor();\n      const selectionEnd = index + insertedValueStr.length;\n      this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n    } else {\n      let selectionStart = this.input.nativeElement.selectionStart;\n      let selectionEnd = this.input.nativeElement.selectionEnd;\n      if (this.maxlength && this.maxlength < newValue.length) {\n        return;\n      }\n      this.input.nativeElement.value = newValue;\n      let newLength = newValue.length;\n      if (operation === 'range-insert') {\n        const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n        const startValueStr = startValue !== null ? startValue.toString() : '';\n        const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n        const sRegex = new RegExp(startExpr, 'g');\n        sRegex.test(newValue);\n        const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n        const tRegex = new RegExp(tExpr, 'g');\n        tRegex.test(newValue.slice(sRegex.lastIndex));\n        selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (newLength === currentLength) {\n        if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (operation === 'delete-back-single') {\n        let prevChar = inputValue.charAt(selectionEnd - 1);\n        let nextChar = inputValue.charAt(selectionEnd);\n        let diff = currentLength - newLength;\n        let isGroupChar = this._group.test(nextChar);\n        if (isGroupChar && diff === 1) {\n          selectionEnd += 1;\n        } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n          selectionEnd += -1 * diff + 1;\n        }\n        this._group.lastIndex = 0;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (inputValue === '-' && operation === 'insert') {\n        this.input.nativeElement.setSelectionRange(0, 0);\n        const index = this.initCursor();\n        const selectionEnd = index + insertedValueStr.length + 1;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else {\n        selectionEnd = selectionEnd + (newLength - currentLength);\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      }\n    }\n    this.input.nativeElement.setAttribute('aria-valuenow', value);\n  }\n  concatValues(val1, val2) {\n    if (val1 && val2) {\n      let decimalCharIndex = val2.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      if (this.suffixChar) {\n        return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n      } else {\n        return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n      }\n    }\n    return val1;\n  }\n  getDecimalLength(value) {\n    if (value) {\n      const valueSplit = value.split(this._decimal);\n      if (valueSplit.length === 2) {\n        return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n      }\n    }\n    return 0;\n  }\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n    this.input.nativeElement.value = this.formatValue(newValue);\n    this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n    this.updateModel(event, newValue);\n    this.onBlur.emit(event);\n  }\n  formattedValue() {\n    const val = !this.value && !this.allowEmpty ? 0 : this.value;\n    return this.formatValue(val);\n  }\n  updateModel(event, value) {\n    const isBlurUpdateOnMode = this.ngControl?.control?.updateOn === 'blur';\n    if (this.value !== value) {\n      this.value = value;\n      if (!(isBlurUpdateOnMode && this.focused)) {\n        this.onModelChange(value);\n      }\n    } else if (isBlurUpdateOnMode) {\n      this.onModelChange(value);\n    }\n    this.onModelTouched();\n  }\n  writeValue(value) {\n    this.value = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  get filled() {\n    return this.value != null && this.value.toString().length > 0;\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n  getFormatter() {\n    return this.numberFormat;\n  }\n}\n_class = InputNumber;\n_defineProperty(InputNumber, \"\\u0275fac\", function _class_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Injector));\n});\n_defineProperty(InputNumber, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"p-inputNumber\"]],\n  contentQueries: function _class_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function _class_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function _class_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused)(\"p-inputnumber-clearable\", ctx.showClear && ctx.buttonLayout != \"vertical\");\n    }\n  },\n  inputs: {\n    showButtons: \"showButtons\",\n    format: \"format\",\n    buttonLayout: \"buttonLayout\",\n    inputId: \"inputId\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    placeholder: \"placeholder\",\n    size: \"size\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaRequired: \"ariaRequired\",\n    name: \"name\",\n    required: \"required\",\n    autocomplete: \"autocomplete\",\n    min: \"min\",\n    max: \"max\",\n    incrementButtonClass: \"incrementButtonClass\",\n    decrementButtonClass: \"decrementButtonClass\",\n    incrementButtonIcon: \"incrementButtonIcon\",\n    decrementButtonIcon: \"decrementButtonIcon\",\n    readonly: \"readonly\",\n    step: \"step\",\n    allowEmpty: \"allowEmpty\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    mode: \"mode\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    inputStyle: \"inputStyle\",\n    inputStyleClass: \"inputStyleClass\",\n    showClear: \"showClear\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onInput: \"onInput\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\",\n    onClear: \"onClear\"\n  },\n  features: [i0.ɵɵProvidersFeature([INPUTNUMBER_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 32,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", \"inputmode\", \"decimal\", 3, \"ngClass\", \"ngStyle\", \"value\", \"disabled\", \"readonly\", \"input\", \"keydown\", \"keypress\", \"paste\", \"click\", \"focus\", \"blur\"], [\"input\", \"\"], [4, \"ngIf\"], [\"class\", \"p-inputnumber-button-group\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-icon-only\", \"tabindex\", \"-1\", 3, \"ngClass\", \"class\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-inputnumber-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [1, \"p-inputnumber-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [1, \"p-inputnumber-button-group\"], [\"type\", \"button\", \"pButton\", \"\", \"tabindex\", \"-1\", 1, \"p-button-icon-only\", 3, \"ngClass\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n  template: function _class_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"input\", function _class_Template_input_input_1_listener($event) {\n        return ctx.onUserInput($event);\n      })(\"keydown\", function _class_Template_input_keydown_1_listener($event) {\n        return ctx.onInputKeyDown($event);\n      })(\"keypress\", function _class_Template_input_keypress_1_listener($event) {\n        return ctx.onInputKeyPress($event);\n      })(\"paste\", function _class_Template_input_paste_1_listener($event) {\n        return ctx.onPaste($event);\n      })(\"click\", function _class_Template_input_click_1_listener() {\n        return ctx.onInputClick();\n      })(\"focus\", function _class_Template_input_focus_1_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function _class_Template_input_blur_1_listener($event) {\n        return ctx.onInputBlur($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, _class_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, _class_span_4_Template, 7, 14, \"span\", 4);\n      i0.ɵɵtemplate(5, _class_button_5_Template, 3, 7, \"button\", 5);\n      i0.ɵɵtemplate(6, _class_button_6_Template, 3, 7, \"button\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(28, _c3, ctx.showButtons && ctx.buttonLayout === \"stacked\", ctx.showButtons && ctx.buttonLayout === \"horizontal\", ctx.showButtons && ctx.buttonLayout === \"vertical\"))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.inputStyleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-inputnumber-input\")(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.formattedValue())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n      i0.ɵɵattribute(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"id\", ctx.inputId)(\"size\", ctx.size)(\"name\", ctx.name)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.ariaLabel)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"min\", ctx.min)(\"max\", ctx.max);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonLayout != \"vertical\" && ctx.showClear && ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout === \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n    }\n  },\n  dependencies: function () {\n    return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.InputText, i3.ButtonDirective, TimesIcon, AngleUpIcon, AngleDownIcon];\n  },\n  styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumber, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputNumber',\n      template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\" />\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!incrementButtonIcon\">\n                        <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!decrementButtonIcon\">\n                        <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n        </span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [INPUTNUMBER_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused',\n        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n      },\n      styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Injector\n    }];\n  }, {\n    showButtons: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    buttonLayout: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    incrementButtonClass: [{\n      type: Input\n    }],\n    decrementButtonClass: [{\n      type: Input\n    }],\n    incrementButtonIcon: [{\n      type: Input\n    }],\n    decrementButtonIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    allowEmpty: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass InputNumberModule {}\n_class2 = InputNumberModule;\n_defineProperty(InputNumberModule, \"\\u0275fac\", function _class2_Factory(t) {\n  return new (t || _class2)();\n});\n_defineProperty(InputNumberModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _class2\n}));\n_defineProperty(InputNumberModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon, SharedModule]\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n      exports: [InputNumber, SharedModule],\n      declarations: [InputNumber]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };","map":{"version":3,"names":["i1","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","ViewChild","ContentChildren","NgModule","NG_VALUE_ACCESSOR","NgControl","i3","ButtonModule","DomHandler","i2","InputTextModule","PrimeTemplate","SharedModule","TimesIcon","AngleUpIcon","AngleDownIcon","_c0","_class_ng_container_3_TimesIcon_1_Template","rf","ctx","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","_class_ng_container_3_TimesIcon_1_Template_TimesIcon_click_0_listener","ɵɵrestoreView","ctx_r7","ɵɵnextContext","ɵɵresetView","clear","ɵɵelementEnd","ɵɵproperty","_class_ng_container_3_span_2_1_ng_template_0_Template","_class_ng_container_3_span_2_1_Template","ɵɵtemplate","_class_ng_container_3_span_2_Template","_r12","_class_ng_container_3_span_2_Template_span_click_0_listener","ctx_r11","ctx_r6","ɵɵadvance","clearIconTemplate","_class_ng_container_3_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r1","_class_span_4_span_2_Template","ɵɵelement","ctx_r13","incrementButtonIcon","_class_span_4_ng_container_3_AngleUpIcon_1_Template","_class_span_4_ng_container_3_2_ng_template_0_Template","_class_span_4_ng_container_3_2_Template","_class_span_4_ng_container_3_Template","ctx_r14","incrementButtonIconTemplate","_class_span_4_span_5_Template","ctx_r15","decrementButtonIcon","_class_span_4_ng_container_6_AngleDownIcon_1_Template","_class_span_4_ng_container_6_2_ng_template_0_Template","_class_span_4_ng_container_6_2_Template","_class_span_4_ng_container_6_Template","ctx_r16","decrementButtonIconTemplate","_c1","_c2","_class_span_4_Template","_r24","_class_span_4_Template_button_mousedown_1_listener","$event","ctx_r23","onUpButtonMouseDown","_class_span_4_Template_button_mouseup_1_listener","ctx_r25","onUpButtonMouseUp","_class_span_4_Template_button_mouseleave_1_listener","ctx_r26","onUpButtonMouseLeave","_class_span_4_Template_button_keydown_1_listener","ctx_r27","onUpButtonKeyDown","_class_span_4_Template_button_keyup_1_listener","ctx_r28","onUpButtonKeyUp","_class_span_4_Template_button_mousedown_4_listener","ctx_r29","onDownButtonMouseDown","_class_span_4_Template_button_mouseup_4_listener","ctx_r30","onDownButtonMouseUp","_class_span_4_Template_button_mouseleave_4_listener","ctx_r31","onDownButtonMouseLeave","_class_span_4_Template_button_keydown_4_listener","ctx_r32","onDownButtonKeyDown","_class_span_4_Template_button_keyup_4_listener","ctx_r33","onDownButtonKeyUp","ctx_r2","ɵɵclassMap","incrementButtonClass","ɵɵpureFunction0","disabled","decrementButtonClass","_class_button_5_span_1_Template","ctx_r34","_class_button_5_ng_container_2_AngleUpIcon_1_Template","_class_button_5_ng_container_2_2_ng_template_0_Template","_class_button_5_ng_container_2_2_Template","_class_button_5_ng_container_2_Template","ctx_r35","_class_button_5_Template","_r40","_class_button_5_Template_button_mousedown_0_listener","ctx_r39","_class_button_5_Template_button_mouseup_0_listener","ctx_r41","_class_button_5_Template_button_mouseleave_0_listener","ctx_r42","_class_button_5_Template_button_keydown_0_listener","ctx_r43","_class_button_5_Template_button_keyup_0_listener","ctx_r44","ctx_r3","_class_button_6_span_1_Template","ctx_r45","_class_button_6_ng_container_2_AngleDownIcon_1_Template","_class_button_6_ng_container_2_2_ng_template_0_Template","_class_button_6_ng_container_2_2_Template","_class_button_6_ng_container_2_Template","ctx_r46","_class_button_6_Template","_r51","_class_button_6_Template_button_mousedown_0_listener","ctx_r50","_class_button_6_Template_button_mouseup_0_listener","ctx_r52","_class_button_6_Template_button_mouseleave_0_listener","ctx_r53","_class_button_6_Template_button_keydown_0_listener","ctx_r54","_class_button_6_Template_button_keyup_0_listener","ctx_r55","ctx_r4","_c3","a1","a2","a3","INPUTNUMBER_VALUE_ACCESSOR","provide","useExisting","InputNumber","multi","_disabled","focused","timer","clearTimer","constructor","document","el","cd","injector","_defineProperty","ngOnChanges","simpleChange","props","some","p","updateConstructParser","ngAfterContentInit","templates","forEach","item","getType","template","ngOnInit","ngControl","get","optional","constructParser","initialized","getOptions","localeMatcher","style","mode","currency","currencyDisplay","useGrouping","minimumFractionDigits","minFractionDigits","maximumFractionDigits","maxFractionDigits","numberFormat","Intl","NumberFormat","locale","numerals","format","reverse","index","Map","map","d","i","_numeral","RegExp","join","_group","getGroupingExpression","_minusSign","getMinusSignExpression","_currency","getCurrencyExpression","_decimal","getDecimalExpression","_suffix","getSuffixExpression","_prefix","getPrefixExpression","_index","escapeRegExp","text","replace","formatter","trim","groupChar","charAt","prefix","prefixChar","split","suffix","suffixChar","formatValue","value","formattedValue","toString","parseValue","filteredText","parsedValue","isNaN","repeat","event","interval","dir","readonly","setTimeout","spin","step","currentValue","input","nativeElement","newValue","validateValue","maxlength","length","updateInput","updateModel","handleOnInput","onModelChange","onClear","emit","button","focus","preventDefault","keyCode","onUserInput","isSpecialChar","target","lastValue","onInputKeyDown","shiftKey","altKey","selectionStart","selectionEnd","inputValue","newValueStr","which","isNumeralChar","setAttribute","deleteChar","decimalCharIndex","decimalCharIndexWithoutPrefix","getDecimalCharIndexes","decimalLength","getDecimalLength","test","lastIndex","slice","setSelectionRange","insertedText","isDecimalMode","updateValue","deleteRange","onKeyDown","onInputKeyPress","code","char","String","fromCharCode","isDecimalSign","isMinusSign","insert","onPaste","data","clipboardData","defaultView","getData","filteredData","allowMinusSign","min","val","search","filteredVal","getCharIndexes","minusCharIndex","suffixCharIndex","currencyCharIndex","sign","minusCharIndexOnText","insertText","resolvedOptions","operation","charIndex","start","end","textSplit","initCursor","valueLength","prefixLength","onInputClick","getSelection","resetRegex","valueStr","insertedValueStr","allowEmpty","isValueChanged","onInput","originalEvent","parsedCurrentValue","max","currentLength","concatValues","newLength","startValue","startValueStr","startExpr","sRegex","tExpr","tRegex","prevChar","nextChar","diff","isGroupChar","val1","val2","valueSplit","onInputFocus","onFocus","onInputBlur","onBlur","isBlurUpdateOnMode","control","updateOn","onModelTouched","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","filled","clearInterval","getFormatter","_class","_class_Factory","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","Injector","ɵɵdefineComponent","type","selectors","contentQueries","_class_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_class_Query","ɵɵviewQuery","first","hostAttrs","hostVars","hostBindings","_class_HostBindings","ɵɵclassProp","showClear","buttonLayout","inputs","showButtons","inputId","styleClass","placeholder","size","tabindex","title","ariaLabel","ariaRequired","name","required","autocomplete","inputStyle","inputStyleClass","outputs","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","_class_Template","_class_Template_input_input_1_listener","_class_Template_input_keydown_1_listener","_class_Template_input_keypress_1_listener","_class_Template_input_paste_1_listener","_class_Template_input_click_1_listener","_class_Template_input_focus_1_listener","_class_Template_input_blur_1_listener","ɵɵpureFunction3","ɵɵattribute","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","InputText","ButtonDirective","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","providers","None","host","class","Document","decorators","InputNumberModule","_class2","_class2_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/USUARIO/Desktop/CURSO EM VÍDEO/4Fit/4fit-frontend/sakai-ng/node_modules/primeng/fesm2022/primeng-inputnumber.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { AngleUpIcon } from 'primeng/icons/angleup';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\n\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputNumber),\n    multi: true\n};\n/**\n * InputNumber is an input component to provide numerical input.\n * @group Components\n */\nclass InputNumber {\n    document;\n    el;\n    cd;\n    injector;\n    /**\n     * Displays spinner buttons.\n     * @group Props\n     */\n    showButtons = false;\n    /**\n     * Whether to format the value.\n     * @group Props\n     */\n    format = true;\n    /**\n     * Layout of the buttons, valid values are \"stacked\" (default), \"horizontal\" and \"vertical\".\n     * @group Props\n     */\n    buttonLayout = 'stacked';\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Advisory information to display on input.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Size of the input field.\n     * @group Props\n     */\n    size;\n    /**\n     * Maximum number of character allows in the input field.\n     * @group Props\n     */\n    maxlength;\n    /**\n     * Specifies tab order of the element.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Title text of the input text.\n     * @group Props\n     */\n    title;\n    /**\n     * Used to define a string that labels the input element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Used to indicate that user input is required on an element before a form can be submitted.\n     * @group Props\n     */\n    ariaRequired;\n    /**\n     * Name of the input field.\n     * @group Props\n     */\n    name;\n    /**\n     * No description available.\n     * @group Props\n     */\n    required;\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    autocomplete;\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    min;\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    max;\n    /**\n     * Style class of the increment button.\n     * @group Props\n     */\n    incrementButtonClass;\n    /**\n     * Style class of the decrement button.\n     * @group Props\n     */\n    decrementButtonClass;\n    /**\n     * Style class of the increment button.\n     * @group Props\n     */\n    incrementButtonIcon;\n    /**\n     * Style class of the decrement button.\n     * @group Props\n     */\n    decrementButtonIcon;\n    /**\n     * When present, it specifies that an input field is read-only.\n     * @group Props\n     */\n    readonly = false;\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    step = 1;\n    /**\n     * Determines whether the input field is empty.\n     * @group Props\n     */\n    allowEmpty = true;\n    /**\n     * Locale to be used in formatting.\n     * @group Props\n     */\n    locale;\n    /**\n     * The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\"; the default is \"best fit\". See Locale Negotiation for details.\n     * @group Props\n     */\n    localeMatcher;\n    /**\n     * Defines the behavior of the component, valid values are \"decimal\" and \"currency\".\n     * @group Props\n     */\n    mode = 'decimal';\n    /**\n     * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB. There is no default value; if the style is \"currency\", the currency property must be provided.\n     * @group Props\n     */\n    currency;\n    /**\n     * How to display the currency in currency formatting. Possible values are \"symbol\" to use a localized currency symbol such as €, ü\"code\" to use the ISO currency code, \"name\" to use a localized currency name such as \"dollar\"; the default is \"symbol\".\n     * @group Props\n     */\n    currencyDisplay;\n    /**\n     * Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.\n     * @group Props\n     */\n    useGrouping = true;\n    /**\n     * The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n     * @group Props\n     */\n    minFractionDigits;\n    /**\n     * The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the ISO 4217 currency code list (2 if the list doesn't provide that information).\n     * @group Props\n     */\n    maxFractionDigits;\n    /**\n     * Text to display before the value.\n     * @group Props\n     */\n    prefix;\n    /**\n     * Text to display after the value.\n     * @group Props\n     */\n    suffix;\n    /**\n     * Inline style of the input field.\n     * @group Props\n     */\n    inputStyle;\n    /**\n     * Style class of the input field.\n     * @group Props\n     */\n    inputStyleClass;\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear = false;\n    /**\n     * No description available.\n     * @group Emits\n     */\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        if (disabled)\n            this.focused = false;\n        this._disabled = disabled;\n        if (this.timer)\n            this.clearTimer();\n    }\n    /**\n     * Callback to invoke on input.\n     * @param {InputNumberInputEvent} event - Custom input event.\n     * @group Emits\n     */\n    onInput = new EventEmitter();\n    /**\n     * Callback to invoke when the component receives focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when the component loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke on input key press.\n     * @param {KeyboardEvent} event - Keyboard event.\n     * @group Emits\n     */\n    onKeyDown = new EventEmitter();\n    /**\n     * Callback to invoke when clear token is clicked.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    input;\n    templates;\n    clearIconTemplate;\n    incrementButtonIconTemplate;\n    decrementButtonIconTemplate;\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    focused;\n    initialized;\n    groupChar = '';\n    prefixChar = '';\n    suffixChar = '';\n    isSpecialChar;\n    timer;\n    lastValue;\n    _numeral;\n    numberFormat;\n    _decimal;\n    _group;\n    _minusSign;\n    _currency;\n    _prefix;\n    _suffix;\n    _index;\n    _disabled;\n    ngControl = null;\n    constructor(document, el, cd, injector) {\n        this.document = document;\n        this.el = el;\n        this.cd = cd;\n        this.injector = injector;\n    }\n    ngOnChanges(simpleChange) {\n        const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n        if (props.some((p) => !!simpleChange[p])) {\n            this.updateConstructParser();\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'clearicon':\n                    this.clearIconTemplate = item.template;\n                    break;\n                case 'incrementbuttonicon':\n                    this.incrementButtonIconTemplate = item.template;\n                    break;\n                case 'decrementbuttonicon':\n                    this.decrementButtonIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnInit() {\n        this.ngControl = this.injector.get(NgControl, null, { optional: true });\n        this.constructParser();\n        this.initialized = true;\n    }\n    getOptions() {\n        return {\n            localeMatcher: this.localeMatcher,\n            style: this.mode,\n            currency: this.currency,\n            currencyDisplay: this.currencyDisplay,\n            useGrouping: this.useGrouping,\n            minimumFractionDigits: this.minFractionDigits,\n            maximumFractionDigits: this.maxFractionDigits\n        };\n    }\n    constructParser() {\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n        const numerals = [...new Intl.NumberFormat(this.locale, { useGrouping: false }).format(9876543210)].reverse();\n        const index = new Map(numerals.map((d, i) => [d, i]));\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n        this._group = this.getGroupingExpression();\n        this._minusSign = this.getMinusSignExpression();\n        this._currency = this.getCurrencyExpression();\n        this._decimal = this.getDecimalExpression();\n        this._suffix = this.getSuffixExpression();\n        this._prefix = this.getPrefixExpression();\n        this._index = (d) => index.get(d);\n    }\n    updateConstructParser() {\n        if (this.initialized) {\n            this.constructParser();\n        }\n    }\n    escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n    getDecimalExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { ...this.getOptions(), useGrouping: false });\n        return new RegExp(`[${formatter\n            .format(1.1)\n            .replace(this._currency, '')\n            .trim()\n            .replace(this._numeral, '')}]`, 'g');\n    }\n    getGroupingExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: true });\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n        return new RegExp(`[${this.groupChar}]`, 'g');\n    }\n    getMinusSignExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: false });\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n    }\n    getCurrencyExpression() {\n        if (this.currency) {\n            const formatter = new Intl.NumberFormat(this.locale, { style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n        }\n        return new RegExp(`[]`, 'g');\n    }\n    getPrefixExpression() {\n        if (this.prefix) {\n            this.prefixChar = this.prefix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay });\n            this.prefixChar = formatter.format(1).split('1')[0];\n        }\n        return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n    }\n    getSuffixExpression() {\n        if (this.suffix) {\n            this.suffixChar = this.suffix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            this.suffixChar = formatter.format(1).split('1')[1];\n        }\n        return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n    }\n    formatValue(value) {\n        if (value != null) {\n            if (value === '-') {\n                // Minus sign\n                return value;\n            }\n            if (this.format) {\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n                let formattedValue = formatter.format(value);\n                if (this.prefix) {\n                    formattedValue = this.prefix + formattedValue;\n                }\n                if (this.suffix) {\n                    formattedValue = formattedValue + this.suffix;\n                }\n                return formattedValue;\n            }\n            return value.toString();\n        }\n        return '';\n    }\n    parseValue(text) {\n        let filteredText = text\n            .replace(this._suffix, '')\n            .replace(this._prefix, '')\n            .trim()\n            .replace(/\\s/g, '')\n            .replace(this._currency, '')\n            .replace(this._group, '')\n            .replace(this._minusSign, '-')\n            .replace(this._decimal, '.')\n            .replace(this._numeral, this._index);\n        if (filteredText) {\n            if (filteredText === '-')\n                // Minus sign\n                return filteredText;\n            let parsedValue = +filteredText;\n            return isNaN(parsedValue) ? null : parsedValue;\n        }\n        return null;\n    }\n    repeat(event, interval, dir) {\n        if (this.readonly) {\n            return;\n        }\n        let i = interval || 500;\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n        this.spin(event, dir);\n    }\n    spin(event, dir) {\n        let step = this.step * dir;\n        let currentValue = this.parseValue(this.input?.nativeElement.value) || 0;\n        let newValue = this.validateValue(currentValue + step);\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n            return;\n        }\n        this.updateInput(newValue, null, 'spin', null);\n        this.updateModel(event, newValue);\n        this.handleOnInput(event, currentValue, newValue);\n    }\n    clear() {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onUpButtonMouseDown(event) {\n        if (event.button === 2) {\n            this.clearTimer();\n            return;\n        }\n        this.input?.nativeElement.focus();\n        this.repeat(event, null, 1);\n        event.preventDefault();\n    }\n    onUpButtonMouseUp() {\n        this.clearTimer();\n    }\n    onUpButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onUpButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, 1);\n        }\n    }\n    onUpButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseDown(event) {\n        if (event.button === 2) {\n            this.clearTimer();\n            return;\n        }\n        this.input?.nativeElement.focus();\n        this.repeat(event, null, -1);\n        event.preventDefault();\n    }\n    onDownButtonMouseUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onDownButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, -1);\n        }\n    }\n    onUserInput(event) {\n        if (this.readonly) {\n            return;\n        }\n        if (this.isSpecialChar) {\n            event.target.value = this.lastValue;\n        }\n        this.isSpecialChar = false;\n    }\n    onInputKeyDown(event) {\n        if (this.readonly) {\n            return;\n        }\n        this.lastValue = event.target.value;\n        if (event.shiftKey || event.altKey) {\n            this.isSpecialChar = true;\n            return;\n        }\n        let selectionStart = event.target.selectionStart;\n        let selectionEnd = event.target.selectionEnd;\n        let inputValue = event.target.value;\n        let newValueStr = null;\n        if (event.altKey) {\n            event.preventDefault();\n        }\n        switch (event.which) {\n            //up\n            case 38:\n                this.spin(event, 1);\n                event.preventDefault();\n                break;\n            //down\n            case 40:\n                this.spin(event, -1);\n                event.preventDefault();\n                break;\n            //left\n            case 37:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n                    event.preventDefault();\n                }\n                break;\n            //right\n            case 39:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n                this.input.nativeElement.value = this.formatValue(newValueStr);\n                this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n                this.updateModel(event, newValueStr);\n                break;\n            //backspace\n            case 8: {\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart - 1);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input?.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            }\n            // del\n            case 46:\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input?.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            default:\n                break;\n        }\n        this.onKeyDown.emit(event);\n    }\n    onInputKeyPress(event) {\n        if (this.readonly) {\n            return;\n        }\n        let code = event.which || event.keyCode;\n        let char = String.fromCharCode(code);\n        const isDecimalSign = this.isDecimalSign(char);\n        const isMinusSign = this.isMinusSign(char);\n        if (code != 13) {\n            event.preventDefault();\n        }\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\n            this.insert(event, char, { isDecimalSign, isMinusSign });\n        }\n    }\n    onPaste(event) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\n            if (data) {\n                let filteredData = this.parseValue(data);\n                if (filteredData != null) {\n                    this.insert(event, filteredData.toString());\n                }\n            }\n        }\n    }\n    allowMinusSign() {\n        return this.min == null || this.min < 0;\n    }\n    isMinusSign(char) {\n        if (this._minusSign.test(char) || char === '-') {\n            this._minusSign.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalSign(char) {\n        if (this._decimal.test(char)) {\n            this._decimal.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalMode() {\n        return this.mode === 'decimal';\n    }\n    getDecimalCharIndexes(val) {\n        let decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const filteredVal = val\n            .replace(this._prefix, '')\n            .trim()\n            .replace(/\\s/g, '')\n            .replace(this._currency, '');\n        const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        return { decimalCharIndex, decimalCharIndexWithoutPrefix };\n    }\n    getCharIndexes(val) {\n        const decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const minusCharIndex = val.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        const suffixCharIndex = val.search(this._suffix);\n        this._suffix.lastIndex = 0;\n        const currencyCharIndex = val.search(this._currency);\n        this._currency.lastIndex = 0;\n        return { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex };\n    }\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\n        const minusCharIndexOnText = text.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n            return;\n        }\n        let selectionStart = this.input?.nativeElement.selectionStart;\n        let selectionEnd = this.input?.nativeElement.selectionEnd;\n        let inputValue = this.input?.nativeElement.value.trim();\n        const { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex } = this.getCharIndexes(inputValue);\n        let newValueStr;\n        if (sign.isMinusSign) {\n            if (selectionStart === 0) {\n                newValueStr = inputValue;\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n                }\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else if (sign.isDecimalSign) {\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n                this.updateValue(event, inputValue, text, 'insert');\n            }\n            else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n            else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else {\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n                    const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n                    this.updateValue(event, newValueStr, text, operation);\n                }\n            }\n            else {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, operation);\n            }\n        }\n    }\n    insertText(value, text, start, end) {\n        let textSplit = text === '.' ? text : text.split('.');\n        if (textSplit.length === 2) {\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\n            this._decimal.lastIndex = 0;\n            return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n        }\n        else if (end - start === value.length) {\n            return this.formatValue(text);\n        }\n        else if (start === 0) {\n            return text + value.slice(end);\n        }\n        else if (end === value.length) {\n            return value.slice(0, start) + text;\n        }\n        else {\n            return value.slice(0, start) + text + value.slice(end);\n        }\n    }\n    deleteRange(value, start, end) {\n        let newValueStr;\n        if (end - start === value.length)\n            newValueStr = '';\n        else if (start === 0)\n            newValueStr = value.slice(end);\n        else if (end === value.length)\n            newValueStr = value.slice(0, start);\n        else\n            newValueStr = value.slice(0, start) + value.slice(end);\n        return newValueStr;\n    }\n    initCursor() {\n        let selectionStart = this.input?.nativeElement.selectionStart;\n        let inputValue = this.input?.nativeElement.value;\n        let valueLength = inputValue.length;\n        let index = null;\n        // remove prefix\n        let prefixLength = (this.prefixChar || '').length;\n        inputValue = inputValue.replace(this._prefix, '');\n        selectionStart = selectionStart - prefixLength;\n        let char = inputValue.charAt(selectionStart);\n        if (this.isNumeralChar(char)) {\n            return selectionStart + prefixLength;\n        }\n        //left\n        let i = selectionStart - 1;\n        while (i >= 0) {\n            char = inputValue.charAt(i);\n            if (this.isNumeralChar(char)) {\n                index = i + prefixLength;\n                break;\n            }\n            else {\n                i--;\n            }\n        }\n        if (index !== null) {\n            this.input?.nativeElement.setSelectionRange(index + 1, index + 1);\n        }\n        else {\n            i = selectionStart;\n            while (i < valueLength) {\n                char = inputValue.charAt(i);\n                if (this.isNumeralChar(char)) {\n                    index = i + prefixLength;\n                    break;\n                }\n                else {\n                    i++;\n                }\n            }\n            if (index !== null) {\n                this.input?.nativeElement.setSelectionRange(index, index);\n            }\n        }\n        return index || 0;\n    }\n    onInputClick() {\n        const currentValue = this.input?.nativeElement.value;\n        if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n            this.initCursor();\n        }\n    }\n    isNumeralChar(char) {\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n            this.resetRegex();\n            return true;\n        }\n        return false;\n    }\n    resetRegex() {\n        this._numeral.lastIndex = 0;\n        this._decimal.lastIndex = 0;\n        this._group.lastIndex = 0;\n        this._minusSign.lastIndex = 0;\n    }\n    updateValue(event, valueStr, insertedValueStr, operation) {\n        let currentValue = this.input?.nativeElement.value;\n        let newValue = null;\n        if (valueStr != null) {\n            newValue = this.parseValue(valueStr);\n            newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n            this.updateInput(newValue, insertedValueStr, operation, valueStr);\n            this.handleOnInput(event, currentValue, newValue);\n        }\n    }\n    handleOnInput(event, currentValue, newValue) {\n        if (this.isValueChanged(currentValue, newValue)) {\n            this.input.nativeElement.value = this.formatValue(newValue);\n            this.input?.nativeElement.setAttribute('aria-valuenow', newValue);\n            this.updateModel(event, newValue);\n            this.onInput.emit({ originalEvent: event, value: newValue, formattedValue: currentValue });\n        }\n    }\n    isValueChanged(currentValue, newValue) {\n        if (newValue === null && currentValue !== null) {\n            return true;\n        }\n        if (newValue != null) {\n            let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n            return newValue !== parsedCurrentValue;\n        }\n        return false;\n    }\n    validateValue(value) {\n        if (value === '-' || value == null) {\n            return null;\n        }\n        if (this.min != null && value < this.min) {\n            return this.min;\n        }\n        if (this.max != null && value > this.max) {\n            return this.max;\n        }\n        return value;\n    }\n    updateInput(value, insertedValueStr, operation, valueStr) {\n        insertedValueStr = insertedValueStr || '';\n        let inputValue = this.input?.nativeElement.value;\n        let newValue = this.formatValue(value);\n        let currentLength = inputValue.length;\n        if (newValue !== valueStr) {\n            newValue = this.concatValues(newValue, valueStr);\n        }\n        if (currentLength === 0) {\n            this.input.nativeElement.value = newValue;\n            this.input.nativeElement.setSelectionRange(0, 0);\n            const index = this.initCursor();\n            const selectionEnd = index + insertedValueStr.length;\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n        }\n        else {\n            let selectionStart = this.input.nativeElement.selectionStart;\n            let selectionEnd = this.input.nativeElement.selectionEnd;\n            if (this.maxlength && this.maxlength < newValue.length) {\n                return;\n            }\n            this.input.nativeElement.value = newValue;\n            let newLength = newValue.length;\n            if (operation === 'range-insert') {\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n                const startValueStr = startValue !== null ? startValue.toString() : '';\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n                const sRegex = new RegExp(startExpr, 'g');\n                sRegex.test(newValue);\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n                const tRegex = new RegExp(tExpr, 'g');\n                tRegex.test(newValue.slice(sRegex.lastIndex));\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (newLength === currentLength) {\n                if (operation === 'insert' || operation === 'delete-back-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\n                else if (operation === 'delete-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\n                else if (operation === 'delete-range' || operation === 'spin')\n                    this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (operation === 'delete-back-single') {\n                let prevChar = inputValue.charAt(selectionEnd - 1);\n                let nextChar = inputValue.charAt(selectionEnd);\n                let diff = currentLength - newLength;\n                let isGroupChar = this._group.test(nextChar);\n                if (isGroupChar && diff === 1) {\n                    selectionEnd += 1;\n                }\n                else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n                    selectionEnd += -1 * diff + 1;\n                }\n                this._group.lastIndex = 0;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (inputValue === '-' && operation === 'insert') {\n                this.input.nativeElement.setSelectionRange(0, 0);\n                const index = this.initCursor();\n                const selectionEnd = index + insertedValueStr.length + 1;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else {\n                selectionEnd = selectionEnd + (newLength - currentLength);\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n        }\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n    concatValues(val1, val2) {\n        if (val1 && val2) {\n            let decimalCharIndex = val2.search(this._decimal);\n            this._decimal.lastIndex = 0;\n            if (this.suffixChar) {\n                return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n            }\n            else {\n                return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n            }\n        }\n        return val1;\n    }\n    getDecimalLength(value) {\n        if (value) {\n            const valueSplit = value.split(this._decimal);\n            if (valueSplit.length === 2) {\n                return valueSplit[1]\n                    .replace(this._suffix, '')\n                    .trim()\n                    .replace(/\\s/g, '')\n                    .replace(this._currency, '').length;\n            }\n        }\n        return 0;\n    }\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValue);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n        this.updateModel(event, newValue);\n        this.onBlur.emit(event);\n    }\n    formattedValue() {\n        const val = !this.value && !this.allowEmpty ? 0 : this.value;\n        return this.formatValue(val);\n    }\n    updateModel(event, value) {\n        const isBlurUpdateOnMode = this.ngControl?.control?.updateOn === 'blur';\n        if (this.value !== value) {\n            this.value = value;\n            if (!(isBlurUpdateOnMode && this.focused)) {\n                this.onModelChange(value);\n            }\n        }\n        else if (isBlurUpdateOnMode) {\n            this.onModelChange(value);\n        }\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get filled() {\n        return this.value != null && this.value.toString().length > 0;\n    }\n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    getFormatter() {\n        return this.numberFormat;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumber, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: InputNumber, selector: \"p-inputNumber\", inputs: { showButtons: \"showButtons\", format: \"format\", buttonLayout: \"buttonLayout\", inputId: \"inputId\", styleClass: \"styleClass\", style: \"style\", placeholder: \"placeholder\", size: \"size\", maxlength: \"maxlength\", tabindex: \"tabindex\", title: \"title\", ariaLabel: \"ariaLabel\", ariaRequired: \"ariaRequired\", name: \"name\", required: \"required\", autocomplete: \"autocomplete\", min: \"min\", max: \"max\", incrementButtonClass: \"incrementButtonClass\", decrementButtonClass: \"decrementButtonClass\", incrementButtonIcon: \"incrementButtonIcon\", decrementButtonIcon: \"decrementButtonIcon\", readonly: \"readonly\", step: \"step\", allowEmpty: \"allowEmpty\", locale: \"locale\", localeMatcher: \"localeMatcher\", mode: \"mode\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", inputStyle: \"inputStyle\", inputStyleClass: \"inputStyleClass\", showClear: \"showClear\", disabled: \"disabled\" }, outputs: { onInput: \"onInput\", onFocus: \"onFocus\", onBlur: \"onBlur\", onKeyDown: \"onKeyDown\", onClear: \"onClear\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused\", \"class.p-inputnumber-clearable\": \"showClear && buttonLayout != \\\"vertical\\\"\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [INPUTNUMBER_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\" />\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!incrementButtonIcon\">\n                        <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!decrementButtonIcon\">\n                        <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n        </span>\n    `, isInline: true, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.InputText; }), selector: \"[pInputText]\" }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.ButtonDirective; }), selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { kind: \"component\", type: i0.forwardRef(function () { return TimesIcon; }), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return AngleUpIcon; }), selector: \"AngleUpIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return AngleDownIcon; }), selector: \"AngleDownIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumber, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-inputNumber', template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\" />\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>\n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!incrementButtonIcon\">\n                        <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                    <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                    <ng-container *ngIf=\"!decrementButtonIcon\">\n                        <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                    </ng-container>\n                </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n        </span>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, providers: [INPUTNUMBER_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused',\n                        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n                    }, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.Injector }]; }, propDecorators: { showButtons: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], buttonLayout: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaRequired: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], incrementButtonClass: [{\n                type: Input\n            }], decrementButtonClass: [{\n                type: Input\n            }], incrementButtonIcon: [{\n                type: Input\n            }], decrementButtonIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], allowEmpty: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onInput: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass InputNumberModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumberModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumberModule, declarations: [InputNumber], imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon], exports: [InputNumber, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumberModule, imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: InputNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n                    exports: [InputNumber, SharedModule],\n                    declarations: [InputNumber]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };\n"],"mappings":";;AAAA,OAAO,KAAKA,EAAE,MAAM,iBAAiB;AACrC,SAASC,QAAQ,EAAEC,YAAY,QAAQ,iBAAiB;AACxD,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,YAAY,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,eAAe;AAC5K,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,gBAAgB;AAC7D,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAO,KAAKC,EAAE,MAAM,mBAAmB;AACvC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,aAAa,EAAEC,YAAY,QAAQ,aAAa;AACzD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,aAAa,QAAQ,yBAAyB;AAAC,MAAAC,GAAA;AAAA,SAAAC,2CAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAE,GAAA,GAkqCyB5B,EAAE,CAAA6B,gBAAA;IAAF7B,EAAE,CAAA8B,cAAA,kBA7F6B,CAAC;IA6FhC9B,EAAE,CAAA+B,UAAA,mBAAAC,sEAAA;MAAFhC,EAAE,CAAAiC,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAFlC,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA7FmBF,MAAA,CAAAG,KAAA,CAAM,EAAC;IAAA,EAAC;IA6F7BrC,EAAE,CAAAsC,YAAA,CA7F6B,CAAC;EAAA;EAAA,IAAAZ,EAAA;IA6FhC1B,EAAE,CAAAuC,UAAA,sCA7FQ,CAAC;EAAA;AAAA;AAAA,SAAAC,sDAAAd,EAAA,EAAAC,GAAA;AAAA,SAAAc,wCAAAf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA6FX1B,EAAE,CAAA0C,UAAA,IAAAF,qDAAA,qBA3FC,CAAC;EAAA;AAAA;AAAA,SAAAG,sCAAAjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkB,IAAA,GA2FJ5C,EAAE,CAAA6B,gBAAA;IAAF7B,EAAE,CAAA8B,cAAA,aA5Fe,CAAC;IA4FlB9B,EAAE,CAAA+B,UAAA,mBAAAc,4DAAA;MAAF7C,EAAE,CAAAiC,aAAA,CAAAW,IAAA;MAAA,MAAAE,OAAA,GAAF9C,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA5F1BU,OAAA,CAAAT,KAAA,CAAM,EAAC;IAAA,EAAC;IA4FgBrC,EAAE,CAAA0C,UAAA,IAAAD,uCAAA,gBA3FC,CAAC;IA2FJzC,EAAE,CAAAsC,YAAA,CA1F7D,CAAC;EAAA;EAAA,IAAAZ,EAAA;IAAA,MAAAqB,MAAA,GA0F0D/C,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EA3Ff,CAAC;IA2FYhD,EAAE,CAAAuC,UAAA,qBAAAQ,MAAA,CAAAE,iBA3Ff,CAAC;EAAA;AAAA;AAAA,SAAAC,+BAAAxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA2FY1B,EAAE,CAAAmD,uBAAA,EA9FD,CAAC;IA8FFnD,EAAE,CAAA0C,UAAA,IAAAjB,0CAAA,sBA7F6B,CAAC;IA6FhCzB,EAAE,CAAA0C,UAAA,IAAAC,qCAAA,iBA1F7D,CAAC;IA0F0D3C,EAAE,CAAAoD,qBAAA,CAzFzD,CAAC;EAAA;EAAA,IAAA1B,EAAA;IAAA,MAAA2B,MAAA,GAyFsDrD,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EA7FhC,CAAC;IA6F6BhD,EAAE,CAAAuC,UAAA,UAAAc,MAAA,CAAAJ,iBA7FhC,CAAC;IA6F6BjD,EAAE,CAAAgD,SAAA,EA5FtC,CAAC;IA4FmChD,EAAE,CAAAuC,UAAA,SAAAc,MAAA,CAAAJ,iBA5FtC,CAAC;EAAA;AAAA;AAAA,SAAAK,8BAAA5B,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA4FmC1B,EAAE,CAAAuD,SAAA,cAxES,CAAC;EAAA;EAAA,IAAA7B,EAAA;IAAA,MAAA8B,OAAA,GAwEZxD,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAuC,UAAA,YAAAiB,OAAA,CAAAC,mBAxEC,CAAC;EAAA;AAAA;AAAA,SAAAC,oDAAAhC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAwEJ1B,EAAE,CAAAuD,SAAA,iBAtER,CAAC;EAAA;AAAA;AAAA,SAAAI,sDAAAjC,EAAA,EAAAC,GAAA;AAAA,SAAAiC,wCAAAlC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAsEK1B,EAAE,CAAA0C,UAAA,IAAAiB,qDAAA,qBArEe,CAAC;EAAA;AAAA;AAAA,SAAAE,sCAAAnC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAqElB1B,EAAE,CAAAmD,uBAAA,EAvErB,CAAC;IAuEkBnD,EAAE,CAAA0C,UAAA,IAAAgB,mDAAA,wBAtER,CAAC;IAsEK1D,EAAE,CAAA0C,UAAA,IAAAkB,uCAAA,gBArEe,CAAC;IAqElB5D,EAAE,CAAAoD,qBAAA,CApEjD,CAAC;EAAA;EAAA,IAAA1B,EAAA;IAAA,MAAAoC,OAAA,GAoE8C9D,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EAtEZ,CAAC;IAsEShD,EAAE,CAAAuC,UAAA,UAAAuB,OAAA,CAAAC,2BAtEZ,CAAC;IAsES/D,EAAE,CAAAgD,SAAA,EArED,CAAC;IAqEFhD,EAAE,CAAAuC,UAAA,qBAAAuB,OAAA,CAAAC,2BArED,CAAC;EAAA;AAAA;AAAA,SAAAC,8BAAAtC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAqEF1B,EAAE,CAAAuD,SAAA,cApDS,CAAC;EAAA;EAAA,IAAA7B,EAAA;IAAA,MAAAuC,OAAA,GAoDZjE,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAuC,UAAA,YAAA0B,OAAA,CAAAC,mBApDC,CAAC;EAAA;AAAA;AAAA,SAAAC,sDAAAzC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAoDJ1B,EAAE,CAAAuD,SAAA,mBAlDN,CAAC;EAAA;AAAA;AAAA,SAAAa,sDAAA1C,EAAA,EAAAC,GAAA;AAAA,SAAA0C,wCAAA3C,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAkDG1B,EAAE,CAAA0C,UAAA,IAAA0B,qDAAA,qBAjDe,CAAC;EAAA;AAAA;AAAA,SAAAE,sCAAA5C,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAiDlB1B,EAAE,CAAAmD,uBAAA,EAnDrB,CAAC;IAmDkBnD,EAAE,CAAA0C,UAAA,IAAAyB,qDAAA,0BAlDN,CAAC;IAkDGnE,EAAE,CAAA0C,UAAA,IAAA2B,uCAAA,gBAjDe,CAAC;IAiDlBrE,EAAE,CAAAoD,qBAAA,CAhDjD,CAAC;EAAA;EAAA,IAAA1B,EAAA;IAAA,MAAA6C,OAAA,GAgD8CvE,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EAlDV,CAAC;IAkDOhD,EAAE,CAAAuC,UAAA,UAAAgC,OAAA,CAAAC,2BAlDV,CAAC;IAkDOxE,EAAE,CAAAgD,SAAA,EAjDD,CAAC;IAiDFhD,EAAE,CAAAuC,UAAA,qBAAAgC,OAAA,CAAAC,2BAjDD,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA,YAAAA,CAAA;EAAA;IAAA;EAAA;AAAA;AAAA,MAAAC,GAAA,YAAAA,CAAA;EAAA;IAAA;EAAA;AAAA;AAAA,SAAAC,uBAAAjD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkD,IAAA,GAiDF5E,EAAE,CAAA6B,gBAAA;IAAF7B,EAAE,CAAA8B,cAAA,cAvFmB,CAAC,gBAAD,CAAC;IAuFtB9B,EAAE,CAAA+B,UAAA,uBAAA8C,mDAAAC,MAAA;MAAF9E,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAG,OAAA,GAAF/E,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA/ElD2C,OAAA,CAAAC,mBAAA,CAAAF,MAA0B,EAAC;IAAA,EAAC,qBAAAG,iDAAA;MA+EoBjF,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAM,OAAA,GAAFlF,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA9EpD8C,OAAA,CAAAC,iBAAA,CAAkB,EAAC;IAAA,CADU,CAAC,wBAAAC,oDAAA;MA+EoBpF,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAS,OAAA,GAAFrF,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA7EjDiD,OAAA,CAAAC,oBAAA,CAAqB,EAAC;IAAA,CAFI,CAAC,qBAAAC,iDAAAT,MAAA;MA+EoB9E,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAY,OAAA,GAAFxF,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA5EpDoD,OAAA,CAAAC,iBAAA,CAAAX,MAAwB,EAAC;IAAA,CAHI,CAAC,mBAAAY,+CAAA;MA+EoB1F,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAe,OAAA,GAAF3F,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA3EtDuD,OAAA,CAAAC,eAAA,CAAgB,EAAC;IAAA,CAJc,CAAC;IA+EoB5F,EAAE,CAAA0C,UAAA,IAAAY,6BAAA,kBAxES,CAAC;IAwEZtD,EAAE,CAAA0C,UAAA,IAAAmB,qCAAA,yBApEjD,CAAC;IAoE8C7D,EAAE,CAAAsC,YAAA,CAnE3D,CAAC;IAmEwDtC,EAAE,CAAA8B,cAAA,gBArDnE,CAAC;IAqDgE9B,EAAE,CAAA+B,UAAA,uBAAA8D,mDAAAf,MAAA;MAAF9E,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAkB,OAAA,GAAF9F,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA3DlD0D,OAAA,CAAAC,qBAAA,CAAAjB,MAA4B,EAAC;IAAA,EAAC,qBAAAkB,iDAAA;MA2DkBhG,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAqB,OAAA,GAAFjG,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CA1DpD6D,OAAA,CAAAC,mBAAA,CAAoB,EAAC;IAAA,CADU,CAAC,wBAAAC,oDAAA;MA2DkBnG,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAAwB,OAAA,GAAFpG,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAzDjDgE,OAAA,CAAAC,sBAAA,CAAuB,EAAC;IAAA,CAFI,CAAC,qBAAAC,iDAAAxB,MAAA;MA2DkB9E,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAA2B,OAAA,GAAFvG,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAxDpDmE,OAAA,CAAAC,mBAAA,CAAA1B,MAA0B,EAAC;IAAA,CAHI,CAAC,mBAAA2B,+CAAA;MA2DkBzG,EAAE,CAAAiC,aAAA,CAAA2C,IAAA;MAAA,MAAA8B,OAAA,GAAF1G,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAvDtDsE,OAAA,CAAAC,iBAAA,CAAkB,EAAC;IAAA,CAJc,CAAC;IA2DkB3G,EAAE,CAAA0C,UAAA,IAAAsB,6BAAA,kBApDS,CAAC;IAoDZhE,EAAE,CAAA0C,UAAA,IAAA4B,qCAAA,yBAhDjD,CAAC;IAgD8CtE,EAAE,CAAAsC,YAAA,CA/C3D,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAZ,EAAA;IAAA,MAAAkF,MAAA,GA+CwD5G,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EAjFlC,CAAC;IAiF+BhD,EAAE,CAAA6G,UAAA,CAAAD,MAAA,CAAAE,oBAjFlC,CAAC;IAiF+B9G,EAAE,CAAAuC,UAAA,YAAFvC,EAAE,CAAA+G,eAAA,KAAAtC,GAAA,CAnFI,CAAC,aAAAmC,MAAA,CAAAI,QAAD,CAAC;IAmFPhH,EAAE,CAAAgD,SAAA,EAxEhC,CAAC;IAwE6BhD,EAAE,CAAAuC,UAAA,SAAAqE,MAAA,CAAAnD,mBAxEhC,CAAC;IAwE6BzD,EAAE,CAAAgD,SAAA,EAvEvB,CAAC;IAuEoBhD,EAAE,CAAAuC,UAAA,UAAAqE,MAAA,CAAAnD,mBAvEvB,CAAC;IAuEoBzD,EAAE,CAAAgD,SAAA,EA7DlC,CAAC;IA6D+BhD,EAAE,CAAA6G,UAAA,CAAAD,MAAA,CAAAK,oBA7DlC,CAAC;IA6D+BjH,EAAE,CAAAuC,UAAA,YAAFvC,EAAE,CAAA+G,eAAA,KAAArC,GAAA,CA/DM,CAAC,aAAAkC,MAAA,CAAAI,QAAD,CAAC;IA+DThH,EAAE,CAAAgD,SAAA,EApDhC,CAAC;IAoD6BhD,EAAE,CAAAuC,UAAA,SAAAqE,MAAA,CAAA1C,mBApDhC,CAAC;IAoD6BlE,EAAE,CAAAgD,SAAA,EAnDvB,CAAC;IAmDoBhD,EAAE,CAAAuC,UAAA,UAAAqE,MAAA,CAAA1C,mBAnDvB,CAAC;EAAA;AAAA;AAAA,SAAAgD,gCAAAxF,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAmDoB1B,EAAE,CAAAuD,SAAA,cA9BK,CAAC;EAAA;EAAA,IAAA7B,EAAA;IAAA,MAAAyF,OAAA,GA8BRnH,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAuC,UAAA,YAAA4E,OAAA,CAAA1D,mBA9BH,CAAC;EAAA;AAAA;AAAA,SAAA2D,sDAAA1F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA8BA1B,EAAE,CAAAuD,SAAA,iBA5BZ,CAAC;EAAA;AAAA;AAAA,SAAA8D,wDAAA3F,EAAA,EAAAC,GAAA;AAAA,SAAA2F,0CAAA5F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA4BS1B,EAAE,CAAA0C,UAAA,IAAA2E,uDAAA,qBA3BW,CAAC;EAAA;AAAA;AAAA,SAAAE,wCAAA7F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA2Bd1B,EAAE,CAAAmD,uBAAA,EA7BzB,CAAC;IA6BsBnD,EAAE,CAAA0C,UAAA,IAAA0E,qDAAA,wBA5BZ,CAAC;IA4BSpH,EAAE,CAAA0C,UAAA,IAAA4E,yCAAA,gBA3BW,CAAC;IA2BdtH,EAAE,CAAAoD,qBAAA,CA1BrD,CAAC;EAAA;EAAA,IAAA1B,EAAA;IAAA,MAAA8F,OAAA,GA0BkDxH,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EA5BhB,CAAC;IA4BahD,EAAE,CAAAuC,UAAA,UAAAiF,OAAA,CAAAzD,2BA5BhB,CAAC;IA4Ba/D,EAAE,CAAAgD,SAAA,EA3BL,CAAC;IA2BEhD,EAAE,CAAAuC,UAAA,qBAAAiF,OAAA,CAAAzD,2BA3BL,CAAC;EAAA;AAAA;AAAA,SAAA0D,yBAAA/F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgG,IAAA,GA2BE1H,EAAE,CAAA6B,gBAAA;IAAF7B,EAAE,CAAA8B,cAAA,gBA/BvE,CAAC;IA+BoE9B,EAAE,CAAA+B,UAAA,uBAAA4F,qDAAA7C,MAAA;MAAF9E,EAAE,CAAAiC,aAAA,CAAAyF,IAAA;MAAA,MAAAE,OAAA,GAAF5H,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CArCtDwF,OAAA,CAAA5C,mBAAA,CAAAF,MAA0B,EAAC;IAAA,EAAC,qBAAA+C,mDAAA;MAqCwB7H,EAAE,CAAAiC,aAAA,CAAAyF,IAAA;MAAA,MAAAI,OAAA,GAAF9H,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CApCxD0F,OAAA,CAAA3C,iBAAA,CAAkB,EAAC;IAAA,CADU,CAAC,wBAAA4C,sDAAA;MAqCwB/H,EAAE,CAAAiC,aAAA,CAAAyF,IAAA;MAAA,MAAAM,OAAA,GAAFhI,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAnCrD4F,OAAA,CAAA1C,oBAAA,CAAqB,EAAC;IAAA,CAFI,CAAC,qBAAA2C,mDAAAnD,MAAA;MAqCwB9E,EAAE,CAAAiC,aAAA,CAAAyF,IAAA;MAAA,MAAAQ,OAAA,GAAFlI,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAlCxD8F,OAAA,CAAAzC,iBAAA,CAAAX,MAAwB,EAAC;IAAA,CAHI,CAAC,mBAAAqD,iDAAA;MAqCwBnI,EAAE,CAAAiC,aAAA,CAAAyF,IAAA;MAAA,MAAAU,OAAA,GAAFpI,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAjC1DgG,OAAA,CAAAxC,eAAA,CAAgB,EAAC;IAAA,CAJc,CAAC;IAqCwB5F,EAAE,CAAA0C,UAAA,IAAAwE,+BAAA,kBA9BK,CAAC;IA8BRlH,EAAE,CAAA0C,UAAA,IAAA6E,uCAAA,yBA1BrD,CAAC;IA0BkDvH,EAAE,CAAAsC,YAAA,CAzB/D,CAAC;EAAA;EAAA,IAAAZ,EAAA;IAAA,MAAA2G,MAAA,GAyB4DrI,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAA6G,UAAA,CAAAwB,MAAA,CAAAvB,oBAzCtC,CAAC;IAyCmC9G,EAAE,CAAAuC,UAAA,YAAFvC,EAAE,CAAA+G,eAAA,IAAAtC,GAAA,CA1CA,CAAC,aAAA4D,MAAA,CAAArB,QAAD,CAAC;IA0CHhH,EAAE,CAAAgD,SAAA,EA9BpC,CAAC;IA8BiChD,EAAE,CAAAuC,UAAA,SAAA8F,MAAA,CAAA5E,mBA9BpC,CAAC;IA8BiCzD,EAAE,CAAAgD,SAAA,EA7B3B,CAAC;IA6BwBhD,EAAE,CAAAuC,UAAA,UAAA8F,MAAA,CAAA5E,mBA7B3B,CAAC;EAAA;AAAA;AAAA,SAAA6E,gCAAA5G,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA6BwB1B,EAAE,CAAAuD,SAAA,cATK,CAAC;EAAA;EAAA,IAAA7B,EAAA;IAAA,MAAA6G,OAAA,GASRvI,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAuC,UAAA,YAAAgG,OAAA,CAAArE,mBATH,CAAC;EAAA;AAAA;AAAA,SAAAsE,wDAAA9G,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IASA1B,EAAE,CAAAuD,SAAA,mBAPV,CAAC;EAAA;AAAA;AAAA,SAAAkF,wDAAA/G,EAAA,EAAAC,GAAA;AAAA,SAAA+G,0CAAAhH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAOO1B,EAAE,CAAA0C,UAAA,IAAA+F,uDAAA,qBANW,CAAC;EAAA;AAAA;AAAA,SAAAE,wCAAAjH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAMd1B,EAAE,CAAAmD,uBAAA,EARzB,CAAC;IAQsBnD,EAAE,CAAA0C,UAAA,IAAA8F,uDAAA,0BAPV,CAAC;IAOOxI,EAAE,CAAA0C,UAAA,IAAAgG,yCAAA,gBANW,CAAC;IAMd1I,EAAE,CAAAoD,qBAAA,CALrD,CAAC;EAAA;EAAA,IAAA1B,EAAA;IAAA,MAAAkH,OAAA,GAKkD5I,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAAgD,SAAA,EAPd,CAAC;IAOWhD,EAAE,CAAAuC,UAAA,UAAAqG,OAAA,CAAApE,2BAPd,CAAC;IAOWxE,EAAE,CAAAgD,SAAA,EANL,CAAC;IAMEhD,EAAE,CAAAuC,UAAA,qBAAAqG,OAAA,CAAApE,2BANL,CAAC;EAAA;AAAA;AAAA,SAAAqE,yBAAAnH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAoH,IAAA,GAME9I,EAAE,CAAA6B,gBAAA;IAAF7B,EAAE,CAAA8B,cAAA,gBAVvE,CAAC;IAUoE9B,EAAE,CAAA+B,UAAA,uBAAAgH,qDAAAjE,MAAA;MAAF9E,EAAE,CAAAiC,aAAA,CAAA6G,IAAA;MAAA,MAAAE,OAAA,GAAFhJ,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAhBtD4G,OAAA,CAAAjD,qBAAA,CAAAjB,MAA4B,EAAC;IAAA,EAAC,qBAAAmE,mDAAA;MAgBsBjJ,EAAE,CAAAiC,aAAA,CAAA6G,IAAA;MAAA,MAAAI,OAAA,GAAFlJ,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAfxD8G,OAAA,CAAAhD,mBAAA,CAAoB,EAAC;IAAA,CADU,CAAC,wBAAAiD,sDAAA;MAgBsBnJ,EAAE,CAAAiC,aAAA,CAAA6G,IAAA;MAAA,MAAAM,OAAA,GAAFpJ,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAdrDgH,OAAA,CAAA/C,sBAAA,CAAuB,EAAC;IAAA,CAFI,CAAC,qBAAAgD,mDAAAvE,MAAA;MAgBsB9E,EAAE,CAAAiC,aAAA,CAAA6G,IAAA;MAAA,MAAAQ,OAAA,GAAFtJ,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAbxDkH,OAAA,CAAA9C,mBAAA,CAAA1B,MAA0B,EAAC;IAAA,CAHI,CAAC,mBAAAyE,iDAAA;MAgBsBvJ,EAAE,CAAAiC,aAAA,CAAA6G,IAAA;MAAA,MAAAU,OAAA,GAAFxJ,EAAE,CAAAmC,aAAA;MAAA,OAAFnC,EAAE,CAAAoC,WAAA,CAZ1DoH,OAAA,CAAA7C,iBAAA,CAAkB,EAAC;IAAA,CAJc,CAAC;IAgBsB3G,EAAE,CAAA0C,UAAA,IAAA4F,+BAAA,kBATK,CAAC;IASRtI,EAAE,CAAA0C,UAAA,IAAAiG,uCAAA,yBALrD,CAAC;IAKkD3I,EAAE,CAAAsC,YAAA,CAJ/D,CAAC;EAAA;EAAA,IAAAZ,EAAA;IAAA,MAAA+H,MAAA,GAI4DzJ,EAAE,CAAAmC,aAAA;IAAFnC,EAAE,CAAA6G,UAAA,CAAA4C,MAAA,CAAAxC,oBAnBtC,CAAC;IAmBmCjH,EAAE,CAAAuC,UAAA,YAAFvC,EAAE,CAAA+G,eAAA,IAAArC,GAAA,CArBE,CAAC,aAAA+E,MAAA,CAAAzC,QAAD,CAAC;IAqBLhH,EAAE,CAAAgD,SAAA,EATpC,CAAC;IASiChD,EAAE,CAAAuC,UAAA,SAAAkH,MAAA,CAAAvF,mBATpC,CAAC;IASiClE,EAAE,CAAAgD,SAAA,EAR3B,CAAC;IAQwBhD,EAAE,CAAAuC,UAAA,UAAAkH,MAAA,CAAAvF,mBAR3B,CAAC;EAAA;AAAA;AAAA,MAAAwF,GAAA,YAAAA,CAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAAA;IAAA;IAAA,iCAAAF,EAAA;IAAA,oCAAAC,EAAA;IAAA,kCAAAC;EAAA;AAAA;AAxpCzD,MAAMC,0BAA0B,GAAG;EAC/BC,OAAO,EAAEnJ,iBAAiB;EAC1BoJ,WAAW,EAAE/J,UAAU,CAAC,MAAMgK,WAAW,CAAC;EAC1CC,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA,MAAMD,WAAW,CAAC;EAmMd;AACJ;AACA;AACA;EACI;AACJ;AACA;AACA;EACI,IAAIjD,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACmD,SAAS;EACzB;EACA,IAAInD,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAIA,QAAQ,EACR,IAAI,CAACoD,OAAO,GAAG,KAAK;IACxB,IAAI,CAACD,SAAS,GAAGnD,QAAQ;IACzB,IAAI,IAAI,CAACqD,KAAK,EACV,IAAI,CAACC,UAAU,CAAC,CAAC;EACzB;EACA;AACJ;AACA;AACA;AACA;;EAoDIC,WAAWA,CAACC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAE;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAxQxC;AACJ;AACA;AACA;IAHIA,eAAA,sBAIc,KAAK;IACnB;AACJ;AACA;AACA;IAHIA,eAAA,iBAIS,IAAI;IACb;AACJ;AACA;AACA;IAHIA,eAAA,uBAIe,SAAS;IACxB;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA,mBAIW,KAAK;IAChB;AACJ;AACA;AACA;IAHIA,eAAA,eAIO,CAAC;IACR;AACJ;AACA;AACA;IAHIA,eAAA,qBAIa,IAAI;IACjB;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA,eAIO,SAAS;IAChB;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA,sBAIc,IAAI;IAClB;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA;IAKA;AACJ;AACA;AACA;IAHIA,eAAA,oBAIY,KAAK;IAAAA,eAAA,kBAwBP,IAAI1K,YAAY,CAAC,CAAC;IAC5B;AACJ;AACA;AACA;AACA;IAJI0K,eAAA,kBAKU,IAAI1K,YAAY,CAAC,CAAC;IAC5B;AACJ;AACA;AACA;AACA;IAJI0K,eAAA,iBAKS,IAAI1K,YAAY,CAAC,CAAC;IAC3B;AACJ;AACA;AACA;AACA;IAJI0K,eAAA,oBAKY,IAAI1K,YAAY,CAAC,CAAC;IAC9B;AACJ;AACA;AACA;IAHI0K,eAAA,kBAIU,IAAI1K,YAAY,CAAC,CAAC;IAAA0K,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,wBAOZ,MAAM,CAAE,CAAC;IAAAA,eAAA,yBACR,MAAM,CAAE,CAAC;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,oBAGd,EAAE;IAAAA,eAAA,qBACD,EAAE;IAAAA,eAAA,qBACF,EAAE;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,oBAcH,IAAI;IAEZ,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACAE,WAAWA,CAACC,YAAY,EAAE;IACtB,MAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC7J,IAAIA,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAK,CAAC,CAACH,YAAY,CAACG,CAAC,CAAC,CAAC,EAAE;MACtC,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAChC;EACJ;EACAC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,SAAS,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC7B,QAAQA,IAAI,CAACC,OAAO,CAAC,CAAC;QAClB,KAAK,WAAW;UACZ,IAAI,CAACtI,iBAAiB,GAAGqI,IAAI,CAACE,QAAQ;UACtC;QACJ,KAAK,qBAAqB;UACtB,IAAI,CAACzH,2BAA2B,GAAGuH,IAAI,CAACE,QAAQ;UAChD;QACJ,KAAK,qBAAqB;UACtB,IAAI,CAAChH,2BAA2B,GAAG8G,IAAI,CAACE,QAAQ;UAChD;MACR;IACJ,CAAC,CAAC;EACN;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,SAAS,GAAG,IAAI,CAACf,QAAQ,CAACgB,GAAG,CAAC9K,SAAS,EAAE,IAAI,EAAE;MAAE+K,QAAQ,EAAE;IAAK,CAAC,CAAC;IACvE,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,IAAI;EAC3B;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO;MACHC,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,KAAK,EAAE,IAAI,CAACC,IAAI;MAChBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,qBAAqB,EAAE,IAAI,CAACC,iBAAiB;MAC7CC,qBAAqB,EAAE,IAAI,CAACC;IAChC,CAAC;EACL;EACAZ,eAAeA,CAAA,EAAG;IACd,IAAI,CAACa,YAAY,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAACd,UAAU,CAAC,CAAC,CAAC;IACzE,MAAMe,QAAQ,GAAG,CAAC,GAAG,IAAIH,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;MAAER,WAAW,EAAE;IAAM,CAAC,CAAC,CAACU,MAAM,CAAC,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC7G,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAACJ,QAAQ,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;IACrD,IAAI,CAACC,QAAQ,GAAG,IAAIC,MAAM,CAAE,IAAGT,QAAQ,CAACU,IAAI,CAAC,EAAE,CAAE,GAAE,EAAE,GAAG,CAAC;IACzD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC1C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC/C,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IACzC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IACzC,IAAI,CAACC,MAAM,GAAIjB,CAAC,IAAKH,KAAK,CAACtB,GAAG,CAACyB,CAAC,CAAC;EACrC;EACAlC,qBAAqBA,CAAA,EAAG;IACpB,IAAI,IAAI,CAACY,WAAW,EAAE;MAClB,IAAI,CAACD,eAAe,CAAC,CAAC;IAC1B;EACJ;EACAyC,YAAYA,CAACC,IAAI,EAAE;IACf,OAAOA,IAAI,CAACC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC;EAC3D;EACAR,oBAAoBA,CAAA,EAAG;IACnB,MAAMS,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;MAAE,GAAG,IAAI,CAACd,UAAU,CAAC,CAAC;MAAEM,WAAW,EAAE;IAAM,CAAC,CAAC;IAClG,OAAO,IAAIkB,MAAM,CAAE,IAAGkB,SAAS,CAC1B1B,MAAM,CAAC,GAAG,CAAC,CACXyB,OAAO,CAAC,IAAI,CAACX,SAAS,EAAE,EAAE,CAAC,CAC3Ba,IAAI,CAAC,CAAC,CACNF,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAE,EAAE,CAAE,GAAE,EAAE,GAAG,CAAC;EAC5C;EACAI,qBAAqBA,CAAA,EAAG;IACpB,MAAMe,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;MAAER,WAAW,EAAE;IAAK,CAAC,CAAC;IAC3E,IAAI,CAACsC,SAAS,GAAGF,SAAS,CAAC1B,MAAM,CAAC,OAAO,CAAC,CAAC2B,IAAI,CAAC,CAAC,CAACF,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAE,EAAE,CAAC,CAACsB,MAAM,CAAC,CAAC,CAAC;IACtF,OAAO,IAAIrB,MAAM,CAAE,IAAG,IAAI,CAACoB,SAAU,GAAE,EAAE,GAAG,CAAC;EACjD;EACAf,sBAAsBA,CAAA,EAAG;IACrB,MAAMa,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;MAAER,WAAW,EAAE;IAAM,CAAC,CAAC;IAC5E,OAAO,IAAIkB,MAAM,CAAE,IAAGkB,SAAS,CAAC1B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC2B,IAAI,CAAC,CAAC,CAACF,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAE,EAAE,CAAE,GAAE,EAAE,GAAG,CAAC;EACzF;EACAQ,qBAAqBA,CAAA,EAAG;IACpB,IAAI,IAAI,CAAC3B,QAAQ,EAAE;MACf,MAAMsC,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;QAAEZ,KAAK,EAAE,UAAU;QAAEE,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,eAAe,EAAE,IAAI,CAACA,eAAe;QAAEE,qBAAqB,EAAE,CAAC;QAAEE,qBAAqB,EAAE;MAAE,CAAC,CAAC;MAC/L,OAAO,IAAIe,MAAM,CAAE,IAAGkB,SAAS,CAAC1B,MAAM,CAAC,CAAC,CAAC,CAACyB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAE,EAAE,CAAC,CAACkB,OAAO,CAAC,IAAI,CAACf,MAAM,EAAE,EAAE,CAAE,GAAE,EAAE,GAAG,CAAC;IAC7H;IACA,OAAO,IAAIF,MAAM,CAAE,IAAG,EAAE,GAAG,CAAC;EAChC;EACAa,mBAAmBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACS,MAAM,EAAE;MACb,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,MAAM;IACjC,CAAC,MACI;MACD,MAAMJ,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;QAAEZ,KAAK,EAAE,IAAI,CAACC,IAAI;QAAEC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,eAAe,EAAE,IAAI,CAACA;MAAgB,CAAC,CAAC;MAC1I,IAAI,CAAC0C,UAAU,GAAGL,SAAS,CAAC1B,MAAM,CAAC,CAAC,CAAC,CAACgC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD;IACA,OAAO,IAAIxB,MAAM,CAAE,GAAE,IAAI,CAACe,YAAY,CAAC,IAAI,CAACQ,UAAU,IAAI,EAAE,CAAE,EAAC,EAAE,GAAG,CAAC;EACzE;EACAZ,mBAAmBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACc,MAAM,EAAE;MACb,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,MAAM;IACjC,CAAC,MACI;MACD,MAAMP,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE;QAAEZ,KAAK,EAAE,IAAI,CAACC,IAAI;QAAEC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,eAAe,EAAE,IAAI,CAACA,eAAe;QAAEE,qBAAqB,EAAE,CAAC;QAAEE,qBAAqB,EAAE;MAAE,CAAC,CAAC;MAC9L,IAAI,CAACyC,UAAU,GAAGR,SAAS,CAAC1B,MAAM,CAAC,CAAC,CAAC,CAACgC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD;IACA,OAAO,IAAIxB,MAAM,CAAE,GAAE,IAAI,CAACe,YAAY,CAAC,IAAI,CAACW,UAAU,IAAI,EAAE,CAAE,EAAC,EAAE,GAAG,CAAC;EACzE;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAIA,KAAK,IAAI,IAAI,EAAE;MACf,IAAIA,KAAK,KAAK,GAAG,EAAE;QACf;QACA,OAAOA,KAAK;MAChB;MACA,IAAI,IAAI,CAACpC,MAAM,EAAE;QACb,IAAI0B,SAAS,GAAG,IAAI9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAACd,UAAU,CAAC,CAAC,CAAC;QACrE,IAAIqD,cAAc,GAAGX,SAAS,CAAC1B,MAAM,CAACoC,KAAK,CAAC;QAC5C,IAAI,IAAI,CAACN,MAAM,EAAE;UACbO,cAAc,GAAG,IAAI,CAACP,MAAM,GAAGO,cAAc;QACjD;QACA,IAAI,IAAI,CAACJ,MAAM,EAAE;UACbI,cAAc,GAAGA,cAAc,GAAG,IAAI,CAACJ,MAAM;QACjD;QACA,OAAOI,cAAc;MACzB;MACA,OAAOD,KAAK,CAACE,QAAQ,CAAC,CAAC;IAC3B;IACA,OAAO,EAAE;EACb;EACAC,UAAUA,CAACf,IAAI,EAAE;IACb,IAAIgB,YAAY,GAAGhB,IAAI,CAClBC,OAAO,CAAC,IAAI,CAACP,OAAO,EAAE,EAAE,CAAC,CACzBO,OAAO,CAAC,IAAI,CAACL,OAAO,EAAE,EAAE,CAAC,CACzBO,IAAI,CAAC,CAAC,CACNF,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,IAAI,CAACX,SAAS,EAAE,EAAE,CAAC,CAC3BW,OAAO,CAAC,IAAI,CAACf,MAAM,EAAE,EAAE,CAAC,CACxBe,OAAO,CAAC,IAAI,CAACb,UAAU,EAAE,GAAG,CAAC,CAC7Ba,OAAO,CAAC,IAAI,CAACT,QAAQ,EAAE,GAAG,CAAC,CAC3BS,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAE,IAAI,CAACe,MAAM,CAAC;IACxC,IAAIkB,YAAY,EAAE;MACd,IAAIA,YAAY,KAAK,GAAG;QACpB;QACA,OAAOA,YAAY;MACvB,IAAIC,WAAW,GAAG,CAACD,YAAY;MAC/B,OAAOE,KAAK,CAACD,WAAW,CAAC,GAAG,IAAI,GAAGA,WAAW;IAClD;IACA,OAAO,IAAI;EACf;EACAE,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,EAAE;IACzB,IAAI,IAAI,CAACC,QAAQ,EAAE;MACf;IACJ;IACA,IAAIzC,CAAC,GAAGuC,QAAQ,IAAI,GAAG;IACvB,IAAI,CAACtF,UAAU,CAAC,CAAC;IACjB,IAAI,CAACD,KAAK,GAAG0F,UAAU,CAAC,MAAM;MAC1B,IAAI,CAACL,MAAM,CAACC,KAAK,EAAE,EAAE,EAAEE,GAAG,CAAC;IAC/B,CAAC,EAAExC,CAAC,CAAC;IACL,IAAI,CAAC2C,IAAI,CAACL,KAAK,EAAEE,GAAG,CAAC;EACzB;EACAG,IAAIA,CAACL,KAAK,EAAEE,GAAG,EAAE;IACb,IAAII,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGJ,GAAG;IAC1B,IAAIK,YAAY,GAAG,IAAI,CAACZ,UAAU,CAAC,IAAI,CAACa,KAAK,EAAEC,aAAa,CAACjB,KAAK,CAAC,IAAI,CAAC;IACxE,IAAIkB,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACJ,YAAY,GAAGD,IAAI,CAAC;IACtD,IAAI,IAAI,CAACM,SAAS,IAAI,IAAI,CAACA,SAAS,GAAG,IAAI,CAACrB,WAAW,CAACmB,QAAQ,CAAC,CAACG,MAAM,EAAE;MACtE;IACJ;IACA,IAAI,CAACC,WAAW,CAACJ,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IAC9C,IAAI,CAACK,WAAW,CAACf,KAAK,EAAEU,QAAQ,CAAC;IACjC,IAAI,CAACM,aAAa,CAAChB,KAAK,EAAEO,YAAY,EAAEG,QAAQ,CAAC;EACrD;EACAhO,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC8M,KAAK,GAAG,IAAI;IACjB,IAAI,CAACyB,aAAa,CAAC,IAAI,CAACzB,KAAK,CAAC;IAC9B,IAAI,CAAC0B,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB;EACA9L,mBAAmBA,CAAC2K,KAAK,EAAE;IACvB,IAAIA,KAAK,CAACoB,MAAM,KAAK,CAAC,EAAE;MACpB,IAAI,CAACzG,UAAU,CAAC,CAAC;MACjB;IACJ;IACA,IAAI,CAAC6F,KAAK,EAAEC,aAAa,CAACY,KAAK,CAAC,CAAC;IACjC,IAAI,CAACtB,MAAM,CAACC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3BA,KAAK,CAACsB,cAAc,CAAC,CAAC;EAC1B;EACA9L,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACmF,UAAU,CAAC,CAAC;EACrB;EACAhF,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACgF,UAAU,CAAC,CAAC;EACrB;EACA7E,iBAAiBA,CAACkK,KAAK,EAAE;IACrB,IAAIA,KAAK,CAACuB,OAAO,KAAK,EAAE,IAAIvB,KAAK,CAACuB,OAAO,KAAK,EAAE,EAAE;MAC9C,IAAI,CAACxB,MAAM,CAACC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/B;EACJ;EACA/J,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC0E,UAAU,CAAC,CAAC;EACrB;EACAvE,qBAAqBA,CAAC4J,KAAK,EAAE;IACzB,IAAIA,KAAK,CAACoB,MAAM,KAAK,CAAC,EAAE;MACpB,IAAI,CAACzG,UAAU,CAAC,CAAC;MACjB;IACJ;IACA,IAAI,CAAC6F,KAAK,EAAEC,aAAa,CAACY,KAAK,CAAC,CAAC;IACjC,IAAI,CAACtB,MAAM,CAACC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5BA,KAAK,CAACsB,cAAc,CAAC,CAAC;EAC1B;EACA/K,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACoE,UAAU,CAAC,CAAC;EACrB;EACAjE,sBAAsBA,CAAA,EAAG;IACrB,IAAI,CAACiE,UAAU,CAAC,CAAC;EACrB;EACA3D,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAC2D,UAAU,CAAC,CAAC;EACrB;EACA9D,mBAAmBA,CAACmJ,KAAK,EAAE;IACvB,IAAIA,KAAK,CAACuB,OAAO,KAAK,EAAE,IAAIvB,KAAK,CAACuB,OAAO,KAAK,EAAE,EAAE;MAC9C,IAAI,CAACxB,MAAM,CAACC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChC;EACJ;EACAwB,WAAWA,CAACxB,KAAK,EAAE;IACf,IAAI,IAAI,CAACG,QAAQ,EAAE;MACf;IACJ;IACA,IAAI,IAAI,CAACsB,aAAa,EAAE;MACpBzB,KAAK,CAAC0B,MAAM,CAAClC,KAAK,GAAG,IAAI,CAACmC,SAAS;IACvC;IACA,IAAI,CAACF,aAAa,GAAG,KAAK;EAC9B;EACAG,cAAcA,CAAC5B,KAAK,EAAE;IAClB,IAAI,IAAI,CAACG,QAAQ,EAAE;MACf;IACJ;IACA,IAAI,CAACwB,SAAS,GAAG3B,KAAK,CAAC0B,MAAM,CAAClC,KAAK;IACnC,IAAIQ,KAAK,CAAC6B,QAAQ,IAAI7B,KAAK,CAAC8B,MAAM,EAAE;MAChC,IAAI,CAACL,aAAa,GAAG,IAAI;MACzB;IACJ;IACA,IAAIM,cAAc,GAAG/B,KAAK,CAAC0B,MAAM,CAACK,cAAc;IAChD,IAAIC,YAAY,GAAGhC,KAAK,CAAC0B,MAAM,CAACM,YAAY;IAC5C,IAAIC,UAAU,GAAGjC,KAAK,CAAC0B,MAAM,CAAClC,KAAK;IACnC,IAAI0C,WAAW,GAAG,IAAI;IACtB,IAAIlC,KAAK,CAAC8B,MAAM,EAAE;MACd9B,KAAK,CAACsB,cAAc,CAAC,CAAC;IAC1B;IACA,QAAQtB,KAAK,CAACmC,KAAK;MACf;MACA,KAAK,EAAE;QACH,IAAI,CAAC9B,IAAI,CAACL,KAAK,EAAE,CAAC,CAAC;QACnBA,KAAK,CAACsB,cAAc,CAAC,CAAC;QACtB;MACJ;MACA,KAAK,EAAE;QACH,IAAI,CAACjB,IAAI,CAACL,KAAK,EAAE,CAAC,CAAC,CAAC;QACpBA,KAAK,CAACsB,cAAc,CAAC,CAAC;QACtB;MACJ;MACA,KAAK,EAAE;QACH,IAAI,CAAC,IAAI,CAACc,aAAa,CAACH,UAAU,CAAChD,MAAM,CAAC8C,cAAc,GAAG,CAAC,CAAC,CAAC,EAAE;UAC5D/B,KAAK,CAACsB,cAAc,CAAC,CAAC;QAC1B;QACA;MACJ;MACA,KAAK,EAAE;QACH,IAAI,CAAC,IAAI,CAACc,aAAa,CAACH,UAAU,CAAChD,MAAM,CAAC8C,cAAc,CAAC,CAAC,EAAE;UACxD/B,KAAK,CAACsB,cAAc,CAAC,CAAC;QAC1B;QACA;MACJ;MACA,KAAK,EAAE;QACHY,WAAW,GAAG,IAAI,CAACvB,aAAa,CAAC,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACa,KAAK,CAACC,aAAa,CAACjB,KAAK,CAAC,CAAC;QACjF,IAAI,CAACgB,KAAK,CAACC,aAAa,CAACjB,KAAK,GAAG,IAAI,CAACD,WAAW,CAAC2C,WAAW,CAAC;QAC9D,IAAI,CAAC1B,KAAK,CAACC,aAAa,CAAC4B,YAAY,CAAC,eAAe,EAAEH,WAAW,CAAC;QACnE,IAAI,CAACnB,WAAW,CAACf,KAAK,EAAEkC,WAAW,CAAC;QACpC;MACJ;MACA,KAAK,CAAC;QAAE;UACJlC,KAAK,CAACsB,cAAc,CAAC,CAAC;UACtB,IAAIS,cAAc,KAAKC,YAAY,EAAE;YACjC,MAAMM,UAAU,GAAGL,UAAU,CAAChD,MAAM,CAAC8C,cAAc,GAAG,CAAC,CAAC;YACxD,MAAM;cAAEQ,gBAAgB;cAAEC;YAA8B,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAACR,UAAU,CAAC;YAClG,IAAI,IAAI,CAACG,aAAa,CAACE,UAAU,CAAC,EAAE;cAChC,MAAMI,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACV,UAAU,CAAC;cACvD,IAAI,IAAI,CAACnE,MAAM,CAAC8E,IAAI,CAACN,UAAU,CAAC,EAAE;gBAC9B,IAAI,CAACxE,MAAM,CAAC+E,SAAS,GAAG,CAAC;gBACzBX,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,GAAG,CAAC,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;cAChG,CAAC,MACI,IAAI,IAAI,CAAC3D,QAAQ,CAACwE,IAAI,CAACN,UAAU,CAAC,EAAE;gBACrC,IAAI,CAAClE,QAAQ,CAACyE,SAAS,GAAG,CAAC;gBAC3B,IAAIH,aAAa,EAAE;kBACf,IAAI,CAAClC,KAAK,EAAEC,aAAa,CAACsC,iBAAiB,CAAChB,cAAc,GAAG,CAAC,EAAEA,cAAc,GAAG,CAAC,CAAC;gBACvF,CAAC,MACI;kBACDG,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,GAAG,CAAC,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,CAAC;gBAC5F;cACJ,CAAC,MACI,IAAIQ,gBAAgB,GAAG,CAAC,IAAIR,cAAc,GAAGQ,gBAAgB,EAAE;gBAChE,MAAMS,YAAY,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAACrG,iBAAiB,IAAI,CAAC,IAAI8F,aAAa,GAAG,EAAE,GAAG,GAAG;gBACrGR,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,GAAG,CAAC,CAAC,GAAGiB,YAAY,GAAGf,UAAU,CAACa,KAAK,CAACf,cAAc,CAAC;cAC3G,CAAC,MACI,IAAIS,6BAA6B,KAAK,CAAC,EAAE;gBAC1CN,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,CAAC;gBAC9FG,WAAW,GAAG,IAAI,CAACvC,UAAU,CAACuC,WAAW,CAAC,GAAG,CAAC,GAAGA,WAAW,GAAG,EAAE;cACrE,CAAC,MACI;gBACDA,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,GAAG,CAAC,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,CAAC;cAC5F;YACJ;YACA,IAAI,CAACmB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAE,IAAI,EAAE,eAAe,CAAC;UAC/D,CAAC,MACI;YACDA,WAAW,GAAG,IAAI,CAACiB,WAAW,CAAClB,UAAU,EAAEF,cAAc,EAAEC,YAAY,CAAC;YACxE,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAE,IAAI,EAAE,cAAc,CAAC;UAC9D;UACA;QACJ;MACA;MACA,KAAK,EAAE;QACHlC,KAAK,CAACsB,cAAc,CAAC,CAAC;QACtB,IAAIS,cAAc,KAAKC,YAAY,EAAE;UACjC,MAAMM,UAAU,GAAGL,UAAU,CAAChD,MAAM,CAAC8C,cAAc,CAAC;UACpD,MAAM;YAAEQ,gBAAgB;YAAEC;UAA8B,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAACR,UAAU,CAAC;UAClG,IAAI,IAAI,CAACG,aAAa,CAACE,UAAU,CAAC,EAAE;YAChC,MAAMI,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACV,UAAU,CAAC;YACvD,IAAI,IAAI,CAACnE,MAAM,CAAC8E,IAAI,CAACN,UAAU,CAAC,EAAE;cAC9B,IAAI,CAACxE,MAAM,CAAC+E,SAAS,GAAG,CAAC;cACzBX,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;YAC5F,CAAC,MACI,IAAI,IAAI,CAAC3D,QAAQ,CAACwE,IAAI,CAACN,UAAU,CAAC,EAAE;cACrC,IAAI,CAAClE,QAAQ,CAACyE,SAAS,GAAG,CAAC;cAC3B,IAAIH,aAAa,EAAE;gBACf,IAAI,CAAClC,KAAK,EAAEC,aAAa,CAACsC,iBAAiB,CAAChB,cAAc,GAAG,CAAC,EAAEA,cAAc,GAAG,CAAC,CAAC;cACvF,CAAC,MACI;gBACDG,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;cAC5F;YACJ,CAAC,MACI,IAAIQ,gBAAgB,GAAG,CAAC,IAAIR,cAAc,GAAGQ,gBAAgB,EAAE;cAChE,MAAMS,YAAY,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAACrG,iBAAiB,IAAI,CAAC,IAAI8F,aAAa,GAAG,EAAE,GAAG,GAAG;cACrGR,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAGiB,YAAY,GAAGf,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;YAC3G,CAAC,MACI,IAAIS,6BAA6B,KAAK,CAAC,EAAE;cAC1CN,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAG,GAAG,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;cAC9FG,WAAW,GAAG,IAAI,CAACvC,UAAU,CAACuC,WAAW,CAAC,GAAG,CAAC,GAAGA,WAAW,GAAG,EAAE;YACrE,CAAC,MACI;cACDA,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAGE,UAAU,CAACa,KAAK,CAACf,cAAc,GAAG,CAAC,CAAC;YAC5F;UACJ;UACA,IAAI,CAACmB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAE,IAAI,EAAE,oBAAoB,CAAC;QACpE,CAAC,MACI;UACDA,WAAW,GAAG,IAAI,CAACiB,WAAW,CAAClB,UAAU,EAAEF,cAAc,EAAEC,YAAY,CAAC;UACxE,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAE,IAAI,EAAE,cAAc,CAAC;QAC9D;QACA;MACJ;QACI;IACR;IACA,IAAI,CAACkB,SAAS,CAACjC,IAAI,CAACnB,KAAK,CAAC;EAC9B;EACAqD,eAAeA,CAACrD,KAAK,EAAE;IACnB,IAAI,IAAI,CAACG,QAAQ,EAAE;MACf;IACJ;IACA,IAAImD,IAAI,GAAGtD,KAAK,CAACmC,KAAK,IAAInC,KAAK,CAACuB,OAAO;IACvC,IAAIgC,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACH,IAAI,CAAC;IACpC,MAAMI,aAAa,GAAG,IAAI,CAACA,aAAa,CAACH,IAAI,CAAC;IAC9C,MAAMI,WAAW,GAAG,IAAI,CAACA,WAAW,CAACJ,IAAI,CAAC;IAC1C,IAAID,IAAI,IAAI,EAAE,EAAE;MACZtD,KAAK,CAACsB,cAAc,CAAC,CAAC;IAC1B;IACA,IAAK,EAAE,IAAIgC,IAAI,IAAIA,IAAI,IAAI,EAAE,IAAKK,WAAW,IAAID,aAAa,EAAE;MAC5D,IAAI,CAACE,MAAM,CAAC5D,KAAK,EAAEuD,IAAI,EAAE;QAAEG,aAAa;QAAEC;MAAY,CAAC,CAAC;IAC5D;EACJ;EACAE,OAAOA,CAAC7D,KAAK,EAAE;IACX,IAAI,CAAC,IAAI,CAAC3I,QAAQ,IAAI,CAAC,IAAI,CAAC8I,QAAQ,EAAE;MAClCH,KAAK,CAACsB,cAAc,CAAC,CAAC;MACtB,IAAIwC,IAAI,GAAG,CAAC9D,KAAK,CAAC+D,aAAa,IAAI,IAAI,CAAClJ,QAAQ,CAACmJ,WAAW,CAAC,eAAe,CAAC,EAAEC,OAAO,CAAC,MAAM,CAAC;MAC9F,IAAIH,IAAI,EAAE;QACN,IAAII,YAAY,GAAG,IAAI,CAACvE,UAAU,CAACmE,IAAI,CAAC;QACxC,IAAII,YAAY,IAAI,IAAI,EAAE;UACtB,IAAI,CAACN,MAAM,CAAC5D,KAAK,EAAEkE,YAAY,CAACxE,QAAQ,CAAC,CAAC,CAAC;QAC/C;MACJ;IACJ;EACJ;EACAyE,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,GAAG,IAAI,IAAI,IAAI,IAAI,CAACA,GAAG,GAAG,CAAC;EAC3C;EACAT,WAAWA,CAACJ,IAAI,EAAE;IACd,IAAI,IAAI,CAACvF,UAAU,CAAC4E,IAAI,CAACW,IAAI,CAAC,IAAIA,IAAI,KAAK,GAAG,EAAE;MAC5C,IAAI,CAACvF,UAAU,CAAC6E,SAAS,GAAG,CAAC;MAC7B,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAa,aAAaA,CAACH,IAAI,EAAE;IAChB,IAAI,IAAI,CAACnF,QAAQ,CAACwE,IAAI,CAACW,IAAI,CAAC,EAAE;MAC1B,IAAI,CAACnF,QAAQ,CAACyE,SAAS,GAAG,CAAC;MAC3B,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAI,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC1G,IAAI,KAAK,SAAS;EAClC;EACAkG,qBAAqBA,CAAC4B,GAAG,EAAE;IACvB,IAAI9B,gBAAgB,GAAG8B,GAAG,CAACC,MAAM,CAAC,IAAI,CAAClG,QAAQ,CAAC;IAChD,IAAI,CAACA,QAAQ,CAACyE,SAAS,GAAG,CAAC;IAC3B,MAAM0B,WAAW,GAAGF,GAAG,CAClBxF,OAAO,CAAC,IAAI,CAACL,OAAO,EAAE,EAAE,CAAC,CACzBO,IAAI,CAAC,CAAC,CACNF,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,IAAI,CAACX,SAAS,EAAE,EAAE,CAAC;IAChC,MAAMsE,6BAA6B,GAAG+B,WAAW,CAACD,MAAM,CAAC,IAAI,CAAClG,QAAQ,CAAC;IACvE,IAAI,CAACA,QAAQ,CAACyE,SAAS,GAAG,CAAC;IAC3B,OAAO;MAAEN,gBAAgB;MAAEC;IAA8B,CAAC;EAC9D;EACAgC,cAAcA,CAACH,GAAG,EAAE;IAChB,MAAM9B,gBAAgB,GAAG8B,GAAG,CAACC,MAAM,CAAC,IAAI,CAAClG,QAAQ,CAAC;IAClD,IAAI,CAACA,QAAQ,CAACyE,SAAS,GAAG,CAAC;IAC3B,MAAM4B,cAAc,GAAGJ,GAAG,CAACC,MAAM,CAAC,IAAI,CAACtG,UAAU,CAAC;IAClD,IAAI,CAACA,UAAU,CAAC6E,SAAS,GAAG,CAAC;IAC7B,MAAM6B,eAAe,GAAGL,GAAG,CAACC,MAAM,CAAC,IAAI,CAAChG,OAAO,CAAC;IAChD,IAAI,CAACA,OAAO,CAACuE,SAAS,GAAG,CAAC;IAC1B,MAAM8B,iBAAiB,GAAGN,GAAG,CAACC,MAAM,CAAC,IAAI,CAACpG,SAAS,CAAC;IACpD,IAAI,CAACA,SAAS,CAAC2E,SAAS,GAAG,CAAC;IAC5B,OAAO;MAAEN,gBAAgB;MAAEkC,cAAc;MAAEC,eAAe;MAAEC;IAAkB,CAAC;EACnF;EACAf,MAAMA,CAAC5D,KAAK,EAAEpB,IAAI,EAAEgG,IAAI,GAAG;IAAElB,aAAa,EAAE,KAAK;IAAEC,WAAW,EAAE;EAAM,CAAC,EAAE;IACrE,MAAMkB,oBAAoB,GAAGjG,IAAI,CAAC0F,MAAM,CAAC,IAAI,CAACtG,UAAU,CAAC;IACzD,IAAI,CAACA,UAAU,CAAC6E,SAAS,GAAG,CAAC;IAC7B,IAAI,CAAC,IAAI,CAACsB,cAAc,CAAC,CAAC,IAAIU,oBAAoB,KAAK,CAAC,CAAC,EAAE;MACvD;IACJ;IACA,IAAI9C,cAAc,GAAG,IAAI,CAACvB,KAAK,EAAEC,aAAa,CAACsB,cAAc;IAC7D,IAAIC,YAAY,GAAG,IAAI,CAACxB,KAAK,EAAEC,aAAa,CAACuB,YAAY;IACzD,IAAIC,UAAU,GAAG,IAAI,CAACzB,KAAK,EAAEC,aAAa,CAACjB,KAAK,CAACT,IAAI,CAAC,CAAC;IACvD,MAAM;MAAEwD,gBAAgB;MAAEkC,cAAc;MAAEC,eAAe;MAAEC;IAAkB,CAAC,GAAG,IAAI,CAACH,cAAc,CAACvC,UAAU,CAAC;IAChH,IAAIC,WAAW;IACf,IAAI0C,IAAI,CAACjB,WAAW,EAAE;MAClB,IAAI5B,cAAc,KAAK,CAAC,EAAE;QACtBG,WAAW,GAAGD,UAAU;QACxB,IAAIwC,cAAc,KAAK,CAAC,CAAC,IAAIzC,YAAY,KAAK,CAAC,EAAE;UAC7CE,WAAW,GAAG,IAAI,CAAC4C,UAAU,CAAC7C,UAAU,EAAErD,IAAI,EAAE,CAAC,EAAEoD,YAAY,CAAC;QACpE;QACA,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAEtD,IAAI,EAAE,QAAQ,CAAC;MACxD;IACJ,CAAC,MACI,IAAIgG,IAAI,CAAClB,aAAa,EAAE;MACzB,IAAInB,gBAAgB,GAAG,CAAC,IAAIR,cAAc,KAAKQ,gBAAgB,EAAE;QAC7D,IAAI,CAACW,WAAW,CAAClD,KAAK,EAAEiC,UAAU,EAAErD,IAAI,EAAE,QAAQ,CAAC;MACvD,CAAC,MACI,IAAI2D,gBAAgB,GAAGR,cAAc,IAAIQ,gBAAgB,GAAGP,YAAY,EAAE;QAC3EE,WAAW,GAAG,IAAI,CAAC4C,UAAU,CAAC7C,UAAU,EAAErD,IAAI,EAAEmD,cAAc,EAAEC,YAAY,CAAC;QAC7E,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAEtD,IAAI,EAAE,QAAQ,CAAC;MACxD,CAAC,MACI,IAAI2D,gBAAgB,KAAK,CAAC,CAAC,IAAI,IAAI,CAACzF,iBAAiB,EAAE;QACxDoF,WAAW,GAAG,IAAI,CAAC4C,UAAU,CAAC7C,UAAU,EAAErD,IAAI,EAAEmD,cAAc,EAAEC,YAAY,CAAC;QAC7E,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAEtD,IAAI,EAAE,QAAQ,CAAC;MACxD;IACJ,CAAC,MACI;MACD,MAAM9B,iBAAiB,GAAG,IAAI,CAACC,YAAY,CAACgI,eAAe,CAAC,CAAC,CAAClI,qBAAqB;MACnF,MAAMmI,SAAS,GAAGjD,cAAc,KAAKC,YAAY,GAAG,cAAc,GAAG,QAAQ;MAC7E,IAAIO,gBAAgB,GAAG,CAAC,IAAIR,cAAc,GAAGQ,gBAAgB,EAAE;QAC3D,IAAIR,cAAc,GAAGnD,IAAI,CAACiC,MAAM,IAAI0B,gBAAgB,GAAG,CAAC,CAAC,IAAIzF,iBAAiB,EAAE;UAC5E,MAAMmI,SAAS,GAAGN,iBAAiB,IAAI5C,cAAc,GAAG4C,iBAAiB,GAAG,CAAC,GAAGD,eAAe,IAAI3C,cAAc,GAAG2C,eAAe,GAAGzC,UAAU,CAACpB,MAAM;UACvJqB,WAAW,GAAGD,UAAU,CAACa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,GAAGnD,IAAI,GAAGqD,UAAU,CAACa,KAAK,CAACf,cAAc,GAAGnD,IAAI,CAACiC,MAAM,EAAEoE,SAAS,CAAC,GAAGhD,UAAU,CAACa,KAAK,CAACmC,SAAS,CAAC;UAClJ,IAAI,CAAC/B,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAEtD,IAAI,EAAEoG,SAAS,CAAC;QACzD;MACJ,CAAC,MACI;QACD9C,WAAW,GAAG,IAAI,CAAC4C,UAAU,CAAC7C,UAAU,EAAErD,IAAI,EAAEmD,cAAc,EAAEC,YAAY,CAAC;QAC7E,IAAI,CAACkB,WAAW,CAAClD,KAAK,EAAEkC,WAAW,EAAEtD,IAAI,EAAEoG,SAAS,CAAC;MACzD;IACJ;EACJ;EACAF,UAAUA,CAACtF,KAAK,EAAEZ,IAAI,EAAEsG,KAAK,EAAEC,GAAG,EAAE;IAChC,IAAIC,SAAS,GAAGxG,IAAI,KAAK,GAAG,GAAGA,IAAI,GAAGA,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC;IACrD,IAAIgG,SAAS,CAACvE,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM0B,gBAAgB,GAAG/C,KAAK,CAACsD,KAAK,CAACoC,KAAK,EAAEC,GAAG,CAAC,CAACb,MAAM,CAAC,IAAI,CAAClG,QAAQ,CAAC;MACtE,IAAI,CAACA,QAAQ,CAACyE,SAAS,GAAG,CAAC;MAC3B,OAAON,gBAAgB,GAAG,CAAC,GAAG/C,KAAK,CAACsD,KAAK,CAAC,CAAC,EAAEoC,KAAK,CAAC,GAAG,IAAI,CAAC3F,WAAW,CAACX,IAAI,CAAC,GAAGY,KAAK,CAACsD,KAAK,CAACqC,GAAG,CAAC,GAAG3F,KAAK,IAAI,IAAI,CAACD,WAAW,CAACX,IAAI,CAAC;IACrI,CAAC,MACI,IAAIuG,GAAG,GAAGD,KAAK,KAAK1F,KAAK,CAACqB,MAAM,EAAE;MACnC,OAAO,IAAI,CAACtB,WAAW,CAACX,IAAI,CAAC;IACjC,CAAC,MACI,IAAIsG,KAAK,KAAK,CAAC,EAAE;MAClB,OAAOtG,IAAI,GAAGY,KAAK,CAACsD,KAAK,CAACqC,GAAG,CAAC;IAClC,CAAC,MACI,IAAIA,GAAG,KAAK3F,KAAK,CAACqB,MAAM,EAAE;MAC3B,OAAOrB,KAAK,CAACsD,KAAK,CAAC,CAAC,EAAEoC,KAAK,CAAC,GAAGtG,IAAI;IACvC,CAAC,MACI;MACD,OAAOY,KAAK,CAACsD,KAAK,CAAC,CAAC,EAAEoC,KAAK,CAAC,GAAGtG,IAAI,GAAGY,KAAK,CAACsD,KAAK,CAACqC,GAAG,CAAC;IAC1D;EACJ;EACAhC,WAAWA,CAAC3D,KAAK,EAAE0F,KAAK,EAAEC,GAAG,EAAE;IAC3B,IAAIjD,WAAW;IACf,IAAIiD,GAAG,GAAGD,KAAK,KAAK1F,KAAK,CAACqB,MAAM,EAC5BqB,WAAW,GAAG,EAAE,CAAC,KAChB,IAAIgD,KAAK,KAAK,CAAC,EAChBhD,WAAW,GAAG1C,KAAK,CAACsD,KAAK,CAACqC,GAAG,CAAC,CAAC,KAC9B,IAAIA,GAAG,KAAK3F,KAAK,CAACqB,MAAM,EACzBqB,WAAW,GAAG1C,KAAK,CAACsD,KAAK,CAAC,CAAC,EAAEoC,KAAK,CAAC,CAAC,KAEpChD,WAAW,GAAG1C,KAAK,CAACsD,KAAK,CAAC,CAAC,EAAEoC,KAAK,CAAC,GAAG1F,KAAK,CAACsD,KAAK,CAACqC,GAAG,CAAC;IAC1D,OAAOjD,WAAW;EACtB;EACAmD,UAAUA,CAAA,EAAG;IACT,IAAItD,cAAc,GAAG,IAAI,CAACvB,KAAK,EAAEC,aAAa,CAACsB,cAAc;IAC7D,IAAIE,UAAU,GAAG,IAAI,CAACzB,KAAK,EAAEC,aAAa,CAACjB,KAAK;IAChD,IAAI8F,WAAW,GAAGrD,UAAU,CAACpB,MAAM;IACnC,IAAIvD,KAAK,GAAG,IAAI;IAChB;IACA,IAAIiI,YAAY,GAAG,CAAC,IAAI,CAACpG,UAAU,IAAI,EAAE,EAAE0B,MAAM;IACjDoB,UAAU,GAAGA,UAAU,CAACpD,OAAO,CAAC,IAAI,CAACL,OAAO,EAAE,EAAE,CAAC;IACjDuD,cAAc,GAAGA,cAAc,GAAGwD,YAAY;IAC9C,IAAIhC,IAAI,GAAGtB,UAAU,CAAChD,MAAM,CAAC8C,cAAc,CAAC;IAC5C,IAAI,IAAI,CAACK,aAAa,CAACmB,IAAI,CAAC,EAAE;MAC1B,OAAOxB,cAAc,GAAGwD,YAAY;IACxC;IACA;IACA,IAAI7H,CAAC,GAAGqE,cAAc,GAAG,CAAC;IAC1B,OAAOrE,CAAC,IAAI,CAAC,EAAE;MACX6F,IAAI,GAAGtB,UAAU,CAAChD,MAAM,CAACvB,CAAC,CAAC;MAC3B,IAAI,IAAI,CAAC0E,aAAa,CAACmB,IAAI,CAAC,EAAE;QAC1BjG,KAAK,GAAGI,CAAC,GAAG6H,YAAY;QACxB;MACJ,CAAC,MACI;QACD7H,CAAC,EAAE;MACP;IACJ;IACA,IAAIJ,KAAK,KAAK,IAAI,EAAE;MAChB,IAAI,CAACkD,KAAK,EAAEC,aAAa,CAACsC,iBAAiB,CAACzF,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,CAAC;IACrE,CAAC,MACI;MACDI,CAAC,GAAGqE,cAAc;MAClB,OAAOrE,CAAC,GAAG4H,WAAW,EAAE;QACpB/B,IAAI,GAAGtB,UAAU,CAAChD,MAAM,CAACvB,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC0E,aAAa,CAACmB,IAAI,CAAC,EAAE;UAC1BjG,KAAK,GAAGI,CAAC,GAAG6H,YAAY;UACxB;QACJ,CAAC,MACI;UACD7H,CAAC,EAAE;QACP;MACJ;MACA,IAAIJ,KAAK,KAAK,IAAI,EAAE;QAChB,IAAI,CAACkD,KAAK,EAAEC,aAAa,CAACsC,iBAAiB,CAACzF,KAAK,EAAEA,KAAK,CAAC;MAC7D;IACJ;IACA,OAAOA,KAAK,IAAI,CAAC;EACrB;EACAkI,YAAYA,CAAA,EAAG;IACX,MAAMjF,YAAY,GAAG,IAAI,CAACC,KAAK,EAAEC,aAAa,CAACjB,KAAK;IACpD,IAAI,CAAC,IAAI,CAACW,QAAQ,IAAII,YAAY,KAAKlP,UAAU,CAACoU,YAAY,CAAC,CAAC,EAAE;MAC9D,IAAI,CAACJ,UAAU,CAAC,CAAC;IACrB;EACJ;EACAjD,aAAaA,CAACmB,IAAI,EAAE;IAChB,IAAIA,IAAI,CAAC1C,MAAM,KAAK,CAAC,KAAK,IAAI,CAAClD,QAAQ,CAACiF,IAAI,CAACW,IAAI,CAAC,IAAI,IAAI,CAACnF,QAAQ,CAACwE,IAAI,CAACW,IAAI,CAAC,IAAI,IAAI,CAACzF,MAAM,CAAC8E,IAAI,CAACW,IAAI,CAAC,IAAI,IAAI,CAACvF,UAAU,CAAC4E,IAAI,CAACW,IAAI,CAAC,CAAC,EAAE;MACrI,IAAI,CAACmC,UAAU,CAAC,CAAC;MACjB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAAC/H,QAAQ,CAACkF,SAAS,GAAG,CAAC;IAC3B,IAAI,CAACzE,QAAQ,CAACyE,SAAS,GAAG,CAAC;IAC3B,IAAI,CAAC/E,MAAM,CAAC+E,SAAS,GAAG,CAAC;IACzB,IAAI,CAAC7E,UAAU,CAAC6E,SAAS,GAAG,CAAC;EACjC;EACAK,WAAWA,CAAClD,KAAK,EAAE2F,QAAQ,EAAEC,gBAAgB,EAAEZ,SAAS,EAAE;IACtD,IAAIzE,YAAY,GAAG,IAAI,CAACC,KAAK,EAAEC,aAAa,CAACjB,KAAK;IAClD,IAAIkB,QAAQ,GAAG,IAAI;IACnB,IAAIiF,QAAQ,IAAI,IAAI,EAAE;MAClBjF,QAAQ,GAAG,IAAI,CAACf,UAAU,CAACgG,QAAQ,CAAC;MACpCjF,QAAQ,GAAG,CAACA,QAAQ,IAAI,CAAC,IAAI,CAACmF,UAAU,GAAG,CAAC,GAAGnF,QAAQ;MACvD,IAAI,CAACI,WAAW,CAACJ,QAAQ,EAAEkF,gBAAgB,EAAEZ,SAAS,EAAEW,QAAQ,CAAC;MACjE,IAAI,CAAC3E,aAAa,CAAChB,KAAK,EAAEO,YAAY,EAAEG,QAAQ,CAAC;IACrD;EACJ;EACAM,aAAaA,CAAChB,KAAK,EAAEO,YAAY,EAAEG,QAAQ,EAAE;IACzC,IAAI,IAAI,CAACoF,cAAc,CAACvF,YAAY,EAAEG,QAAQ,CAAC,EAAE;MAC7C,IAAI,CAACF,KAAK,CAACC,aAAa,CAACjB,KAAK,GAAG,IAAI,CAACD,WAAW,CAACmB,QAAQ,CAAC;MAC3D,IAAI,CAACF,KAAK,EAAEC,aAAa,CAAC4B,YAAY,CAAC,eAAe,EAAE3B,QAAQ,CAAC;MACjE,IAAI,CAACK,WAAW,CAACf,KAAK,EAAEU,QAAQ,CAAC;MACjC,IAAI,CAACqF,OAAO,CAAC5E,IAAI,CAAC;QAAE6E,aAAa,EAAEhG,KAAK;QAAER,KAAK,EAAEkB,QAAQ;QAAEjB,cAAc,EAAEc;MAAa,CAAC,CAAC;IAC9F;EACJ;EACAuF,cAAcA,CAACvF,YAAY,EAAEG,QAAQ,EAAE;IACnC,IAAIA,QAAQ,KAAK,IAAI,IAAIH,YAAY,KAAK,IAAI,EAAE;MAC5C,OAAO,IAAI;IACf;IACA,IAAIG,QAAQ,IAAI,IAAI,EAAE;MAClB,IAAIuF,kBAAkB,GAAG,OAAO1F,YAAY,KAAK,QAAQ,GAAG,IAAI,CAACZ,UAAU,CAACY,YAAY,CAAC,GAAGA,YAAY;MACxG,OAAOG,QAAQ,KAAKuF,kBAAkB;IAC1C;IACA,OAAO,KAAK;EAChB;EACAtF,aAAaA,CAACnB,KAAK,EAAE;IACjB,IAAIA,KAAK,KAAK,GAAG,IAAIA,KAAK,IAAI,IAAI,EAAE;MAChC,OAAO,IAAI;IACf;IACA,IAAI,IAAI,CAAC4E,GAAG,IAAI,IAAI,IAAI5E,KAAK,GAAG,IAAI,CAAC4E,GAAG,EAAE;MACtC,OAAO,IAAI,CAACA,GAAG;IACnB;IACA,IAAI,IAAI,CAAC8B,GAAG,IAAI,IAAI,IAAI1G,KAAK,GAAG,IAAI,CAAC0G,GAAG,EAAE;MACtC,OAAO,IAAI,CAACA,GAAG;IACnB;IACA,OAAO1G,KAAK;EAChB;EACAsB,WAAWA,CAACtB,KAAK,EAAEoG,gBAAgB,EAAEZ,SAAS,EAAEW,QAAQ,EAAE;IACtDC,gBAAgB,GAAGA,gBAAgB,IAAI,EAAE;IACzC,IAAI3D,UAAU,GAAG,IAAI,CAACzB,KAAK,EAAEC,aAAa,CAACjB,KAAK;IAChD,IAAIkB,QAAQ,GAAG,IAAI,CAACnB,WAAW,CAACC,KAAK,CAAC;IACtC,IAAI2G,aAAa,GAAGlE,UAAU,CAACpB,MAAM;IACrC,IAAIH,QAAQ,KAAKiF,QAAQ,EAAE;MACvBjF,QAAQ,GAAG,IAAI,CAAC0F,YAAY,CAAC1F,QAAQ,EAAEiF,QAAQ,CAAC;IACpD;IACA,IAAIQ,aAAa,KAAK,CAAC,EAAE;MACrB,IAAI,CAAC3F,KAAK,CAACC,aAAa,CAACjB,KAAK,GAAGkB,QAAQ;MACzC,IAAI,CAACF,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;MAChD,MAAMzF,KAAK,GAAG,IAAI,CAAC+H,UAAU,CAAC,CAAC;MAC/B,MAAMrD,YAAY,GAAG1E,KAAK,GAAGsI,gBAAgB,CAAC/E,MAAM;MACpD,IAAI,CAACL,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;IAC1E,CAAC,MACI;MACD,IAAID,cAAc,GAAG,IAAI,CAACvB,KAAK,CAACC,aAAa,CAACsB,cAAc;MAC5D,IAAIC,YAAY,GAAG,IAAI,CAACxB,KAAK,CAACC,aAAa,CAACuB,YAAY;MACxD,IAAI,IAAI,CAACpB,SAAS,IAAI,IAAI,CAACA,SAAS,GAAGF,QAAQ,CAACG,MAAM,EAAE;QACpD;MACJ;MACA,IAAI,CAACL,KAAK,CAACC,aAAa,CAACjB,KAAK,GAAGkB,QAAQ;MACzC,IAAI2F,SAAS,GAAG3F,QAAQ,CAACG,MAAM;MAC/B,IAAImE,SAAS,KAAK,cAAc,EAAE;QAC9B,MAAMsB,UAAU,GAAG,IAAI,CAAC3G,UAAU,CAAC,CAACsC,UAAU,IAAI,EAAE,EAAEa,KAAK,CAAC,CAAC,EAAEf,cAAc,CAAC,CAAC;QAC/E,MAAMwE,aAAa,GAAGD,UAAU,KAAK,IAAI,GAAGA,UAAU,CAAC5G,QAAQ,CAAC,CAAC,GAAG,EAAE;QACtE,MAAM8G,SAAS,GAAGD,aAAa,CAACnH,KAAK,CAAC,EAAE,CAAC,CAACvB,IAAI,CAAE,IAAG,IAAI,CAACmB,SAAU,IAAG,CAAC;QACtE,MAAMyH,MAAM,GAAG,IAAI7I,MAAM,CAAC4I,SAAS,EAAE,GAAG,CAAC;QACzCC,MAAM,CAAC7D,IAAI,CAAClC,QAAQ,CAAC;QACrB,MAAMgG,KAAK,GAAGd,gBAAgB,CAACxG,KAAK,CAAC,EAAE,CAAC,CAACvB,IAAI,CAAE,IAAG,IAAI,CAACmB,SAAU,IAAG,CAAC;QACrE,MAAM2H,MAAM,GAAG,IAAI/I,MAAM,CAAC8I,KAAK,EAAE,GAAG,CAAC;QACrCC,MAAM,CAAC/D,IAAI,CAAClC,QAAQ,CAACoC,KAAK,CAAC2D,MAAM,CAAC5D,SAAS,CAAC,CAAC;QAC7Cb,YAAY,GAAGyE,MAAM,CAAC5D,SAAS,GAAG8D,MAAM,CAAC9D,SAAS;QAClD,IAAI,CAACrC,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;MAC1E,CAAC,MACI,IAAIqE,SAAS,KAAKF,aAAa,EAAE;QAClC,IAAInB,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,oBAAoB,EAC5D,IAAI,CAACxE,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,CAAC,CAAC,KAC9E,IAAIgD,SAAS,KAAK,eAAe,EAClC,IAAI,CAACxE,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,CAAC,CAAC,KAC9E,IAAIgD,SAAS,KAAK,cAAc,IAAIA,SAAS,KAAK,MAAM,EACzD,IAAI,CAACxE,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;MAC9E,CAAC,MACI,IAAIgD,SAAS,KAAK,oBAAoB,EAAE;QACzC,IAAI4B,QAAQ,GAAG3E,UAAU,CAAChD,MAAM,CAAC+C,YAAY,GAAG,CAAC,CAAC;QAClD,IAAI6E,QAAQ,GAAG5E,UAAU,CAAChD,MAAM,CAAC+C,YAAY,CAAC;QAC9C,IAAI8E,IAAI,GAAGX,aAAa,GAAGE,SAAS;QACpC,IAAIU,WAAW,GAAG,IAAI,CAACjJ,MAAM,CAAC8E,IAAI,CAACiE,QAAQ,CAAC;QAC5C,IAAIE,WAAW,IAAID,IAAI,KAAK,CAAC,EAAE;UAC3B9E,YAAY,IAAI,CAAC;QACrB,CAAC,MACI,IAAI,CAAC+E,WAAW,IAAI,IAAI,CAAC3E,aAAa,CAACwE,QAAQ,CAAC,EAAE;UACnD5E,YAAY,IAAI,CAAC,CAAC,GAAG8E,IAAI,GAAG,CAAC;QACjC;QACA,IAAI,CAAChJ,MAAM,CAAC+E,SAAS,GAAG,CAAC;QACzB,IAAI,CAACrC,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;MAC1E,CAAC,MACI,IAAIC,UAAU,KAAK,GAAG,IAAI+C,SAAS,KAAK,QAAQ,EAAE;QACnD,IAAI,CAACxE,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;QAChD,MAAMzF,KAAK,GAAG,IAAI,CAAC+H,UAAU,CAAC,CAAC;QAC/B,MAAMrD,YAAY,GAAG1E,KAAK,GAAGsI,gBAAgB,CAAC/E,MAAM,GAAG,CAAC;QACxD,IAAI,CAACL,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;MAC1E,CAAC,MACI;QACDA,YAAY,GAAGA,YAAY,IAAIqE,SAAS,GAAGF,aAAa,CAAC;QACzD,IAAI,CAAC3F,KAAK,CAACC,aAAa,CAACsC,iBAAiB,CAACf,YAAY,EAAEA,YAAY,CAAC;MAC1E;IACJ;IACA,IAAI,CAACxB,KAAK,CAACC,aAAa,CAAC4B,YAAY,CAAC,eAAe,EAAE7C,KAAK,CAAC;EACjE;EACA4G,YAAYA,CAACY,IAAI,EAAEC,IAAI,EAAE;IACrB,IAAID,IAAI,IAAIC,IAAI,EAAE;MACd,IAAI1E,gBAAgB,GAAG0E,IAAI,CAAC3C,MAAM,CAAC,IAAI,CAAClG,QAAQ,CAAC;MACjD,IAAI,CAACA,QAAQ,CAACyE,SAAS,GAAG,CAAC;MAC3B,IAAI,IAAI,CAACvD,UAAU,EAAE;QACjB,OAAO0H,IAAI,CAACnI,OAAO,CAAC,IAAI,CAACS,UAAU,EAAE,EAAE,CAAC,CAACF,KAAK,CAAC,IAAI,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG6I,IAAI,CAACpI,OAAO,CAAC,IAAI,CAACS,UAAU,EAAE,EAAE,CAAC,CAACwD,KAAK,CAACP,gBAAgB,CAAC,GAAG,IAAI,CAACjD,UAAU;MAClJ,CAAC,MACI;QACD,OAAOiD,gBAAgB,KAAK,CAAC,CAAC,GAAGyE,IAAI,CAAC5H,KAAK,CAAC,IAAI,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG6I,IAAI,CAACnE,KAAK,CAACP,gBAAgB,CAAC,GAAGyE,IAAI;MACvG;IACJ;IACA,OAAOA,IAAI;EACf;EACArE,gBAAgBA,CAACnD,KAAK,EAAE;IACpB,IAAIA,KAAK,EAAE;MACP,MAAM0H,UAAU,GAAG1H,KAAK,CAACJ,KAAK,CAAC,IAAI,CAAChB,QAAQ,CAAC;MAC7C,IAAI8I,UAAU,CAACrG,MAAM,KAAK,CAAC,EAAE;QACzB,OAAOqG,UAAU,CAAC,CAAC,CAAC,CACfrI,OAAO,CAAC,IAAI,CAACP,OAAO,EAAE,EAAE,CAAC,CACzBS,IAAI,CAAC,CAAC,CACNF,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,IAAI,CAACX,SAAS,EAAE,EAAE,CAAC,CAAC2C,MAAM;MAC3C;IACJ;IACA,OAAO,CAAC;EACZ;EACAsG,YAAYA,CAACnH,KAAK,EAAE;IAChB,IAAI,CAACvF,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC2M,OAAO,CAACjG,IAAI,CAACnB,KAAK,CAAC;EAC5B;EACAqH,WAAWA,CAACrH,KAAK,EAAE;IACf,IAAI,CAACvF,OAAO,GAAG,KAAK;IACpB,IAAIiG,QAAQ,GAAG,IAAI,CAACC,aAAa,CAAC,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACa,KAAK,CAACC,aAAa,CAACjB,KAAK,CAAC,CAAC;IAClF,IAAI,CAACgB,KAAK,CAACC,aAAa,CAACjB,KAAK,GAAG,IAAI,CAACD,WAAW,CAACmB,QAAQ,CAAC;IAC3D,IAAI,CAACF,KAAK,CAACC,aAAa,CAAC4B,YAAY,CAAC,eAAe,EAAE3B,QAAQ,CAAC;IAChE,IAAI,CAACK,WAAW,CAACf,KAAK,EAAEU,QAAQ,CAAC;IACjC,IAAI,CAAC4G,MAAM,CAACnG,IAAI,CAACnB,KAAK,CAAC;EAC3B;EACAP,cAAcA,CAAA,EAAG;IACb,MAAM4E,GAAG,GAAG,CAAC,IAAI,CAAC7E,KAAK,IAAI,CAAC,IAAI,CAACqG,UAAU,GAAG,CAAC,GAAG,IAAI,CAACrG,KAAK;IAC5D,OAAO,IAAI,CAACD,WAAW,CAAC8E,GAAG,CAAC;EAChC;EACAtD,WAAWA,CAACf,KAAK,EAAER,KAAK,EAAE;IACtB,MAAM+H,kBAAkB,GAAG,IAAI,CAACxL,SAAS,EAAEyL,OAAO,EAAEC,QAAQ,KAAK,MAAM;IACvE,IAAI,IAAI,CAACjI,KAAK,KAAKA,KAAK,EAAE;MACtB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,EAAE+H,kBAAkB,IAAI,IAAI,CAAC9M,OAAO,CAAC,EAAE;QACvC,IAAI,CAACwG,aAAa,CAACzB,KAAK,CAAC;MAC7B;IACJ,CAAC,MACI,IAAI+H,kBAAkB,EAAE;MACzB,IAAI,CAACtG,aAAa,CAACzB,KAAK,CAAC;IAC7B;IACA,IAAI,CAACkI,cAAc,CAAC,CAAC;EACzB;EACAC,UAAUA,CAACnI,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACzE,EAAE,CAAC6M,YAAY,CAAC,CAAC;EAC1B;EACAC,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAAC7G,aAAa,GAAG6G,EAAE;EAC3B;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAACJ,cAAc,GAAGI,EAAE;EAC5B;EACAE,gBAAgBA,CAAC3D,GAAG,EAAE;IAClB,IAAI,CAAChN,QAAQ,GAAGgN,GAAG;IACnB,IAAI,CAACtJ,EAAE,CAAC6M,YAAY,CAAC,CAAC;EAC1B;EACA,IAAIK,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACzI,KAAK,IAAI,IAAI,IAAI,IAAI,CAACA,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACmB,MAAM,GAAG,CAAC;EACjE;EACAlG,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAACD,KAAK,EAAE;MACZwN,aAAa,CAAC,IAAI,CAACxN,KAAK,CAAC;IAC7B;EACJ;EACAyN,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACpL,YAAY;EAC5B;AAyIJ;AAACqL,MAAA,GAtpCK9N,WAAW;AAAAW,eAAA,CAAXX,WAAW,wBAAA+N,eAAAC,CAAA;EAAA,YAAAA,CAAA,IA8gCsFhO,MAAW,EAyIjCjK,EAAE,CAAAkY,iBAAA,CAzIiDpY,QAAQ,GAyI3DE,EAAE,CAAAkY,iBAAA,CAzIsElY,EAAE,CAACmY,UAAU,GAyIrFnY,EAAE,CAAAkY,iBAAA,CAzIgGlY,EAAE,CAACoY,iBAAiB,GAyItHpY,EAAE,CAAAkY,iBAAA,CAzIiIlY,EAAE,CAACqY,QAAQ;AAAA;AAAAzN,eAAA,CA9gCzNX,WAAW,8BAupCgEjK,EAAE,CAAAsY,iBAAA;EAAAC,IAAA,EAxIQtO,MAAW;EAAAuO,SAAA;EAAAC,cAAA,WAAAC,sBAAAhX,EAAA,EAAAC,GAAA,EAAAgX,QAAA;IAAA,IAAAjX,EAAA;MAwIrB1B,EAAE,CAAA4Y,cAAA,CAAAD,QAAA,EAxI09CxX,aAAa;IAAA;IAAA,IAAAO,EAAA;MAAA,IAAAmX,EAAA;MAwIz+C7Y,EAAE,CAAA8Y,cAAA,CAAAD,EAAA,GAAF7Y,EAAE,CAAA+Y,WAAA,QAAApX,GAAA,CAAAyJ,SAAA,GAAAyN,EAAA;IAAA;EAAA;EAAAG,SAAA,WAAAC,aAAAvX,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF1B,EAAE,CAAAkZ,WAAA,CAAA1X,GAAA;IAAA;IAAA,IAAAE,EAAA;MAAA,IAAAmX,EAAA;MAAF7Y,EAAE,CAAA8Y,cAAA,CAAAD,EAAA,GAAF7Y,EAAE,CAAA+Y,WAAA,QAAApX,GAAA,CAAAwO,KAAA,GAAA0I,EAAA,CAAAM,KAAA;IAAA;EAAA;EAAAC,SAAA;EAAAC,QAAA;EAAAC,YAAA,WAAAC,oBAAA7X,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF1B,EAAE,CAAAwZ,WAAA,0BAAA7X,GAAA,CAAAiW,MAAA,0BAAAjW,GAAA,CAAAyI,OAAA,6BAAAzI,GAAA,CAAA8X,SAAA,IAAA9X,GAAA,CAAA+X,YAAA;IAAA;EAAA;EAAAC,MAAA;IAAAC,WAAA;IAAA7M,MAAA;IAAA2M,YAAA;IAAAG,OAAA;IAAAC,UAAA;IAAA7N,KAAA;IAAA8N,WAAA;IAAAC,IAAA;IAAAzJ,SAAA;IAAA0J,QAAA;IAAAC,KAAA;IAAAC,SAAA;IAAAC,YAAA;IAAAC,IAAA;IAAAC,QAAA;IAAAC,YAAA;IAAAxG,GAAA;IAAA8B,GAAA;IAAA/O,oBAAA;IAAAG,oBAAA;IAAAxD,mBAAA;IAAAS,mBAAA;IAAA4L,QAAA;IAAAG,IAAA;IAAAuF,UAAA;IAAA3I,MAAA;IAAAb,aAAA;IAAAE,IAAA;IAAAC,QAAA;IAAAC,eAAA;IAAAC,WAAA;IAAAE,iBAAA;IAAAE,iBAAA;IAAAoC,MAAA;IAAAG,MAAA;IAAAwL,UAAA;IAAAC,eAAA;IAAAhB,SAAA;IAAAzS,QAAA;EAAA;EAAA0T,OAAA;IAAAhF,OAAA;IAAAqB,OAAA;IAAAE,MAAA;IAAAlE,SAAA;IAAAlC,OAAA;EAAA;EAAA8J,QAAA,GAAF3a,EAAE,CAAA4a,kBAAA,CAxI04C,CAAC9Q,0BAA0B,CAAC,GAwIx6C9J,EAAE,CAAA6a,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxP,QAAA,WAAAyP,gBAAAvZ,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF1B,EAAE,CAAA8B,cAAA,aA9H3E,CAAC,iBAAD,CAAC;MA8HwE9B,EAAE,CAAA+B,UAAA,mBAAAmZ,uCAAApW,MAAA;QAAA,OAtG1DnD,GAAA,CAAAwP,WAAA,CAAArM,MAAkB,CAAC;MAAA,EAAC,qBAAAqW,yCAAArW,MAAA;QAAA,OAClBnD,GAAA,CAAA4P,cAAA,CAAAzM,MAAqB,CAAC;MAAA,CADL,CAAC,sBAAAsW,0CAAAtW,MAAA;QAAA,OAEjBnD,GAAA,CAAAqR,eAAA,CAAAlO,MAAsB,CAAC;MAAA,CAFP,CAAC,mBAAAuW,uCAAAvW,MAAA;QAAA,OAGpBnD,GAAA,CAAA6R,OAAA,CAAA1O,MAAc,CAAC;MAAA,CAHI,CAAC,mBAAAwW,uCAAA;QAAA,OAIpB3Z,GAAA,CAAAwT,YAAA,CAAa,CAAC;MAAA,CAJK,CAAC,mBAAAoG,uCAAAzW,MAAA;QAAA,OAKpBnD,GAAA,CAAAmV,YAAA,CAAAhS,MAAmB,CAAC;MAAA,CALD,CAAC,kBAAA0W,sCAAA1W,MAAA;QAAA,OAMrBnD,GAAA,CAAAqV,WAAA,CAAAlS,MAAkB,CAAC;MAAA,CANC,CAAC;MAsGoC9E,EAAE,CAAAsC,YAAA,CA/FtE,CAAC;MA+FmEtC,EAAE,CAAA0C,UAAA,IAAAQ,8BAAA,yBAzFzD,CAAC;MAyFsDlD,EAAE,CAAA0C,UAAA,IAAAiC,sBAAA,kBA9CjE,CAAC;MA8C8D3E,EAAE,CAAA0C,UAAA,IAAA+E,wBAAA,mBAzB/D,CAAC;MAyB4DzH,EAAE,CAAA0C,UAAA,IAAAmG,wBAAA,mBAJ/D,CAAC;MAI4D7I,EAAE,CAAAsC,YAAA,CAHrE,CAAC;IAAA;IAAA,IAAAZ,EAAA;MAGkE1B,EAAE,CAAA6G,UAAA,CAAAlF,GAAA,CAAAmY,UA/HpD,CAAC;MA+HiD9Z,EAAE,CAAAuC,UAAA,YAAFvC,EAAE,CAAAyb,eAAA,KAAA/R,GAAA,EAAA/H,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,gBAAA/X,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,mBAAA/X,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,gBAjItE,CAAC,YAAA/X,GAAA,CAAAsK,KAAD,CAAC;MAiImEjM,EAAE,CAAAgD,SAAA,EAzH3C,CAAC;MAyHwChD,EAAE,CAAA6G,UAAA,CAAAlF,GAAA,CAAA8Y,eAzH3C,CAAC;MAyHwCza,EAAE,CAAAuC,UAAA,iCA3HnC,CAAC,YAAAZ,GAAA,CAAA6Y,UAAD,CAAC,UAAA7Y,GAAA,CAAAyN,cAAA,EAAD,CAAC,aAAAzN,GAAA,CAAAqF,QAAD,CAAC,aAAArF,GAAA,CAAAmO,QAAD,CAAC;MA2HgC9P,EAAE,CAAA0b,WAAA,gBAAA/Z,GAAA,CAAAoY,WAtHpC,CAAC,UAAApY,GAAA,CAAAuY,KAAD,CAAC,OAAAvY,GAAA,CAAAkY,OAAD,CAAC,SAAAlY,GAAA,CAAAqY,IAAD,CAAC,SAAArY,GAAA,CAAA0Y,IAAD,CAAC,iBAAA1Y,GAAA,CAAA4Y,YAAD,CAAC,cAAA5Y,GAAA,CAAA4O,SAAD,CAAC,aAAA5O,GAAA,CAAAsY,QAAD,CAAC,eAAAtY,GAAA,CAAAwY,SAAD,CAAC,kBAAAxY,GAAA,CAAAyY,YAAD,CAAC,aAAAzY,GAAA,CAAA2Y,QAAD,CAAC,QAAA3Y,GAAA,CAAAoS,GAAD,CAAC,QAAApS,GAAA,CAAAkU,GAAD,CAAC;MAsHiC7V,EAAE,CAAAgD,SAAA,EA9FH,CAAC;MA8FAhD,EAAE,CAAAuC,UAAA,SAAAZ,GAAA,CAAA+X,YAAA,kBAAA/X,GAAA,CAAA8X,SAAA,IAAA9X,GAAA,CAAAwN,KA9FH,CAAC;MA8FAnP,EAAE,CAAAgD,SAAA,EAvFiB,CAAC;MAuFpBhD,EAAE,CAAAuC,UAAA,SAAAZ,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,cAvFiB,CAAC;MAuFpB1Z,EAAE,CAAAgD,SAAA,EAvCpB,CAAC;MAuCiBhD,EAAE,CAAAuC,UAAA,SAAAZ,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,cAvCpB,CAAC;MAuCiB1Z,EAAE,CAAAgD,SAAA,EAlBpB,CAAC;MAkBiBhD,EAAE,CAAAuC,UAAA,SAAAZ,GAAA,CAAAiY,WAAA,IAAAjY,GAAA,CAAA+X,YAAA,cAlBpB,CAAC;IAAA;EAAA;EAAAiC,YAAA,WAAAA,CAAA;IAAA,QAgBojE9b,EAAE,CAAC+b,OAAO,EAA2H/b,EAAE,CAACgc,IAAI,EAAoIhc,EAAE,CAACic,gBAAgB,EAA2Ljc,EAAE,CAACkc,OAAO,EAAkH9a,EAAE,CAAC+a,SAAS,EAAgGlb,EAAE,CAACmb,eAAe,EAA6J5a,SAAS,EAA6FC,WAAW,EAA+FC,aAAa;EAAA;EAAA2a,MAAA;EAAAC,aAAA;EAAAC,eAAA;AAAA;AAEtsG;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAAiFrc,EAAE,CAAAsc,iBAAA,CAAQrS,WAAW,EAAc,CAAC;IACzGsO,IAAI,EAAEpY,SAAS;IACfoc,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,eAAe;MAAEheAAe,EAAEhc,uBAAuB,CAACqc,MAAM;MAAEC,SAAS,EAAE,CAAC5S,0BAA0B,CAAC;MAAEqS,aAAa,EAAE9b,iBAAiB,CAACsc,IAAI;MAAEC,IAAI,EAAE;QACtHC,KAAK,EAAE,0BAA0B;QACjC,+BAA+B,EAAE,QAAQ;QACzC,8BAA8B,EAAE,SAAS;QACzC,iCAAiC,EAAE;MACvC,CAAC;MAAEX,MAAM,EAAE,CAAC,ogEAAogE;IAAE,CAAC;EAC/hE,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE3D,IAAI,EAAEuE,QAAQ;MAAEC,UAAU,EAAE,CAAC;QAC7DxE,IAAI,EAAEjY,MAAM;QACZic,IAAI,EAAE,CAACzc,QAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAEyY,IAAI,EAAEvY,EAAE,CAACmY;IAAW,CAAC,EAAE;MAAEI,IAAI,EAAEvY,EAAE,CAACoY;IAAkB,CAAC,EAAE;MAAEG,IAAI,EAAEvY,EAAE,CAACqY;IAAS,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEuB,WAAW,EAAE,CAAC;MAC1HrB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEwM,MAAM,EAAE,CAAC;MACTwL,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEmZ,YAAY,EAAE,CAAC;MACfnB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEsZ,OAAO,EAAE,CAAC;MACVtB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEuZ,UAAU,EAAE,CAAC;MACbvB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE0L,KAAK,EAAE,CAAC;MACRsM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEwZ,WAAW,EAAE,CAAC;MACdxB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEyZ,IAAI,EAAE,CAAC;MACPzB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEgQ,SAAS,EAAE,CAAC;MACZgI,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE0Z,QAAQ,EAAE,CAAC;MACX1B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE2Z,KAAK,EAAE,CAAC;MACR3B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE4Z,SAAS,EAAE,CAAC;MACZ5B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE6Z,YAAY,EAAE,CAAC;MACf7B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE8Z,IAAI,EAAE,CAAC;MACP9B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE+Z,QAAQ,EAAE,CAAC;MACX/B,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEga,YAAY,EAAE,CAAC;MACfhC,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEwT,GAAG,EAAE,CAAC;MACNwE,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEsV,GAAG,EAAE,CAAC;MACN0C,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEuG,oBAAoB,EAAE,CAAC;MACvByR,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE0G,oBAAoB,EAAE,CAAC;MACvBsR,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEkD,mBAAmB,EAAE,CAAC;MACtB8U,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE2D,mBAAmB,EAAE,CAAC;MACtBqU,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEuP,QAAQ,EAAE,CAAC;MACXyI,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE0P,IAAI,EAAE,CAAC;MACPsI,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEiV,UAAU,EAAE,CAAC;MACb+C,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEsM,MAAM,EAAE,CAAC;MACT0L,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEyL,aAAa,EAAE,CAAC;MAChBuM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE2L,IAAI,EAAE,CAAC;MACPqM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE4L,QAAQ,EAAE,CAAC;MACXoM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE6L,eAAe,EAAE,CAAC;MAClBmM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAE8L,WAAW,EAAE,CAAC;MACdkM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEgM,iBAAiB,EAAE,CAAC;MACpBgM,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEkM,iBAAiB,EAAE,CAAC;MACpB8L,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEsO,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEyO,MAAM,EAAE,CAAC;MACTuJ,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEia,UAAU,EAAE,CAAC;MACbjC,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEka,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEkZ,SAAS,EAAE,CAAC;MACZlB,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEyG,QAAQ,EAAE,CAAC;MACXuR,IAAI,EAAEhY;IACV,CAAC,CAAC;IAAEmV,OAAO,EAAE,CAAC;MACV6C,IAAI,EAAE/X;IACV,CAAC,CAAC;IAAEuW,OAAO,EAAE,CAAC;MACVwB,IAAI,EAAE/X;IACV,CAAC,CAAC;IAAEyW,MAAM,EAAE,CAAC;MACTsB,IAAI,EAAE/X;IACV,CAAC,CAAC;IAAEuS,SAAS,EAAE,CAAC;MACZwF,IAAI,EAAE/X;IACV,CAAC,CAAC;IAAEqQ,OAAO,EAAE,CAAC;MACV0H,IAAI,EAAE/X;IACV,CAAC,CAAC;IAAE2P,KAAK,EAAE,CAAC;MACRoI,IAAI,EAAE9X,SAAS;MACf8b,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEnR,SAAS,EAAE,CAAC;MACZmN,IAAI,EAAE7X,eAAe;MACrB6b,IAAI,EAAE,CAACpb,aAAa;IACxB,CAAC;EAAE,CAAC;AAAA;AAChB,MAAM6b,iBAAiB,CAAC;AAIvBC,OAAA,GAJKD,iBAAiB;AAAApS,eAAA,CAAjBoS,iBAAiB,wBAAAE,gBAAAjF,CAAA;EAAA,YAAAA,CAAA,IACgF+E,OAAiB;AAAA;AAAApS,eAAA,CADlHoS,iBAAiB,8BAhP0Dhd,EAAE,CAAAmd,gBAAA;EAAA5E,IAAA,EAkPqByE;AAAiB;AAAApS,eAAA,CAFnHoS,iBAAiB,8BAhP0Dhd,EAAE,CAAAod,gBAAA;EAAAC,OAAA,GAmPkDtd,YAAY,EAAEmB,eAAe,EAAEH,YAAY,EAAEM,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAEH,YAAY;AAAA;AAErO;EAAA,QAAAib,SAAA,oBAAAA,SAAA,KArPiFrc,EAAE,CAAAsc,iBAAA,CAqPQU,iBAAiB,EAAc,CAAC;IAC/GzE,IAAI,EAAE5X,QAAQ;IACd4b,IAAI,EAAE,CAAC;MACCc,OAAO,EAAE,CAACtd,YAAY,EAAEmB,eAAe,EAAEH,YAAY,EAAEM,SAAS,EAAEC,WAAW,EAAEC,aAAa,CAAC;MAC7F+b,OAAO,EAAE,CAACrT,WAAW,EAAE7I,YAAY,CAAC;MACpCmc,YAAY,EAAE,CAACtT,WAAW;IAC9B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASH,0BAA0B,EAAEG,WAAW,EAAE+S,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}